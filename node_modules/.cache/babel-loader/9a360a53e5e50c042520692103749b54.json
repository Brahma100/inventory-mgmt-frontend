{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\spicy\\\\Downloads\\\\Inventory-management-17\\\\client\\\\src\\\\components\\\\auth\\\\RegisterPage.js\";\nimport React, { Component } from 'react';\nimport NotificationSystem from 'react-notification-system';\nimport { connect } from 'react-redux';\nimport './RegisterPage.css';\nimport { Prompt, withRouter } from 'react-router-dom';\nimport { loadUser, register, login, TokenExpireExtend, loginModalOpen, isBlockedF } from '../../action/authActions';\nimport { getCategories } from '../../action/categoryAction';\nimport { getItems, deleteItem } from \"../../action/itemAction\";\nimport { clearErrors } from '../../action/errorActions';\nimport AppNavbar from '../AppNavbar/AppNavbar';\nimport back from '../../assets/images/back.jpg';\nimport Footer from '../Footer/Footer';\nimport banner from '../../assets/images/LoginSVG.png';\nimport { Button, InputGroup, Col, Alert, NavLink, Modal, Form, Container, Row, Card } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport store from '../../store';\nimport Loading from '../LazyLoadingPage/Loading';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExclamationTriangle, faInfo } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst schemaLogin = yup.object({\n  email: yup.string().email('Invalid email').required(),\n  password: yup.string().min(0, 'Password must be at least 6 characters').max(24, 'Password can be maximum 24 characters').required()\n});\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\nconst schemaRegister = yup.object({\n  fname: yup.string().min(1, 'At least 1 characters').max(10, 'First Name can be maximum 10 characters').required(),\n  lname: yup.string().min(1, 'At least 1 characters').max(10, 'Last Name can be maximum 10 characters').required(),\n  city: yup.string().min(3, 'City must be at least 3 characters').max(24, 'City can be maximum 20 characters'),\n  state: yup.string().min(3, 'State must be at least 3 characters').max(24, 'State can be maximum 20 characters'),\n  country: yup.string().min(3, 'Country must be at least 3 characters').max(24, 'Country can be maximum 20 characters'),\n  postal: yup.number().integer(),\n  email: yup.string().email('Invalid email').required(),\n  password: yup.string().min(6, 'Password must be at least 6 characters').max(24, 'Password can be maximum 24 characters').required() // mobile_number:yup.number().max(9999999999,'Invalid Number').required()//.matches(phoneRegExp,\"Number is Not Like Mobile number\"),   \n\n});\n\nclass RegisterPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.notificationSystem = /*#__PURE__*/React.createRef();\n    this.state = {\n      imageURL: \"\",\n      signIn: false,\n      remember: false,\n      modal: this.props.isModalOpen,\n      // modal for adding item is false initially\n      msg: null,\n      city: '',\n      State: '',\n      country: '',\n      postal: '',\n      ip: '',\n      isBlocking: false,\n      startRender: false\n    };\n\n    this.addNotification = msg => {\n      const notification = this.notificationSystem.current;\n      notification.addNotification({\n        title: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faExclamationTriangle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 19\n          }, this), \" Server Error\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 14\n        }, this),\n        message: this.state.msg,\n        level: 'error',\n        position: 'tc',\n        autoDismiss: 5\n      });\n    };\n\n    this.handleSignIn = () => {\n      console.log(\"Sign In Toggle Called\", this.state.signIn);\n      this.setState(prevState => {\n        return {\n          signIn: !prevState.signIn\n        };\n      });\n    };\n\n    this.encodeImageFileAsURL = () => {\n      console.log(\"image uploading func. called\");\n      var filesSelected = document.getElementById(\"inputFileToLoad\").files;\n\n      if (filesSelected.length > 0) {\n        var fileToLoad = filesSelected[0];\n        var fileReader = new FileReader();\n\n        fileReader.onload = fileLoadedEvent => {\n          var srcData = fileLoadedEvent.target.result; // <--- data: base64\n\n          var newImage = document.createElement('img');\n          newImage.src = srcData;\n          this.setState({\n            imageURL: newImage.src\n          });\n        };\n\n        fileReader.readAsDataURL(fileToLoad);\n      } // return newImage.src;\n\n    };\n  }\n\n  async componentDidMount() {\n    if (this.props.history.location.state !== 'button') {\n      let authenticate = window.confirm(\"You Need To Login To Get Full Access of ShopperZ\");\n\n      if (!authenticate) {\n        this.props.history.push('/');\n      }\n    }\n\n    let response = await fetch(`https://geolocation-db.com/json/`);\n    let ipData = await response.json();\n    this.setState({\n      ip: ipData.IPv4,\n      city: ipData.city,\n      country: ipData.country_name,\n      postal: ipData.postal,\n      State: ipData.state\n    }); // console.log(\"City:\",this.state.city);  \n  }\n\n  componentWillMount() {\n    store.dispatch(loadUser());\n    console.log(\"Action Login Page:\", this.props.history);\n\n    if (this.props.history.action === 'POP') {\n      setTimeout(() => {\n        console.log(\"timeout\");\n\n        if (this.props.isAuthenticated) {\n          this.props.history.push('/'); // this.props.loginModalOpen(true);\n        }\n      }, 50);\n    } else if (this.props.isAuthenticated) {\n      console.log(\"Direct\");\n      this.props.history.push('/'); // this.props.loginModalOpen(true);\n    }\n\n    setTimeout(() => {\n      this.setState({\n        startRender: true\n      });\n    }, 60);\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      error,\n      isAuthenticated\n    } = this.props;\n\n    if (error !== prevProps.error) {\n      if (error.id === \"REGISTER_FAIL\") {\n        this.setState({\n          msg: error.msg.msg\n        });\n        this.setState({\n          isBlocking: true\n        });\n        this.addNotification(this.state.msg);\n      } else if (error.id === \"LOGIN_FAIL\") {\n        this.setState({\n          msg: error.msg.msg\n        });\n        this.setState({\n          isBlocking: true\n        });\n        setTimeout(() => {\n          this.addNotification(this.state.msg ? this.state.msg : \"Something Went Wrong\");\n        }, 60); // console.log(\"Error R:\",error.msg.msg,this.state.msg);\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    }\n\n    store.dispatch(loadUser());\n\n    if (this.props.isAuthenticated) {\n      console.log(\"update Component\");\n      this.props.history.push('/'); // this.props.loginModalOpen(true);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NotificationSystem, {\n        ref: this.notificationSystem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), !this.state.startRender ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 36\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          style: {\n            alignItems: 'center',\n            backgroundImage: `url(\"${back}\")`,\n            backgroundSize: '100%',\n            backgroundRepeat: 'no-repeat'\n          },\n          children: [/*#__PURE__*/_jsxDEV(AppNavbar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Container, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content\",\n              children: /*#__PURE__*/_jsxDEV(Container, {\n                fluid: true,\n                children: [/*#__PURE__*/_jsxDEV(Prompt, {\n                  when: this.state.isBlocking,\n                  message: location => `Are You Sure Want To Go To ${location.pathname}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: 6,\n                    children: /*#__PURE__*/_jsxDEV(Card, {\n                      style: {\n                        marginTop: '5rem'\n                      },\n                      children: this.state.signIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              display: 'flex',\n                              flexDirection: 'column',\n                              alignItems: 'center'\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(\"h7\", {\n                              style: {\n                                fontSize: '22px'\n                              },\n                              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                                children: \"Create a New Account\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 204,\n                                columnNumber: 68\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 204,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              style: {\n                                fontSize: '14px',\n                                color: 'rgba(59,62,102,.5)'\n                              },\n                              children: \"Start benefiting from our tools right away\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 205,\n                              columnNumber: 35\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 203,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 201,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                          children: /*#__PURE__*/_jsxDEV(Formik // validator={() => ({})}\n                          , {\n                            validationSchema: schemaRegister,\n                            initialValues: {\n                              fname: '',\n                              lname: '',\n                              email: '',\n                              password: '',\n                              city: this.state.city,\n                              state: this.state.State,\n                              postal: this.state.postal,\n                              country: this.state.country // mobile_number:''\n\n                            },\n                            onSubmit: values => {\n                              this.encodeImageFileAsURL();\n                              const imageURL = this.state.imageURL;\n                              console.log(\"Image URL\", imageURL);\n                              const {\n                                fname,\n                                lname,\n                                email,\n                                password,\n                                city,\n                                state,\n                                postal,\n                                country\n                              } = values;\n                              let img = this.state.imageURL;\n                              let ip = this.state.ip;\n                              const newUser = {\n                                fname,\n                                lname,\n                                email,\n                                password,\n                                img,\n                                city: city || this.state.city,\n                                state: state || this.state.State,\n                                postal: postal || this.state.postal,\n                                country: country || this.state.country,\n                                ip\n                              };\n                              console.log(newUser);\n                              this.setState({\n                                isBlocking: false\n                              }); // console.log(\"Update:\",this.state.isBlocking);\n\n                              this.props.register(newUser);\n                            },\n                            children: ({\n                              handleSubmit,\n                              handleChange,\n                              values,\n                              errors\n                            }) => /*#__PURE__*/_jsxDEV(Form, {\n                              noValidate: true,\n                              onSubmit: handleSubmit,\n                              children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n                                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                                  as: Col,\n                                  md: \"6\",\n                                  controlId: \"validationFormik01\",\n                                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                                    children: \"First Name\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 256,\n                                    columnNumber: 43\n                                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                                    type: \"text\",\n                                    placeholder: \"First Name\",\n                                    name: \"fname\",\n                                    value: values.fname // onChangeCapture={(e)=>this.setState({isBlocking:e.target.value>0})}\n                                    ,\n                                    onChange: e => {\n                                      this.setState({\n                                        isBlocking: e.target.value.length > 0\n                                      });\n                                      handleChange(e);\n                                    },\n                                    isInvalid: !!errors.fname\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 258,\n                                    columnNumber: 43\n                                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                                    type: \"invalid\",\n                                    children: errors.fname\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 267,\n                                    columnNumber: 43\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 254,\n                                  columnNumber: 41\n                                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                                  as: Col,\n                                  md: \"6\",\n                                  controlId: \"validationFormik01\",\n                                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                                    children: \"Last Name\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 272,\n                                    columnNumber: 43\n                                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                                    type: \"text\",\n                                    placeholder: \"Last Name\",\n                                    name: \"lname\",\n                                    value: values.lname,\n                                    onChange: e => {\n                                      this.setState({\n                                        isBlocking: e.target.value.length > 0\n                                      });\n                                      handleChange(e);\n                                    },\n                                    isInvalid: !!errors.lname\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 273,\n                                    columnNumber: 43\n                                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                                    type: \"invalid\",\n                                    children: errors.lname\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 281,\n                                    columnNumber: 43\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 271,\n                                  columnNumber: 41\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 253,\n                                columnNumber: 39\n                              }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                                  as: Col,\n                                  md: \"12\",\n                                  controlId: \"validationFormik02\",\n                                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                                    children: \"Email ID\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 290,\n                                    columnNumber: 43\n                                  }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                                    children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                                      children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                                        id: \"inputGroupPrepend\",\n                                        children: \"@\"\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 293,\n                                        columnNumber: 47\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 292,\n                                      columnNumber: 45\n                                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                                      type: \"text\",\n                                      placeholder: \"Email ID\",\n                                      \"aria-describedby\": \"inputGroupPrepend\",\n                                      name: \"email\",\n                                      value: values.email,\n                                      onChange: e => {\n                                        this.setState({\n                                          isBlocking: e.target.value.length > 0\n                                        });\n                                        handleChange(e);\n                                      },\n                                      isInvalid: !!errors.email\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 295,\n                                      columnNumber: 45\n                                    }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                                      type: \"invalid\",\n                                      children: errors.email\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 304,\n                                      columnNumber: 45\n                                    }, this)]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 291,\n                                    columnNumber: 43\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 289,\n                                  columnNumber: 41\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 288,\n                                columnNumber: 39\n                              }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                                  as: Col,\n                                  md: \"12\",\n                                  controlId: \"validationFormik03\",\n                                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                                    children: \"Password\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 313,\n                                    columnNumber: 43\n                                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                                    type: \"password\",\n                                    placeholder: \"Password\",\n                                    name: \"password\",\n                                    value: values.password,\n                                    onChange: e => {\n                                      this.setState({\n                                        isBlocking: e.target.value.length > 0\n                                      });\n                                      handleChange(e);\n                                    },\n                                    isInvalid: !!errors.password\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 314,\n                                    columnNumber: 43\n                                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                                    type: \"invalid\",\n                                    children: errors.password\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 322,\n                                    columnNumber: 43\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 312,\n                                  columnNumber: 41\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 311,\n                                columnNumber: 39\n                              }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                                  as: Col,\n                                  md: \"6\",\n                                  controlId: \"validationFormik03\",\n                                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                                    children: \"City\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 331,\n                                    columnNumber: 43\n                                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                                    type: \"text\",\n                                    placeholder: \"City\",\n                                    name: \"city\",\n                                    value: values.city ? values.city : this.state.city,\n                                    onChange: e => {\n                                      this.setState({\n                                        isBlocking: e.target.value.length > 0\n                                      });\n                                      handleChange(e);\n                                    },\n                                    isInvalid: !!errors.city\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 332,\n                                    columnNumber: 43\n                                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                                    type: \"invalid\",\n                                    children: errors.city\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 340,\n                                    columnNumber: 43\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 330,\n                                  columnNumber: 41\n                                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                                  as: Col,\n                                  md: \"6\",\n                                  controlId: \"validationFormik03\",\n                                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                                    children: \"State\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 345,\n                                    columnNumber: 43\n                                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                                    disabled: true,\n                                    type: \"text\",\n                                    placeholder: \"State\",\n                                    name: \"state\",\n                                    value: values.state ? values.state : this.state.State,\n                                    onChange: e => {\n                                      this.setState({\n                                        isBlocking: e.target.value.length > 0\n                                      });\n                                      handleChange(e);\n                                    },\n                                    isInvalid: !!errors.state\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 346,\n                                    columnNumber: 43\n                                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                                    type: \"invalid\",\n                                    children: errors.state\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 355,\n                                    columnNumber: 43\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 344,\n                                  columnNumber: 41\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 329,\n                                columnNumber: 39\n                              }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                                  as: Col,\n                                  md: \"6\",\n                                  controlId: \"validationFormik03\",\n                                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                                    children: \"Postal\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 362,\n                                    columnNumber: 43\n                                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                                    type: \"number\",\n                                    placeholder: \"Postal\",\n                                    name: \"postal\",\n                                    value: values.postal ? values.postal : this.state.postal,\n                                    onChange: e => {\n                                      this.setState({\n                                        isBlocking: e.target.value.length > 0\n                                      });\n                                      handleChange(e);\n                                    },\n                                    isInvalid: !!errors.postal\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 363,\n                                    columnNumber: 43\n                                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                                    type: \"invalid\",\n                                    children: errors.postal\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 372,\n                                    columnNumber: 43\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 361,\n                                  columnNumber: 41\n                                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                                  as: Col,\n                                  md: \"6\",\n                                  controlId: \"validationFormik03\",\n                                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                                    children: \"Country\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 377,\n                                    columnNumber: 43\n                                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                                    disabled: true,\n                                    type: \"text\",\n                                    placeholder: \"Country\",\n                                    name: \"country\",\n                                    value: values.country ? values.country : this.state.country,\n                                    onChange: e => {\n                                      this.setState({\n                                        isBlocking: e.target.value.length > 0\n                                      });\n                                      handleChange(e);\n                                    },\n                                    isInvalid: !!errors.country\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 378,\n                                    columnNumber: 43\n                                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                                    type: \"invalid\",\n                                    children: errors.country\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 387,\n                                    columnNumber: 43\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 376,\n                                  columnNumber: 41\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 360,\n                                columnNumber: 39\n                              }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                                  as: Col,\n                                  md: \"12\",\n                                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                    className: \"mb-3\",\n                                    children: /*#__PURE__*/_jsxDEV(Form.File, {\n                                      id: \"formcheck-api-regular\",\n                                      children: [/*#__PURE__*/_jsxDEV(Form.File.Label, {\n                                        children: \"Profile Image \"\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 411,\n                                        columnNumber: 47\n                                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                                        id: \"inputFileToLoad\",\n                                        type: \"file\",\n                                        onChange: this.encodeImageFileAsURL\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 412,\n                                        columnNumber: 47\n                                      }, this)]\n                                    }, void 0, true, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 410,\n                                      columnNumber: 45\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 409,\n                                    columnNumber: 43\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 408,\n                                  columnNumber: 41\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 407,\n                                columnNumber: 39\n                              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                                type: \"submit\",\n                                children: \"Register\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 436,\n                                columnNumber: 39\n                              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                                defaultChecked: this.state.remember,\n                                style: {\n                                  marginLeft: '1rem',\n                                  marginTop: '.5rem'\n                                },\n                                type: \"checkbox\",\n                                onChange: this.handleCheckboxChange\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 438,\n                                columnNumber: 39\n                              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                children: \"  Remember me!\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 438,\n                                columnNumber: 189\n                              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                style: {},\n                                className: \"forgot-password text-right\",\n                                children: [\"Already registered \", /*#__PURE__*/_jsxDEV(\"span\", {\n                                  onClick: this.handleSignIn,\n                                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                                    children: /*#__PURE__*/_jsxDEV(\"b\", {\n                                      children: \"Sign in?\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 440,\n                                      columnNumber: 99\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 440,\n                                    columnNumber: 95\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 440,\n                                  columnNumber: 60\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 439,\n                                columnNumber: 39\n                              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                id: \"imgTest\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 442,\n                                columnNumber: 39\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 251,\n                              columnNumber: 37\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 210,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 209,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              display: 'flex',\n                              flexDirection: 'column',\n                              alignItems: 'center'\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(\"h7\", {\n                              style: {\n                                fontSize: '22px'\n                              },\n                              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                                children: \"Login Now\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 451,\n                                columnNumber: 68\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 451,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              style: {\n                                fontSize: '14px',\n                                color: 'rgba(59,62,102,.5)'\n                              },\n                              children: \"Login To Continue The Contribution with Our Advanced Tools!!\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 452,\n                              columnNumber: 35\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 450,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 449,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                          children: /*#__PURE__*/_jsxDEV(Formik, {\n                            validationSchema: schemaLogin,\n                            initialValues: {\n                              email: '',\n                              password: ''\n                            },\n                            onSubmit: values => {\n                              this.setState({\n                                isBlocking: false\n                              });\n                              console.log(\"Update:\", this.state.isBlocking);\n                              const {\n                                email,\n                                password\n                              } = values;\n                              const user = {\n                                email,\n                                password\n                              };\n                              this.props.login(user);\n                            },\n                            children: ({\n                              handleSubmit,\n                              handleChange,\n                              values,\n                              errors,\n                              touched\n                            }) => /*#__PURE__*/_jsxDEV(Form, {\n                              noValidate: true,\n                              onSubmit: handleSubmit,\n                              children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n                                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                                  as: Col,\n                                  md: \"12\",\n                                  controlId: \"validationFormik02\",\n                                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                                    children: \"Email ID\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 487,\n                                    columnNumber: 43\n                                  }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                                    children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                                      children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                                        id: \"inputGroupPrepend\",\n                                        children: \"@\"\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 490,\n                                        columnNumber: 47\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 489,\n                                      columnNumber: 45\n                                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                                      type: \"text\",\n                                      placeholder: \"Email ID\",\n                                      \"aria-describedby\": \"inputGroupPrepend\",\n                                      name: \"email\",\n                                      value: values.email,\n                                      onChange: e => {\n                                        this.setState({\n                                          isBlocking: e.target.value.length > 0\n                                        });\n                                        handleChange(e);\n                                      },\n                                      isInvalid: !!errors.email\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 492,\n                                      columnNumber: 45\n                                    }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                                      children: \"Looks good!\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 501,\n                                      columnNumber: 45\n                                    }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                                      type: \"invalid\",\n                                      children: touched.email && errors.email\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 502,\n                                      columnNumber: 45\n                                    }, this)]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 488,\n                                    columnNumber: 43\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 486,\n                                  columnNumber: 41\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 485,\n                                columnNumber: 39\n                              }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                                  as: Col,\n                                  md: \"12\",\n                                  controlId: \"validationFormik03\",\n                                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                                    children: \"Password\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 512,\n                                    columnNumber: 43\n                                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                                    type: \"password\",\n                                    placeholder: \"Password\",\n                                    name: \"password\",\n                                    value: values.password,\n                                    onChange: e => {\n                                      this.setState({\n                                        isBlocking: e.target.value.length > 0\n                                      });\n                                      handleChange(e);\n                                    },\n                                    isInvalid: !!errors.password\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 513,\n                                    columnNumber: 43\n                                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                                    children: \"Looks good!\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 521,\n                                    columnNumber: 43\n                                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                                    type: \"invalid\",\n                                    children: touched.password && errors.password\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 522,\n                                    columnNumber: 43\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 511,\n                                  columnNumber: 41\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 509,\n                                columnNumber: 39\n                              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                                type: \"submit\",\n                                children: \"Login\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 539,\n                                columnNumber: 39\n                              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                                defaultChecked: this.state.remember,\n                                style: {\n                                  marginLeft: '1rem',\n                                  marginTop: '.5rem'\n                                },\n                                type: \"checkbox\",\n                                onChange: this.handleCheckboxChange\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 540,\n                                columnNumber: 39\n                              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                children: \"  Remember me!\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 540,\n                                columnNumber: 189\n                              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                style: {\n                                  marginTop: '1rem'\n                                },\n                                className: \"forgot-password text-right\",\n                                children: [\"Don't have an account?  \", /*#__PURE__*/_jsxDEV(\"span\", {\n                                  onClick: this.handleSignIn,\n                                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                                    children: /*#__PURE__*/_jsxDEV(\"b\", {\n                                      children: \"Create an Account\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 542,\n                                      columnNumber: 103\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 542,\n                                    columnNumber: 100\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 542,\n                                  columnNumber: 65\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 541,\n                                columnNumber: 39\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 482,\n                              columnNumber: 37\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 456,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 455,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 198,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: 6,\n                    children: /*#__PURE__*/_jsxDEV(Card, {\n                      style: {\n                        marginTop: '5rem'\n                      },\n                      className: \"banner-card \",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"banner\",\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          alt: \"alt\",\n                          src: banner\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 559,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 558,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 557,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 556,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    categories: state.category.categories,\n    isAuthenticated: state.auth.isAuthenticated,\n    isBlocked: state.auth.isBlocked,\n    isLoading: state.auth.isLoading,\n    user: state.auth.user,\n    products: state.item.items,\n    itemsLoading: state.item.itemsLoading,\n    itemsLoaded: state.item.itemsLoaded,\n    error: state.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loadUser,\n  loginModalOpen,\n  getItems,\n  deleteItem,\n  getCategories,\n  login,\n  register,\n  clearErrors\n})(withRouter(RegisterPage));","map":{"version":3,"sources":["C:/Users/spicy/Downloads/Inventory-management-17/client/src/components/auth/RegisterPage.js"],"names":["React","Component","NotificationSystem","connect","Prompt","withRouter","loadUser","register","login","TokenExpireExtend","loginModalOpen","isBlockedF","getCategories","getItems","deleteItem","clearErrors","AppNavbar","back","Footer","banner","Button","InputGroup","Col","Alert","NavLink","Modal","Form","Container","Row","Card","PropTypes","Formik","yup","store","Loading","FontAwesomeIcon","faExclamationTriangle","faInfo","schemaLogin","object","email","string","required","password","min","max","phoneRegExp","schemaRegister","fname","lname","city","state","country","postal","number","integer","RegisterPage","notificationSystem","createRef","imageURL","signIn","remember","modal","props","isModalOpen","msg","State","ip","isBlocking","startRender","addNotification","notification","current","title","message","level","position","autoDismiss","handleSignIn","console","log","setState","prevState","encodeImageFileAsURL","filesSelected","document","getElementById","files","length","fileToLoad","fileReader","FileReader","onload","fileLoadedEvent","srcData","target","result","newImage","createElement","src","readAsDataURL","componentDidMount","history","location","authenticate","window","confirm","push","response","fetch","ipData","json","IPv4","country_name","componentWillMount","dispatch","action","setTimeout","isAuthenticated","componentDidUpdate","prevProps","error","id","render","alignItems","backgroundImage","backgroundSize","backgroundRepeat","pathname","marginTop","display","flexDirection","fontSize","color","values","img","newUser","handleSubmit","handleChange","errors","e","value","marginLeft","handleCheckboxChange","user","touched","mapStateToProps","categories","category","auth","isBlocked","isLoading","products","item","items","itemsLoading","itemsLoaded"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport NotificationSystem from 'react-notification-system';\r\nimport { connect } from 'react-redux';\r\nimport './RegisterPage.css'\r\nimport { Prompt, withRouter } from 'react-router-dom';\r\n\r\nimport { loadUser, register, login, TokenExpireExtend, loginModalOpen, isBlockedF } from '../../action/authActions';\r\nimport { getCategories } from '../../action/categoryAction';\r\nimport { getItems, deleteItem } from \"../../action/itemAction\";\r\nimport { clearErrors } from '../../action/errorActions';\r\nimport AppNavbar from '../AppNavbar/AppNavbar';\r\nimport back from '../../assets/images/back.jpg'\r\nimport Footer from '../Footer/Footer';\r\n\r\nimport banner from '../../assets/images/LoginSVG.png'\r\n\r\n\r\nimport { Button, InputGroup, Col, Alert, NavLink, Modal, Form, Container, Row, Card } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport store from '../../store';\r\nimport Loading from '../LazyLoadingPage/Loading';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faExclamationTriangle, faInfo } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nconst schemaLogin = yup.object({\r\n  email: yup.string().email('Invalid email').required(),\r\n  password: yup.string().min(0, 'Password must be at least 6 characters').max(24, 'Password can be maximum 24 characters').required()\r\n})\r\n\r\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\r\n\r\n\r\nconst schemaRegister = yup.object({\r\n  fname: yup.string().min(1, 'At least 1 characters').max(10, 'First Name can be maximum 10 characters').required(),\r\n  lname: yup.string().min(1, 'At least 1 characters').max(10, 'Last Name can be maximum 10 characters').required(),\r\n  city: yup.string().min(3, 'City must be at least 3 characters').max(24, 'City can be maximum 20 characters'),\r\n  state: yup.string().min(3, 'State must be at least 3 characters').max(24, 'State can be maximum 20 characters'),\r\n  country: yup.string().min(3, 'Country must be at least 3 characters').max(24, 'Country can be maximum 20 characters'),\r\n  postal: yup.number().integer(),\r\n  email: yup.string().email('Invalid email').required(),\r\n  password: yup.string().min(6, 'Password must be at least 6 characters').max(24, 'Password can be maximum 24 characters').required(),\r\n  // mobile_number:yup.number().max(9999999999,'Invalid Number').required()//.matches(phoneRegExp,\"Number is Not Like Mobile number\"),   \r\n})\r\n\r\n\r\nclass RegisterPage extends Component {\r\n\r\n  notificationSystem = React.createRef();\r\n\r\n  state = {\r\n    imageURL: \"\",\r\n    signIn: false,\r\n    remember: false,\r\n    modal: this.props.isModalOpen,   // modal for adding item is false initially\r\n    msg: null,\r\n    city: '',\r\n    State: '',\r\n    country: '',\r\n    postal: '',\r\n    ip: '',\r\n    isBlocking: false,\r\n    startRender: false\r\n  };\r\n\r\n  addNotification = msg => {\r\n    const notification = this.notificationSystem.current;\r\n    notification.addNotification({\r\n      title: <div><FontAwesomeIcon icon={faExclamationTriangle} /> Server Error</div>,\r\n      message: this.state.msg,\r\n      level: 'error',\r\n      position: 'tc',\r\n      autoDismiss: 5\r\n    });\r\n  };\r\n\r\n  async componentDidMount() {\r\n    if (this.props.history.location.state !== 'button') {\r\n      let authenticate = window.confirm(\"You Need To Login To Get Full Access of ShopperZ\")\r\n      if (!authenticate) {\r\n        this.props.history.push('/')\r\n      }\r\n    }\r\n    let response = await fetch(`https://geolocation-db.com/json/`)\r\n    let ipData = await response.json();\r\n\r\n    this.setState({ ip: ipData.IPv4, city: ipData.city, country: ipData.country_name, postal: ipData.postal, State: ipData.state })\r\n    // console.log(\"City:\",this.state.city);  \r\n  }\r\n\r\n\r\n  componentWillMount() {\r\n    store.dispatch(loadUser());\r\n    console.log(\"Action Login Page:\", this.props.history);\r\n    if (this.props.history.action === 'POP') {\r\n      setTimeout(() => {\r\n        console.log(\"timeout\");\r\n        if (this.props.isAuthenticated) {\r\n          this.props.history.push('/')\r\n          // this.props.loginModalOpen(true);\r\n        }\r\n      }, 50)\r\n    }\r\n    else\r\n      if (this.props.isAuthenticated) {\r\n        console.log(\"Direct\");\r\n        this.props.history.push('/')\r\n        // this.props.loginModalOpen(true);\r\n      }\r\n    setTimeout(() => {\r\n      this.setState({ startRender: true })\r\n    }, 60)\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n\r\n    const { error, isAuthenticated } = this.props;\r\n    if (error !== prevProps.error) {\r\n      if (error.id === \"REGISTER_FAIL\") {\r\n        this.setState({ msg: error.msg.msg });\r\n        this.setState({ isBlocking: true });\r\n        this.addNotification(this.state.msg);\r\n      }\r\n      else if (error.id === \"LOGIN_FAIL\") {\r\n        this.setState({ msg: error.msg.msg });\r\n        this.setState({ isBlocking: true });\r\n        setTimeout(() => {\r\n\r\n          this.addNotification(this.state.msg ? this.state.msg : \"Something Went Wrong\");\r\n        }, 60);\r\n        // console.log(\"Error R:\",error.msg.msg,this.state.msg);\r\n      }\r\n      else {\r\n        this.setState({ msg: null });\r\n\r\n      }\r\n    }\r\n\r\n\r\n    store.dispatch(loadUser());\r\n    if (this.props.isAuthenticated) {\r\n\r\n      console.log(\"update Component\");\r\n      this.props.history.push('/')\r\n      // this.props.loginModalOpen(true);\r\n    }\r\n  }\r\n\r\n  handleSignIn = () => {\r\n    console.log(\"Sign In Toggle Called\", this.state.signIn);\r\n    this.setState((prevState) => {\r\n      return { signIn: !prevState.signIn }\r\n    })\r\n  }\r\n  encodeImageFileAsURL = () => {\r\n    console.log(\"image uploading func. called\");\r\n    var filesSelected = document.getElementById(\"inputFileToLoad\").files;\r\n    if (filesSelected.length > 0) {\r\n      var fileToLoad = filesSelected[0];\r\n\r\n      var fileReader = new FileReader();\r\n\r\n      fileReader.onload = (fileLoadedEvent) => {\r\n        var srcData = fileLoadedEvent.target.result; // <--- data: base64\r\n\r\n        var newImage = document.createElement('img');\r\n        newImage.src = srcData;\r\n        this.setState({ imageURL: newImage.src });\r\n\r\n\r\n      }\r\n      fileReader.readAsDataURL(fileToLoad);\r\n    }\r\n    // return newImage.src;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n      <>\r\n        <NotificationSystem ref={this.notificationSystem} />\r\n        {!this.state.startRender ? <Loading /> :\r\n          <div>\r\n            <div className=\"App\" style={{ alignItems: 'center', backgroundImage: `url(\"${back}\")`,backgroundSize:'100%', backgroundRepeat: 'no-repeat' }} >\r\n              <AppNavbar />\r\n\r\n              <Container>\r\n                <div className=\"content\" >\r\n                  <Container fluid>\r\n                    <Prompt\r\n                      when={this.state.isBlocking}\r\n                      message={(location) => `Are You Sure Want To Go To ${location.pathname}`}\r\n                    />\r\n                    <Row>\r\n\r\n                      <Col md={6} >\r\n                        <Card style={{ marginTop: '5rem' }} >\r\n                          {this.state.signIn ?\r\n                            <>\r\n                              <Card.Header >\r\n\r\n                                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                                  <h7 style={{ fontSize: '22px' }}><b>Create a New Account</b></h7>\r\n                                  <span style={{ fontSize: '14px', color: 'rgba(59,62,102,.5)' }}>Start benefiting from our tools right away</span>\r\n                                </div>\r\n                                {/* {this.state.msg?<Alert color=\"danger\">{this.state.msg}</Alert>:null}    */}\r\n                              </Card.Header>\r\n                              <Card.Body>\r\n                                <Formik\r\n                                  // validator={() => ({})}\r\n                                  validationSchema={schemaRegister}\r\n                                  initialValues={{\r\n                                    fname: '',\r\n                                    lname: '',\r\n                                    email: '',\r\n                                    password: '',\r\n                                    city: this.state.city,\r\n                                    state: this.state.State,\r\n                                    postal: this.state.postal,\r\n                                    country: this.state.country,\r\n                                    // mobile_number:''\r\n\r\n                                  }}\r\n                                  onSubmit={(values) => {\r\n\r\n                                    this.encodeImageFileAsURL();\r\n                                    const imageURL = this.state.imageURL;\r\n                                    console.log(\"Image URL\", imageURL);\r\n                                    const { fname, lname, email, password, city, state, postal, country } = values;\r\n                                    let img = this.state.imageURL;\r\n                                    let ip = this.state.ip;\r\n                                    const newUser = {\r\n                                      fname, lname, email, password, img,city: city || this.state.city , state: state || this.state.State, postal:postal||this.state.postal, country:country||this.state.country, ip\r\n                                    }\r\n                                    console.log(newUser);\r\n                                    this.setState({ isBlocking: false });\r\n                                    // console.log(\"Update:\",this.state.isBlocking);\r\n                                    this.props.register(newUser);\r\n\r\n                                  }\r\n                                  }\r\n                                >\r\n\r\n                                  {({\r\n                                    handleSubmit,\r\n                                    handleChange,\r\n                                    values,\r\n                                    errors,\r\n                                  }) => (\r\n                                    <Form noValidate onSubmit={handleSubmit}>\r\n\r\n                                      <Form.Row>\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationFormik01\">\r\n\r\n                                          <Form.Label>First Name</Form.Label>\r\n\r\n                                          <Form.Control\r\n                                            type=\"text\"\r\n                                            placeholder=\"First Name\"\r\n                                            name=\"fname\"\r\n                                            value={values.fname}\r\n                                            // onChangeCapture={(e)=>this.setState({isBlocking:e.target.value>0})}\r\n                                            onChange={e => { this.setState({ isBlocking: e.target.value.length > 0 }); handleChange(e) }}\r\n                                            isInvalid={!!errors.fname}\r\n                                          />\r\n                                          <Form.Control.Feedback type=\"invalid\">\r\n                                            {errors.fname}\r\n                                          </Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationFormik01\">\r\n                                          <Form.Label>Last Name</Form.Label>\r\n                                          <Form.Control\r\n                                            type=\"text\"\r\n                                            placeholder=\"Last Name\"\r\n                                            name=\"lname\"\r\n                                            value={values.lname}\r\n                                            onChange={e => { this.setState({ isBlocking: e.target.value.length > 0 }); handleChange(e) }}\r\n                                            isInvalid={!!errors.lname}\r\n                                          />\r\n                                          <Form.Control.Feedback type=\"invalid\">\r\n                                            {errors.lname}\r\n                                          </Form.Control.Feedback>\r\n                                        </Form.Group>\r\n\r\n\r\n                                      </Form.Row>\r\n                                      <Form.Row>\r\n                                        <Form.Group as={Col} md=\"12\" controlId=\"validationFormik02\">\r\n                                          <Form.Label>Email ID</Form.Label>\r\n                                          <InputGroup>\r\n                                            <InputGroup.Prepend>\r\n                                              <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n                                            </InputGroup.Prepend>\r\n                                            <Form.Control\r\n                                              type=\"text\"\r\n                                              placeholder=\"Email ID\"\r\n                                              aria-describedby=\"inputGroupPrepend\"\r\n                                              name=\"email\"\r\n                                              value={values.email}\r\n                                              onChange={e => { this.setState({ isBlocking: e.target.value.length > 0 }); handleChange(e) }}\r\n                                              isInvalid={!!errors.email}\r\n                                            />\r\n                                            <Form.Control.Feedback type=\"invalid\">\r\n                                              {errors.email}\r\n                                            </Form.Control.Feedback>\r\n                                          </InputGroup>\r\n                                        </Form.Group>\r\n                                      </Form.Row>\r\n\r\n                                      <Form.Row>\r\n                                        <Form.Group as={Col} md=\"12\" controlId=\"validationFormik03\">\r\n                                          <Form.Label>Password</Form.Label>\r\n                                          <Form.Control\r\n                                            type=\"password\"\r\n                                            placeholder=\"Password\"\r\n                                            name=\"password\"\r\n                                            value={values.password}\r\n                                            onChange={e => { this.setState({ isBlocking: e.target.value.length > 0 }); handleChange(e) }}\r\n                                            isInvalid={!!errors.password}\r\n                                          />\r\n                                          <Form.Control.Feedback type=\"invalid\">\r\n                                            {errors.password}\r\n                                          </Form.Control.Feedback>\r\n                                        </Form.Group>\r\n\r\n                                      </Form.Row>\r\n\r\n                                      <Form.Row>\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\">\r\n                                          <Form.Label>City</Form.Label>\r\n                                          <Form.Control\r\n                                            type=\"text\"\r\n                                            placeholder=\"City\"\r\n                                            name=\"city\"\r\n                                            value={values.city ? values.city : this.state.city}\r\n                                            onChange={e => { this.setState({ isBlocking: e.target.value.length > 0 }); handleChange(e) }}\r\n                                            isInvalid={!!errors.city}\r\n                                          />\r\n                                          <Form.Control.Feedback type=\"invalid\">\r\n                                            {errors.city}\r\n                                          </Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\">\r\n                                          <Form.Label>State</Form.Label>\r\n                                          <Form.Control\r\n                                            disabled\r\n                                            type=\"text\"\r\n                                            placeholder=\"State\"\r\n                                            name=\"state\"\r\n                                            value={values.state ? values.state : this.state.State}\r\n                                            onChange={e => { this.setState({ isBlocking: e.target.value.length > 0 }); handleChange(e) }}\r\n                                            isInvalid={!!errors.state}\r\n                                          />\r\n                                          <Form.Control.Feedback type=\"invalid\">\r\n                                            {errors.state}\r\n                                          </Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                      </Form.Row>\r\n                                      <Form.Row>\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\">\r\n                                          <Form.Label>Postal</Form.Label>\r\n                                          <Form.Control\r\n\r\n                                            type=\"number\"\r\n                                            placeholder=\"Postal\"\r\n                                            name=\"postal\"\r\n                                            value={values.postal ? values.postal : this.state.postal}\r\n                                            onChange={e => { this.setState({ isBlocking: e.target.value.length > 0 }); handleChange(e) }}\r\n                                            isInvalid={!!errors.postal}\r\n                                          />\r\n                                          <Form.Control.Feedback type=\"invalid\">\r\n                                            {errors.postal}\r\n                                          </Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\">\r\n                                          <Form.Label>Country</Form.Label>\r\n                                          <Form.Control\r\n                                            disabled\r\n                                            type=\"text\"\r\n                                            placeholder=\"Country\"\r\n                                            name=\"country\"\r\n                                            value={values.country ? values.country : this.state.country}\r\n                                            onChange={e => { this.setState({ isBlocking: e.target.value.length > 0 }); handleChange(e) }}\r\n                                            isInvalid={!!errors.country}\r\n                                          />\r\n                                          <Form.Control.Feedback type=\"invalid\">\r\n                                            {errors.country}\r\n                                          </Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                        {/* <Form.Group as={Col} md=\"12\" controlId=\"validationFormik03\">\r\n              <Form.Label>Phone/Mobile Number</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Mobile Number\"\r\n                name=\"mobile\"\r\n                value={values.mobile_number}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.mobile_number}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.mobile_number}\r\n              </Form.Control.Feedback>\r\n            </Form.Group> */}\r\n\r\n                                      </Form.Row>\r\n                                      <Form.Row>\r\n                                        <Form.Group as={Col} md=\"12\">\r\n                                          <div className=\"mb-3\">\r\n                                            <Form.File id=\"formcheck-api-regular\">\r\n                                              <Form.File.Label>Profile Image </Form.File.Label>\r\n                                              <input id=\"inputFileToLoad\" type=\"file\" onChange={this.encodeImageFileAsURL} />\r\n                                            </Form.File>\r\n                                          </div>\r\n                                        </Form.Group>\r\n\r\n                                      </Form.Row>\r\n\r\n                                      {/* <Form.Row>\r\n          <Map\r\n                google={this.props.google}\r\n                center={{lat: 18.5204, lng: 73.8567}}\r\n                height='300px'\r\n                zoom={15}\r\n    />\r\n          </Form.Row>\r\n          <Form.Row>\r\n         \r\n          </Form.Row>\r\n          <Form.Row>\r\n         \r\n          </Form.Row>\r\n          <Form.Row style={{marginBottom:'10rem'}}>\r\n         <p>Hello</p>\r\n          </Form.Row> */}\r\n                                      <Button type=\"submit\">Register</Button>\r\n\r\n                                      <input defaultChecked={this.state.remember} style={{ marginLeft: '1rem', marginTop: '.5rem' }} type=\"checkbox\" onChange={this.handleCheckboxChange} /><span>  Remember me!</span>\r\n                                      <div style={{}} className=\"forgot-password text-right\">\r\n                                        Already registered <span onClick={this.handleSignIn} ><a ><b>Sign in?</b></a></span>\r\n                                      </div>\r\n                                      <div id=\"imgTest\"></div>\r\n                                    </Form>\r\n\r\n                                  )}\r\n                                </Formik>\r\n                              </Card.Body></> :\r\n                            <>\r\n                              <Card.Header>\r\n                                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                                  <h7 style={{ fontSize: '22px' }}><b>Login Now</b></h7>\r\n                                  <span style={{ fontSize: '14px', color: 'rgba(59,62,102,.5)' }}>Login To Continue The Contribution with Our Advanced Tools!!</span>\r\n                                </div>\r\n                              </Card.Header>\r\n                              <Card.Body>\r\n                                <Formik\r\n                                  validationSchema={schemaLogin}\r\n                                  initialValues={{\r\n                                    email: '',\r\n                                    password: '',\r\n\r\n                                  }}\r\n                                  onSubmit={(values) => {\r\n                                    this.setState({ isBlocking: false });\r\n                                    console.log(\"Update:\", this.state.isBlocking);\r\n                                    const { email, password } = values;\r\n\r\n                                    const user = {\r\n                                      email, password\r\n                                    }\r\n                                    this.props.login(user);\r\n                                  }\r\n                                  }\r\n                                >\r\n                                  {({\r\n                                    handleSubmit,\r\n                                    handleChange,\r\n                                    values,\r\n                                    errors,\r\n                                    touched\r\n                                  }) => (\r\n                                    <Form noValidate onSubmit={handleSubmit}>\r\n\r\n\r\n                                      <Form.Row>\r\n                                        <Form.Group as={Col} md=\"12\" controlId=\"validationFormik02\">\r\n                                          <Form.Label>Email ID</Form.Label>\r\n                                          <InputGroup>\r\n                                            <InputGroup.Prepend>\r\n                                              <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n                                            </InputGroup.Prepend>\r\n                                            <Form.Control\r\n                                              type=\"text\"\r\n                                              placeholder=\"Email ID\"\r\n                                              aria-describedby=\"inputGroupPrepend\"\r\n                                              name=\"email\"\r\n                                              value={values.email}\r\n                                              onChange={e => { this.setState({ isBlocking: e.target.value.length > 0 }); handleChange(e) }}\r\n                                              isInvalid={!!errors.email}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            <Form.Control.Feedback type=\"invalid\">\r\n                                              {touched.email && errors.email}\r\n                                            </Form.Control.Feedback>\r\n\r\n                                          </InputGroup>\r\n                                        </Form.Group>\r\n                                      </Form.Row>\r\n                                      <Form.Row>\r\n\r\n                                        <Form.Group as={Col} md=\"12\" controlId=\"validationFormik03\">\r\n                                          <Form.Label>Password</Form.Label>\r\n                                          <Form.Control\r\n                                            type=\"password\"\r\n                                            placeholder=\"Password\"\r\n                                            name=\"password\"\r\n                                            value={values.password}\r\n                                            onChange={e => { this.setState({ isBlocking: e.target.value.length > 0 }); handleChange(e) }}\r\n                                            isInvalid={!!errors.password}\r\n                                          />\r\n                                          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                          <Form.Control.Feedback type=\"invalid\">\r\n                                            {touched.password && errors.password}\r\n                                          </Form.Control.Feedback>\r\n                                        </Form.Group>\r\n\r\n                                      </Form.Row>\r\n                                      {/* <Form.Group>\r\n                                <Form.Check\r\n                                required\r\n                                name=\"terms\"\r\n                                label=\"Agree to terms and conditions\"\r\n                                onChange={e=>{this.setState({isBlocking:e.target.value.length>0}); handleChange(e)}}\r\n                                isInvalid={!!errors.terms}\r\n                                feedback={errors.terms}\r\n                                id=\"validationFormik0\"\r\n                                />\r\n                            </Form.Group> */}\r\n                                      <Button type=\"submit\">Login</Button>\r\n                                      <input defaultChecked={this.state.remember} style={{ marginLeft: '1rem', marginTop: '.5rem' }} type=\"checkbox\" onChange={this.handleCheckboxChange} /><span>  Remember me!</span>\r\n                                      <div style={{ marginTop: '1rem', }} className=\"forgot-password text-right\">\r\n                                        Don't have an account?  <span onClick={this.handleSignIn} ><a><b>Create an Account</b></a></span>\r\n                                      </div>\r\n                                    </Form>\r\n                                  )}\r\n                                </Formik>\r\n                              </Card.Body>\r\n                            </>}\r\n\r\n\r\n\r\n\r\n                        </Card>\r\n                      </Col>\r\n\r\n                      <Col md={6}>\r\n                        <Card style={{ marginTop: '5rem' }} className='banner-card '>\r\n                          <div className='banner'>\r\n                            <img alt=\"alt\" src={banner} />\r\n                          </div>\r\n                        </Card>\r\n                      </Col>\r\n\r\n                    </Row>\r\n\r\n\r\n                  </Container>\r\n\r\n\r\n                </div>\r\n\r\n              </Container>\r\n\r\n\r\n\r\n            </div>\r\n\r\n            <div >\r\n              <Footer />\r\n            </div>\r\n          </div>}\r\n      </>\r\n    );\r\n  }\r\n\r\n};\r\nconst mapStateToProps = state => {\r\n  return ({\r\n    categories: state.category.categories,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    isBlocked: state.auth.isBlocked,\r\n    isLoading: state.auth.isLoading,\r\n    user: state.auth.user,\r\n    products: state.item.items,\r\n    itemsLoading: state.item.itemsLoading,\r\n    itemsLoaded: state.item.itemsLoaded,\r\n    error: state.error\r\n  })\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { loadUser, loginModalOpen, getItems, deleteItem, getCategories, login, register, clearErrors })(withRouter(RegisterPage));\r\n"]},"metadata":{},"sourceType":"module"}