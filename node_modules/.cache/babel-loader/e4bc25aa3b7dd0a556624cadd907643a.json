{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\spicy\\\\Downloads\\\\Inventory-management-17\\\\client\\\\src\\\\components\\\\Order\\\\EditOrderModal.js\";\nimport React, { Component } from 'react';\nimport { Col, Alert, Button, Modal, Form, Row, Card } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { updateOrder, getOrders } from '../../action/orderAction';\nimport back from '../../assets/images/back.jpg';\nimport { loginModalOpen } from '../../action/authActions';\nimport { clearErrors } from '../../action/errorActions';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst schemaOrder = yup.object({\n  quantity: yup.number().positive().integer().min(1, \"Price Should be More Than 1\").max(1000, \"Price Should be Less Than 500K\"),\n  payment1: yup.number().positive().integer().min(1, \"Choose Any Payment Status\")\n});\n\nclass EditOrderModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      // modal for adding item is false initially\n      product_id: '',\n      customer_id: '',\n      by_user_id: '',\n      quantity: 0,\n      total: 0,\n      payment: 0,\n      msg: null,\n      isUpdate: false\n    };\n\n    this.toggle = () => {\n      // clear the error\n      this.props.clearErrors(); // to toggle the modal \n\n      console.log(\"Props\", this.props); // if(!this.props.isAuthenticated){\n      //     console.log(\"Authen\");\n      //     this.props.history.push('/')\n      //     this.props.loginModalOpen(true);\n      // }\n      // console.log(\"from Toggle-> Modal Open:: \"+this.state.modal)\n      // else\n\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    // this.props.loadUser();\n    const {\n      id,\n      product_id,\n      customer_id,\n      by_user_id,\n      quantity,\n      total,\n      payment\n    } = this.props.order;\n    this.setState({\n      product_id: product_id,\n      customer_id: customer_id,\n      quantity: quantity,\n      by_user_id: by_user_id,\n      total: total,\n      payment: payment\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      error,\n      isUpdate\n    } = this.props;\n\n    if (error !== prevProps.error) {\n      if (error.id === \"UPDATE_FAIL\") {\n        this.setState({\n          msg: error.msg.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    } // if Update close Modal\n\n\n    if (this.state.modal) {\n      if (isUpdate) {\n        this.toggle();\n        this.props.loadUser();\n      }\n    }\n  }\n\n  render() {\n    console.log(\"product Edit Modal:\", this.props.product);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(OverlayTrigger, {\n        placement: \"bottom\",\n        overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n          id: \"button-tooltip-2\",\n          children: \"Edit Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 30\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            height: '31px',\n            fontSize: '10px',\n            padding: '.5rem .5rem',\n            margin: '0rem'\n          },\n          onClick: this.toggle,\n          variant: \"primary\",\n          size: \"sm\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faEdit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.modal,\n        onHide: this.toggle,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          toggle: this.toggle,\n          style: {\n            color: 'white',\n            backgroundImage: `url(\"${back}\")`,\n            backgroundSize: '32rem',\n            backgroundRepeat: 'no-repeat'\n          },\n          closeButton: true,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              display: 'flex'\n            },\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              style: {\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  width: '15rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  style: {\n                    marginLeft: '.5 rem'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    alt: \"alt\",\n                    style: {\n                      height: '80px',\n                      width: '80px'\n                    },\n                    src: this.props.product_img\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 69\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  style: {\n                    marginTop: '1rem',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"h7\", {\n                    children: /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: this.props.product_name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 114,\n                      columnNumber: 128\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 124\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontSize: '12px',\n                      color: 'gray'\n                    },\n                    children: [\"Qnty:\", this.props.order.quantity]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 165\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 32\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  width: '15rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  style: {\n                    marginLeft: '1rem'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    alt: \"alt\",\n                    style: {\n                      borderRadius: '50%',\n                      border: '2px solid #3b44c1',\n                      height: '50px',\n                      width: '50px'\n                    },\n                    src: this.props.customer_img\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 66\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  style: {\n                    marginTop: '.8rem',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"h7\", {\n                    children: /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: this.props.customer_name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 119,\n                      columnNumber: 129\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 125\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, this), this.state.msg ? /*#__PURE__*/_jsxDEV(Alert, {\n            color: \"danger\",\n            children: this.state.msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }, this) : null, /*#__PURE__*/_jsxDEV(Formik // validator={() => ({})}\n          , {\n            validationSchema: schemaOrder,\n            initialValues: {\n              quantity: this.state.quantity,\n              total: this.state.quantity * this.props.product_price,\n              payment1: this.state.payment === \"Completed\" ? \"1\" : \"2\",\n              price: this.props.product_price // mobile_number:''\n\n            },\n            onSubmit: values => {\n              const {\n                quantity,\n                payment1\n              } = values;\n              const payment = payment1 === \"1\" ? \"Completed\" : \"Pending\";\n              const id = this.props.order.id;\n              const product_id = this.state.product_id;\n              const customer_id = this.state.customer_id;\n              const by_user_id = this.state.by_user_id;\n              const total = quantity * this.props.product_price;\n              const editOrder = {\n                id,\n                product_id,\n                customer_id,\n                by_user_id,\n                quantity,\n                total,\n                payment\n              };\n              console.log(\"Submit:\", editOrder);\n              this.props.updateOrder(editOrder);\n              this.toggle();\n              setTimeout(() => {\n                this.props.getOrders();\n              }, 1500);\n            },\n            children: ({\n              handleSubmit,\n              handleChange,\n              values,\n              errors\n            }) => /*#__PURE__*/_jsxDEV(Form, {\n              noValidate: true,\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  md: \"6\",\n                  controlId: \"validationFormik01\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Quantity\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: \"\",\n                    name: \"quantity\",\n                    value: values.quantity // onChangeCapture={(e)=>this.setState({isBlocking:e.target.value>0})}\n                    ,\n                    onChange: handleChange //this.setState({isBlocking:e.target.value.length>0}); handleChange(e)}}\n                    ,\n                    isInvalid: !!errors.quantity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.quantity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 15\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  md: \"6\",\n                  controlId: \"validationFormik01\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Payment\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\" // type=\"password\"\n                    ,\n                    placeholder: \"\",\n                    name: \"payment1\",\n                    value: values.payment1,\n                    onChange: handleChange,\n                    isInvalid: !!errors.payment1,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"0\",\n                      children: \"Choose Payment\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 19\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"1\",\n                      children: \"Completed\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 17\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"2\",\n                      children: \"Pending\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 17\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.payment1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 15\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                style: {\n                  fontWeight: 'bold',\n                  color: 'gray',\n                  border: '1px solid rgba(0,0,0,.125)',\n                  padding: '.5rem',\n                  borderRadius: '5px',\n                  marginBottom: '.5rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"h7\", {\n                  children: \"Total:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 153\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: this.props.product_price\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 174\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 168\n                }, this), \"X\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: values.quantity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 221\n                  }, this), \"=\", /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: values.quantity * values.price\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 246\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 215\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nEditOrderModal.propTypes = {\n  isUpdate: PropTypes.bool,\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired,\n  register: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    error: state.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateOrder,\n  clearErrors,\n  loginModalOpen,\n  getOrders\n})(withRouter(EditOrderModal));","map":{"version":3,"sources":["C:/Users/spicy/Downloads/Inventory-management-17/client/src/components/Order/EditOrderModal.js"],"names":["React","Component","Col","Alert","Button","Modal","Form","Row","Card","FontAwesomeIcon","faEdit","connect","withRouter","PropTypes","updateOrder","getOrders","back","loginModalOpen","clearErrors","Formik","yup","OverlayTrigger","Tooltip","schemaOrder","object","quantity","number","positive","integer","min","max","payment1","EditOrderModal","state","modal","product_id","customer_id","by_user_id","total","payment","msg","isUpdate","toggle","props","console","log","setState","onChange","e","target","name","value","componentDidMount","id","order","componentDidUpdate","prevProps","error","loadUser","render","product","height","fontSize","padding","margin","color","backgroundImage","backgroundSize","backgroundRepeat","display","alignItems","width","marginLeft","product_img","marginTop","flexDirection","product_name","borderRadius","border","customer_img","customer_name","product_price","price","values","editOrder","setTimeout","handleSubmit","handleChange","errors","fontWeight","marginBottom","propTypes","bool","isAuthenticated","isRequired","register","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport { Col,Alert, Button, Modal,Form, Row, Card } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit} from '@fortawesome/free-solid-svg-icons';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router-dom'\nimport PropTypes from 'prop-types';\nimport {updateOrder,getOrders} from '../../action/orderAction';\nimport back from '../../assets/images/back.jpg';\nimport {loginModalOpen} from '../../action/authActions'\nimport {clearErrors}  from '../../action/errorActions';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\n\nconst schemaOrder = yup.object({\n    quantity: yup.number().positive().integer().min(1, \"Price Should be More Than 1\").max(1000, \"Price Should be Less Than 500K\"),   \n    payment1: yup.number().positive().integer().min(1,\"Choose Any Payment Status\"),\n\n})\n\n\nclass EditOrderModal extends Component{\n    \n    state={\n        modal:false,   // modal for adding item is false initially\n        product_id:'',\n        customer_id:'',\n        by_user_id:'',\n        quantity:0,\n        total:0,\n        payment:0,\n        msg:null,\n        isUpdate:false\n    };\n    componentDidMount(){\n        // this.props.loadUser();\n        const {id,product_id,customer_id,by_user_id,quantity,total,payment}=this.props.order;\n        this.setState({product_id:product_id,customer_id:customer_id,quantity:quantity,by_user_id:by_user_id,total:total,payment:payment});\n    }\n    componentDidUpdate(prevProps){\n        const {error,isUpdate}=this.props;\n        if(error!==prevProps.error){\n            if(error.id===\"UPDATE_FAIL\"){\n                this.setState({msg:error.msg.msg});\n            }\n            else{\n                this.setState({msg:null});\n            }\n        }\n        // if Update close Modal\n        if(this.state.modal){\n            \n            if(isUpdate){\n                this.toggle();\n                this.props.loadUser();\n            }\n        }\n        \n    }\n    static propTypes={\n        isUpdate:PropTypes.bool,\n        isAuthenticated:PropTypes.bool,\n        error:PropTypes.object.isRequired,\n        register:PropTypes.func.isRequired,\n        clearErrors:PropTypes.func.isRequired\n    }\n\n    toggle=()=>{  \n        // clear the error\n        this.props.clearErrors();\n        // to toggle the modal \n        console.log(\"Props\",this.props);\n        // if(!this.props.isAuthenticated){\n        //     console.log(\"Authen\");\n        //     this.props.history.push('/')\n        //     this.props.loginModalOpen(true);\n           \n        // }\n        // console.log(\"from Toggle-> Modal Open:: \"+this.state.modal)\n        // else\n            this.setState({\n                modal:!this.state.modal\n            })\n    }\n\n\n    onChange=(e)=>{\n        this.setState({[e.target.name]:e.target.value});\n    }\n\nrender(){\n    console.log(\"product Edit Modal:\",this.props.product);\n    return(\n        <>\n            <OverlayTrigger        \n                        placement=\"bottom\"\n                    overlay={<Tooltip id=\"button-tooltip-2\">Edit Order</Tooltip>}>\n           \n            <Button style={{height:'31px',fontSize:'10px',padding:'.5rem .5rem',margin:'0rem'}} onClick={this.toggle} variant=\"primary\" size=\"sm\">\n                    <FontAwesomeIcon icon={faEdit}/>\n            </Button>\n\n            </OverlayTrigger>\n\n\n            <Modal show={this.state.modal} onHide={this.toggle}   >\n                <Modal.Header toggle={this.toggle} style={{color:'white', backgroundImage: `url(\"${back}\")`,backgroundSize:'32rem',backgroundRepeat:'no-repeat'}} closeButton>Update</Modal.Header>\n                <Modal.Body>\n                    <Card style={{display:'flex'}}>\n                        <Row style={{display:'flex',alignItems:'center'}}>\n                               <div style={{display:'flex',width:'15rem'}}> \n                                <Col style={{marginLeft:'.5 rem'}} ><img alt=\"alt\" style={{height:'80px',width:'80px'}} src={this.props.product_img}/></Col>\n                                <Col  style={{marginTop:'1rem',display:'flex',flexDirection:'column',alignItems:'center'}}><h7><b>{this.props.product_name}</b></h7><span style={{fontSize:'12px',color:'gray'}}>Qnty:{this.props.order.quantity}</span></Col>\n                                </div>\n                                <div style={{display:'flex',width:'15rem'}}>\n                                {/* <Col sm={2}></Col> */}\n                                <Col style={{marginLeft:'1rem'}}><img  alt=\"alt\" style={{borderRadius:'50%',border:'2px solid #3b44c1',height:'50px',width:'50px'}} src={this.props.customer_img}/></Col>\n                                <Col style={{marginTop:'.8rem',display:'flex',flexDirection:'column',alignItems:'center'}} ><h7><b>{this.props.customer_name}</b></h7></Col>\n                            </div>\n                        </Row>\n                    </Card>\n    {this.state.msg?<Alert color=\"danger\">{this.state.msg}</Alert>:null}\n    <Formik\n    // validator={() => ({})}\n      validationSchema={schemaOrder}\n      initialValues={{\n        quantity:this.state.quantity,\n        total:this.state.quantity*this.props.product_price,\n        payment1:this.state.payment===\"Completed\"?\"1\":\"2\",\n        price:this.props.product_price\n        // mobile_number:''\n\n      }}\n        onSubmit={(values)=>{ \n        \n            const {quantity,payment1}=values;\n            const payment=payment1===\"1\"?\"Completed\":\"Pending\"\n            const id=this.props.order.id;\n            const product_id=this.state.product_id;\n            const customer_id=this.state.customer_id;\n            const by_user_id=this.state.by_user_id;\n            const total=quantity*this.props.product_price;\n\n                const editOrder={\n                    id,product_id,customer_id,by_user_id,quantity,total,payment\n                }\n                console.log(\"Submit:\",editOrder);\n                this.props.updateOrder(editOrder);\n                this.toggle();\n                setTimeout(()=>{\n                    this.props.getOrders();\n                },1500);\n            \n            }\n        }\n    >\n       \n      {({\n        handleSubmit,\n        handleChange,\n        values,\n        errors,\n         }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          \n          <Form.Row>\n            <Form.Group as={Col} md=\"6\" controlId=\"validationFormik01\">\n           \n              <Form.Label>Quantity</Form.Label>\n              \n              <Form.Control\n                type=\"text\"\n                placeholder=\"\"\n                name=\"quantity\"\n                value={values.quantity}\n                // onChangeCapture={(e)=>this.setState({isBlocking:e.target.value>0})}\n                onChange={handleChange}//this.setState({isBlocking:e.target.value.length>0}); handleChange(e)}}\n                isInvalid={!!errors.quantity}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.quantity}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md=\"6\" controlId=\"validationFormik01\">\n              <Form.Label>Payment</Form.Label>\n              <Form.Control\n                as=\"select\"\n                // type=\"password\"\n                placeholder=\"\"\n                name=\"payment1\"\n                value={values.payment1}\n                onChange={handleChange}\n                isInvalid={!!errors.payment1}\n                \n              >\n                  <option value=\"0\">Choose Payment</option>\n                  \n                <option value=\"1\">Completed</option>\n                <option value=\"2\">Pending</option>\n\n                  \n                 \n              </Form.Control>\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.payment1}\n              </Form.Control.Feedback>\n            </Form.Group>\n           \n\n          </Form.Row>\n         \n         <Form.Row style={{fontWeight:'bold',color:'gray',border:'1px solid rgba(0,0,0,.125)',padding:'.5rem',borderRadius:'5px',marginBottom:'.5rem'}}><h7>Total:</h7><span><b>{this.props.product_price}</b></span>X<span><b>{values.quantity}</b>=<b>{values.quantity*values.price}</b></span></Form.Row>\n          <Button type=\"submit\">Update</Button>\n          \n         \n                        </Form>\n                        \n                    )}\n                    </Formik>\n                </Modal.Body>\n\n            </Modal>\n        </>\n    );\n}\n}\nconst mapStateToProps= state=>{\n    return({\n        error:state.error\n    })\n}\n\n\nexport default connect(mapStateToProps,{updateOrder,clearErrors,loginModalOpen,getOrders})(withRouter(EditOrderModal));"]},"metadata":{},"sourceType":"module"}