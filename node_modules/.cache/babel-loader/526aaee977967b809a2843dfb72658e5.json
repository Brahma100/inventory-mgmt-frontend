{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\spicy\\\\Downloads\\\\Inventory-management-17\\\\client\\\\src\\\\App.js\";\nimport React, { Component, Suspense } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport store from './store';\nimport { Container } from 'reactstrap';\nimport { loadUser, loginModalOpen } from \"./action/authActions\";\nimport Sidebar from './components/Sidebar/Sidebar';\nimport Footer from './components/Footer/Footer';\nimport AdminNavbar from './components/Navbars/AdminNavbar';\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport routes from \"./routes.js\";\nimport { getCategories } from './action/categoryAction';\nimport { Card } from 'react-bootstrap';\nimport Loading from './components/LazyLoadingPage/Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.getRoutes = routes => {\n      return routes.map((prop, key) => {\n        if (prop.layout === \"/admin\") {\n          return /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: prop.layout + prop.path,\n            render: props => /*#__PURE__*/_jsxDEV(prop.component, { ...props,\n              handleClick: this.handleNotificationClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this)\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 11\n          }, this);\n        } else {\n          return null;\n        }\n      });\n    };\n\n    this.getBrandText = path => {\n      for (let i = 0; i < routes.length; i++) {\n        if (this.props.location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\n          return routes[i].name;\n        }\n      }\n\n      return \"Brand\";\n    };\n\n    this.state = {\n      color: \"black\",\n      fixedClasses: \"dropdown show-dropdown open\",\n      isModalOpen: false,\n      startRender: false\n    };\n  }\n\n  componentDidMount(e) {\n    store.dispatch(loadUser());\n    store.dispatch(getCategories());\n    console.log(\"Action:\", this.props.history);\n\n    if (this.props.history.action === 'POP') {\n      setTimeout(() => {\n        console.log(\"timeout\");\n\n        if (!this.props.isAuthenticated) {\n          this.props.history.push('/login'); // this.props.loginModalOpen(true);\n        }\n      }, 150);\n    } else if (!this.props.isAuthenticated) {\n      console.log(\"Direct\");\n      this.props.history.push('/login'); // this.props.loginModalOpen(true);\n    }\n\n    setTimeout(() => {\n      this.setState({\n        startRender: true\n      });\n    }, 160);\n  }\n\n  componentDidUpdate(e) {\n    store.dispatch(loadUser());\n\n    if (!this.props.isAuthenticated) {\n      console.log(\"update Component\");\n      this.props.history.push('/login'); // this.props.loginModalOpen(true);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: !this.state.startRender ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(Sidebar, { ...this.props,\n          routes: routes,\n          color: this.state.color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"main-panel\",\n          className: \"main-panel\",\n          ref: \"mainPanel\",\n          children: [/*#__PURE__*/_jsxDEV(AdminNavbar, { ...this.props,\n            routes: this.getRoutes(routes),\n            brandText: this.getBrandText(this.props.location.pathname)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this), this.getRoutes(routes), /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              margin: '0rem',\n              padding: '0rem'\n            },\n            children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.isAuthenticated\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loginModalOpen\n})(withRouter(App));","map":{"version":3,"sources":["C:/Users/spicy/Downloads/Inventory-management-17/client/src/App.js"],"names":["React","Component","Suspense","connect","store","Container","loadUser","loginModalOpen","Sidebar","Footer","AdminNavbar","Route","Switch","withRouter","routes","getCategories","Card","Loading","App","constructor","props","getRoutes","map","prop","key","layout","path","handleNotificationClick","getBrandText","i","length","location","pathname","indexOf","name","state","color","fixedClasses","isModalOpen","startRender","componentDidMount","e","dispatch","console","log","history","action","setTimeout","isAuthenticated","push","setState","componentDidUpdate","render","margin","padding","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component,Suspense } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport store from './store';\nimport {Container} from 'reactstrap';\nimport { loadUser,loginModalOpen } from \"./action/authActions\";\nimport Sidebar from './components/Sidebar/Sidebar';\nimport Footer from './components/Footer/Footer';\nimport AdminNavbar from './components/Navbars/AdminNavbar';\nimport { Route, Switch ,withRouter} from \"react-router-dom\";\nimport routes from \"./routes.js\";\nimport { getCategories } from './action/categoryAction';\nimport { Card } from 'react-bootstrap';\nimport Loading from './components/LazyLoadingPage/Loading'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: \"black\",\n      fixedClasses: \"dropdown show-dropdown open\",\n      isModalOpen:false,\n      startRender:false,\n    };\n  }\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n          exact\n            path={prop.layout + prop.path}\n            render={props => (\n              <prop.component\n                {...props}\n                handleClick={this.handleNotificationClick}\n              />\n            )}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n\n  \n  componentDidMount(e){\n    \n    store.dispatch(loadUser());\n    store.dispatch(getCategories());\n    console.log(\"Action:\",this.props.history);\n    if(this.props.history.action==='POP')\n    {\n        setTimeout(()=>{\n        console.log(\"timeout\");\n        if(!this.props.isAuthenticated){\n          this.props.history.push('/login')\n          // this.props.loginModalOpen(true);\n        }\n      },150)\n    }\n    else\n     if(!this.props.isAuthenticated){\n      console.log(\"Direct\");\n      this.props.history.push('/login')\n      // this.props.loginModalOpen(true);\n     }\n     setTimeout(()=>{\n        this.setState({startRender:true})\n     },160)\n   \n  }\n  componentDidUpdate(e){\n  \n    store.dispatch(loadUser());\n   if(!this.props.isAuthenticated){\n     console.log(\"update Component\");\n    this.props.history.push('/login')\n    // this.props.loginModalOpen(true);\n   }\n  }\n\n  render(){\n    return (\n      <>\n      {!this.state.startRender?<Loading/>:\n      <div className=\"wrapper\">\n              <Sidebar {...this.props} routes={routes} \n                    color={this.state.color}\n                   />\n            <div id=\"main-panel\" className=\"main-panel\" ref=\"mainPanel\">  \n                <AdminNavbar\n                      {...this.props} routes={this.getRoutes(routes)}\n                      brandText={this.getBrandText(this.props.location.pathname)}\n                    />\n  \n  \n                {this.getRoutes(routes)} \n  \n                <Container>\n               \n                </Container> \n                <Card style={{margin:'0rem',padding:'0rem'}}>\n                  <Footer/>\n                </Card>         \n             </div>\n         \n      </div>}</>\n    );  \n }}\n const mapStateToProps=state=>{\n  return({\n    isAuthenticated:state.auth.isAuthenticated,\n  })\n }\n\nexport default connect(mapStateToProps,{loginModalOpen})(withRouter(App));\n"]},"metadata":{},"sourceType":"module"}