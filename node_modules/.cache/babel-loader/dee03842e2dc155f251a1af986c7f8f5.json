{"ast":null,"code":"import { UPDATE_ORDER, GET_ORDER, ADD_ORDER, DELETE_ORDER, ORDERS_LOAD } from '../action/types';\nconst initialState = {\n  orders: [],\n  ordersLoading: false,\n  ordersLoaded: false\n};\nexport default function (state = initialState, action) {\n  const {\n    payload\n  } = action; //destructuring action\n\n  switch (action.type) {\n    case GET_ORDER:\n      return { ...state,\n        orders: payload,\n        ordersLoading: false,\n        ordersLoaded: true\n      };\n\n    case DELETE_ORDER:\n      return { ...state,\n        orders: state.orders.filter(order => order.id !== action.payload)\n      };\n    //    case DELETE_SELECTED_ITEM:\n    //        console.log(\"Action Payload:\",action.payload);\n    //     return{\n    //             ...state,\n    //             orders:state.orders.filter(order=> \n    //                 {\n    //                     // console.log(\"Action::\",action.payload);\n    //                     for(var id in action.payload)\n    //                     if(order.id!==id)\n    //                         return false;\n    //                     return true;\n    //                 }\n    //          )\n    //    };\n\n    case ADD_ORDER:\n      return { ...state,\n        orders: [...state.orders, payload]\n      };\n\n    case ORDERS_LOAD:\n      return { ...state,\n        ordersLoading: true,\n        ordersLoaded: false\n      };\n\n    case UPDATE_ORDER:\n      return { ...state,\n        orders: state.orders.map(order => {\n          if (order.id === action.payload.id) {\n            const updatedItem = { ...order,\n              payment: action.payload.payment,\n              total: action.payload.total,\n              quantity: action.payload.quantity\n            };\n            return updatedItem;\n          }\n\n          return order;\n        }),\n        ordersLoading: false,\n        ordersLoaded: true\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/spicy/Downloads/Inventory-management-17/client/src/reducer/orderReducer.js"],"names":["UPDATE_ORDER","GET_ORDER","ADD_ORDER","DELETE_ORDER","ORDERS_LOAD","initialState","orders","ordersLoading","ordersLoaded","state","action","payload","type","filter","order","id","map","updatedItem","payment","total","quantity"],"mappings":"AACA,SAASA,YAAT,EAAsBC,SAAtB,EAAgCC,SAAhC,EAA0CC,YAA1C,EAAuDC,WAAvD,QAAyE,iBAAzE;AAEA,MAAMC,YAAY,GAAC;AACfC,EAAAA,MAAM,EAAC,EADQ;AAEfC,EAAAA,aAAa,EAAC,KAFC;AAGfC,EAAAA,YAAY,EAAC;AAHE,CAAnB;AAMA,eAAe,UAASC,KAAK,GAACJ,YAAf,EAA4BK,MAA5B,EAAmC;AAC9C,QAAM;AAACC,IAAAA;AAAD,MAAUD,MAAhB,CAD8C,CACtB;;AACxB,UAAOA,MAAM,CAACE,IAAd;AACI,SAAKX,SAAL;AACI,aAAM,EACF,GAAGQ,KADD;AAEFH,QAAAA,MAAM,EAACK,OAFL;AAGFJ,QAAAA,aAAa,EAAC,KAHZ;AAIFC,QAAAA,YAAY,EAAC;AAJX,OAAN;;AAMD,SAAKL,YAAL;AACC,aAAM,EACF,GAAGM,KADD;AAEFH,QAAAA,MAAM,EAACG,KAAK,CAACH,MAAN,CAAaO,MAAb,CAAoBC,KAAK,IAAGA,KAAK,CAACC,EAAN,KAAWL,MAAM,CAACC,OAA9C;AAFL,OAAN;AAKJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACG,SAAKT,SAAL;AACC,aAAM,EACF,GAAGO,KADD;AAEFH,QAAAA,MAAM,EAAC,CAAC,GAAGG,KAAK,CAACH,MAAV,EAAiBK,OAAjB;AAFL,OAAN;;AAKJ,SAAKP,WAAL;AACI,aAAM,EACF,GAAGK,KADD;AAEFF,QAAAA,aAAa,EAAC,IAFZ;AAGFC,QAAAA,YAAY,EAAC;AAHX,OAAN;;AAKA,SAAKR,YAAL;AACA,aAAM,EACF,GAAGS,KADD;AAEHH,QAAAA,MAAM,EAACG,KAAK,CAACH,MAAN,CAAaU,GAAb,CAAkBF,KAAD,IAAS;AAC7B,cAAGA,KAAK,CAACC,EAAN,KAAWL,MAAM,CAACC,OAAP,CAAeI,EAA7B,EAAgC;AAC5B,kBAAME,WAAW,GAAC,EACd,GAAGH,KADW;AAEdI,cAAAA,OAAO,EAACR,MAAM,CAACC,OAAP,CAAeO,OAFT;AAGdC,cAAAA,KAAK,EAACT,MAAM,CAACC,OAAP,CAAeQ,KAHP;AAIdC,cAAAA,QAAQ,EAACV,MAAM,CAACC,OAAP,CAAeS;AAJV,aAAlB;AAOA,mBAAOH,WAAP;AACH;;AACD,iBAAOH,KAAP;AACH,SAZM,CAFJ;AAeHP,QAAAA,aAAa,EAAC,KAfX;AAgBFC,QAAAA,YAAY,EAAC;AAhBX,OAAN;;AAoBJ;AACI,aAAOC,KAAP;AA/DR;AAiEH","sourcesContent":["\nimport  {UPDATE_ORDER,GET_ORDER,ADD_ORDER,DELETE_ORDER,ORDERS_LOAD} from '../action/types';\n\nconst initialState={\n    orders:[],\n    ordersLoading:false,\n    ordersLoaded:false\n}\n\nexport default function(state=initialState,action){\n    const {payload}=action; //destructuring action\n    switch(action.type){\n        case GET_ORDER:\n            return{\n                ...state,\n                orders:payload,\n                ordersLoading:false,\n                ordersLoaded:true\n           };\n           case DELETE_ORDER:\n            return{\n                ...state,\n                orders:state.orders.filter(order=> order.id!==action.payload)\n\n           };\n        //    case DELETE_SELECTED_ITEM:\n        //        console.log(\"Action Payload:\",action.payload);\n        //     return{\n        //             ...state,\n        //             orders:state.orders.filter(order=> \n        //                 {\n        //                     // console.log(\"Action::\",action.payload);\n        //                     for(var id in action.payload)\n        //                     if(order.id!==id)\n        //                         return false;\n        //                     return true;\n        //                 }\n        //          )\n\n        //    };\n           case ADD_ORDER:\n            return{\n                ...state,\n                orders:[...state.orders,payload]\n\n           };\n        case ORDERS_LOAD:\n            return{\n                ...state,\n                ordersLoading:true,\n                ordersLoaded:false\n            };\n            case UPDATE_ORDER:\n            return{\n                ...state,\n               orders:state.orders.map((order)=>{\n                   if(order.id===action.payload.id){\n                       const updatedItem={\n                           ...order,\n                           payment:action.payload.payment,\n                           total:action.payload.total,\n                           quantity:action.payload.quantity,\n                        \n                       }\n                       return updatedItem;\n                   }\n                   return order;\n               }),\n               ordersLoading:false,\n                ordersLoaded:true\n               \n\n            }; \n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}