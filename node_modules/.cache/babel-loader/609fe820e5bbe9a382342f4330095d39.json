{"ast":null,"code":"import { DELETE_SELECTED_ITEM, UPDATE_ITEM, GET_ITEM, ADD_ITEM, DELETE_ITEM, ITEMS_LOAD } from './types';\nimport axios from 'axios';\nimport { returnErrors } from './errorActions';\nexport const getItems = () => dispatch => {\n  dispatch(setItemsLoading());\n  axios.get('/products').then(res => dispatch({\n    type: GET_ITEM,\n    payload: res.data\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport const addItem = item => dispatch => {\n  axios.post('/add_product', item).then(res => dispatch({\n    type: ADD_ITEM,\n    payload: res.data\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport const deleteItem = id => dispatch => {\n  console.log(\"Id of Item\", id);\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    id\n  });\n  console.log(\"Action Product Id\", id);\n  axios.post('/delete_product', body, config).then(res => dispatch({\n    type: DELETE_ITEM,\n    payload: id\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport const deleteSelectedItem = ids => dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  var body = JSON.stringify({\n    ids\n  });\n  var {\n    ids\n  } = body;\n  console.log(\"Action Product Id\", typeof ids);\n  console.log(\"Body\", body, body[0], ids);\n  axios.post('/delete_selected_product', body, config).then(res => dispatch({\n    type: DELETE_SELECTED_ITEM,\n    payload: ids\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport const rankItem = id => dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    id\n  });\n  console.log(\"Action Product Id\", id);\n  axios.post('/rank_product', body, config).then(res => dispatch({\n    type: UPDATE_ITEM,\n    payload: res.data\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport const updateItem = ({\n  id,\n  name,\n  manufacturer,\n  description,\n  stock,\n  price,\n  rating,\n  user,\n  img\n}) => dispatch => {\n  dispatch(setItemsLoading());\n  console.log(\"Id of Item\", id, user);\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    id,\n    name,\n    description,\n    manufacturer,\n    price,\n    stock,\n    rating,\n    user,\n    img\n  });\n  console.log(\"Action Product Id\", id);\n  axios.post('/update_product', body, config).then(res => dispatch({\n    type: UPDATE_ITEM,\n    payload: res.data\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status))); // Wait for 1/2 Seconds \n\n  setTimeout(() => {\n    dispatch(getItems());\n  }, 500);\n};\nexport const setItemsLoading = () => {\n  return {\n    type: ITEMS_LOAD\n  };\n};","map":{"version":3,"sources":["C:/Users/spicy/Downloads/Inventory-management-17/client/src/action/itemAction.js"],"names":["DELETE_SELECTED_ITEM","UPDATE_ITEM","GET_ITEM","ADD_ITEM","DELETE_ITEM","ITEMS_LOAD","axios","returnErrors","getItems","dispatch","setItemsLoading","get","then","res","type","payload","data","catch","err","response","status","addItem","item","post","deleteItem","id","console","log","config","headers","body","JSON","stringify","deleteSelectedItem","ids","rankItem","updateItem","name","manufacturer","description","stock","price","rating","user","img","setTimeout"],"mappings":"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","sourcesContent":["import  {DELETE_SELECTED_ITEM,UPDATE_ITEM,GET_ITEM,ADD_ITEM,DELETE_ITEM, ITEMS_LOAD} from './types';\nimport axios from 'axios';\n\nimport {returnErrors} from './errorActions';\n\n\nexport const getItems=()=> dispatch =>{\n    dispatch(setItemsLoading());\n\n    axios.get('/products').then(res=>\n    dispatch({\n        type:GET_ITEM,\n        payload:res.data\n    }))\n    .catch(err=>dispatch(returnErrors(err.response.data,err.response.status)));   \n};\nexport const addItem=item=> dispatch =>{\n    axios.post('/add_product',item)\n    .then(res=>dispatch({\n        type:ADD_ITEM,\n        payload:res.data\n    })).catch(err=>dispatch(returnErrors(err.response.data,err.response.status)));\n};\n\nexport const deleteItem=id=>dispatch=>{\n    console.log(\"Id of Item\",id);\n    const config={\n        headers:{'Content-Type':'application/json'}\n    }\n    const body=JSON.stringify({id});\n    console.log(\"Action Product Id\",id);\n    axios.post('/delete_product',body,config).then(\n        res=>dispatch({\n            type:DELETE_ITEM,\n            payload:id\n        })\n    ).catch(err=>dispatch(returnErrors(err.response.data,err.response.status)));\n}\n\n\nexport const deleteSelectedItem=ids=>dispatch=>{\n\n    const config={\n        headers:{'Content-Type':'application/json'}\n    }\n    var body=JSON.stringify({ids});\n    var {ids}=body\n    console.log(\"Action Product Id\",typeof ids);\n    console.log(\"Body\",body,body[0],ids);\n    axios.post('/delete_selected_product',body,config).then(\n        res=>dispatch({\n            type:DELETE_SELECTED_ITEM,\n            payload:ids\n        })\n    ).catch(err=>dispatch(returnErrors(err.response.data,err.response.status)));\n}\n\nexport const rankItem=(id)=>dispatch=>{\n    const config={\n        headers:{'Content-Type':'application/json'}\n    }\n    const body=JSON.stringify({id});\n    console.log(\"Action Product Id\",id);\n    axios.post('/rank_product',body,config).then(\n        res=>dispatch({\n            type:UPDATE_ITEM,\n            payload:res.data\n        })\n    ).catch(err=>dispatch(returnErrors(err.response.data,err.response.status)));\n}\n\nexport const updateItem=({id,name,manufacturer,description,stock,price,rating,user,img})=>dispatch=>{\n    dispatch(setItemsLoading());\n    console.log(\"Id of Item\",id,user);\n    const config={\n        headers:{'Content-Type':'application/json'}\n    }\n    const body=JSON.stringify({id,name,description,manufacturer,price,stock,rating,user,img});\n    console.log(\"Action Product Id\",id);\n    axios.post('/update_product',body,config).then(\n        res=>dispatch({\n            type:UPDATE_ITEM,\n            payload:res.data\n        })\n    ).catch(err=>dispatch(returnErrors(err.response.data,err.response.status)));\n    // Wait for 1/2 Seconds \n    setTimeout(() => {\n        dispatch(getItems());\n    }, 500);\n}\n\n\nexport const setItemsLoading=()=>{\n    return{\n        type:ITEMS_LOAD\n    };\n}"]},"metadata":{},"sourceType":"module"}