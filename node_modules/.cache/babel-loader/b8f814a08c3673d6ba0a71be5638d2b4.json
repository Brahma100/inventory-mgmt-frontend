{"ast":null,"code":"import { DELETE_SELECTED_ITEM, UPDATE_ITEM, GET_ITEM, ADD_ITEM, DELETE_ITEM, ITEMS_LOAD } from '../action/types';\nconst initialState = {\n  items: [],\n  itemsLoading: false,\n  itemsLoaded: false\n};\nexport default function (state = initialState, action) {\n  const {\n    payload\n  } = action; //destructuring action\n\n  switch (action.type) {\n    case GET_ITEM:\n      return { ...state,\n        items: payload,\n        itemsLoading: false,\n        itemsLoaded: true\n      };\n\n    case DELETE_ITEM:\n      return { ...state,\n        items: state.items.filter(item => item.id !== action.payload)\n      };\n\n    case DELETE_SELECTED_ITEM:\n      console.log(\"Action Payload:\", action.payload);\n      return { ...state,\n        items: state.items.filter(item => {\n          // console.log(\"Action::\",action.payload);\n          for (var id in action.payload) if (item.id !== id) return false;\n\n          return true;\n        })\n      };\n\n    case ADD_ITEM:\n      return { ...state,\n        items: [...state.items, payload]\n      };\n\n    case ITEMS_LOAD:\n      return { ...state,\n        itemsLoading: true,\n        itemsLoaded: false\n      };\n\n    case UPDATE_ITEM:\n      return { ...state,\n        items: state.items.map(item => {\n          if (item.id === action.payload.id) {\n            const updatedItem = { ...item,\n              name: action.payload.name,\n              description: action.payload.description,\n              manufacturer: action.payload.manufacturer,\n              price: action.payload.price,\n              stock: action.payload.stock,\n              rating: action.payload.rating,\n              editUser: item.editUser.push(action.payload.user)\n            };\n            return updatedItem;\n          }\n\n          return item;\n        }),\n        itemsLoading: false,\n        itemsLoaded: true\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/spicy/Downloads/Inventory-management-17/client/src/reducer/itemReducer.js"],"names":["DELETE_SELECTED_ITEM","UPDATE_ITEM","GET_ITEM","ADD_ITEM","DELETE_ITEM","ITEMS_LOAD","initialState","items","itemsLoading","itemsLoaded","state","action","payload","type","filter","item","id","console","log","map","updatedItem","name","description","manufacturer","price","stock","rating","editUser","push","user"],"mappings":"AACA,SAASA,oBAAT,EAA8BC,WAA9B,EAA0CC,QAA1C,EAAmDC,QAAnD,EAA4DC,WAA5D,EAAwEC,UAAxE,QAAyF,iBAAzF;AAEA,MAAMC,YAAY,GAAC;AACfC,EAAAA,KAAK,EAAC,EADS;AAEfC,EAAAA,YAAY,EAAC,KAFE;AAGfC,EAAAA,WAAW,EAAC;AAHG,CAAnB;AAMA,eAAe,UAASC,KAAK,GAACJ,YAAf,EAA4BK,MAA5B,EAAmC;AAC9C,QAAM;AAACC,IAAAA;AAAD,MAAUD,MAAhB,CAD8C,CACtB;;AACxB,UAAOA,MAAM,CAACE,IAAd;AACI,SAAKX,QAAL;AACI,aAAM,EACF,GAAGQ,KADD;AAEFH,QAAAA,KAAK,EAACK,OAFJ;AAGFJ,QAAAA,YAAY,EAAC,KAHX;AAIFC,QAAAA,WAAW,EAAC;AAJV,OAAN;;AAMD,SAAKL,WAAL;AACC,aAAM,EACF,GAAGM,KADD;AAEFH,QAAAA,KAAK,EAACG,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBC,IAAI,IAAGA,IAAI,CAACC,EAAL,KAAUL,MAAM,CAACC,OAA3C;AAFJ,OAAN;;AAKD,SAAKZ,oBAAL;AACIiB,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BP,MAAM,CAACC,OAArC;AACH,aAAM,EACE,GAAGF,KADL;AAEEH,QAAAA,KAAK,EAACG,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBC,IAAI,IACzB;AACI;AACA,eAAI,IAAIC,EAAR,IAAcL,MAAM,CAACC,OAArB,EACA,IAAGG,IAAI,CAACC,EAAL,KAAUA,EAAb,EACI,OAAO,KAAP;;AACJ,iBAAO,IAAP;AACH,SAPC;AAFR,OAAN;;AAaD,SAAKb,QAAL;AACC,aAAM,EACF,GAAGO,KADD;AAEFH,QAAAA,KAAK,EAAC,CAAC,GAAGG,KAAK,CAACH,KAAV,EAAgBK,OAAhB;AAFJ,OAAN;;AAKJ,SAAKP,UAAL;AACI,aAAM,EACF,GAAGK,KADD;AAEFF,QAAAA,YAAY,EAAC,IAFX;AAGFC,QAAAA,WAAW,EAAC;AAHV,OAAN;;AAKA,SAAKR,WAAL;AACA,aAAM,EACF,GAAGS,KADD;AAEHH,QAAAA,KAAK,EAACG,KAAK,CAACH,KAAN,CAAYY,GAAZ,CAAiBJ,IAAD,IAAQ;AAC1B,cAAGA,IAAI,CAACC,EAAL,KAAUL,MAAM,CAACC,OAAP,CAAeI,EAA5B,EAA+B;AAC3B,kBAAMI,WAAW,GAAC,EACd,GAAGL,IADW;AAEdM,cAAAA,IAAI,EAACV,MAAM,CAACC,OAAP,CAAeS,IAFN;AAGdC,cAAAA,WAAW,EAACX,MAAM,CAACC,OAAP,CAAeU,WAHb;AAIdC,cAAAA,YAAY,EAACZ,MAAM,CAACC,OAAP,CAAeW,YAJd;AAKdC,cAAAA,KAAK,EAACb,MAAM,CAACC,OAAP,CAAeY,KALP;AAMdC,cAAAA,KAAK,EAACd,MAAM,CAACC,OAAP,CAAea,KANP;AAOdC,cAAAA,MAAM,EAACf,MAAM,CAACC,OAAP,CAAec,MAPR;AAQdC,cAAAA,QAAQ,EAACZ,IAAI,CAACY,QAAL,CAAcC,IAAd,CAAmBjB,MAAM,CAACC,OAAP,CAAeiB,IAAlC;AARK,aAAlB;AAUA,mBAAOT,WAAP;AACH;;AACD,iBAAOL,IAAP;AACH,SAfK,CAFH;AAkBHP,QAAAA,YAAY,EAAC,KAlBV;AAmBFC,QAAAA,WAAW,EAAC;AAnBV,OAAN;;AAuBJ;AACI,aAAOC,KAAP;AAlER;AAoEH","sourcesContent":["\nimport  {DELETE_SELECTED_ITEM,UPDATE_ITEM,GET_ITEM,ADD_ITEM,DELETE_ITEM,ITEMS_LOAD} from '../action/types';\n\nconst initialState={\n    items:[],\n    itemsLoading:false,\n    itemsLoaded:false\n}\n\nexport default function(state=initialState,action){\n    const {payload}=action; //destructuring action\n    switch(action.type){\n        case GET_ITEM:\n            return{\n                ...state,\n                items:payload,\n                itemsLoading:false,\n                itemsLoaded:true\n           };\n           case DELETE_ITEM:\n            return{\n                ...state,\n                items:state.items.filter(item=> item.id!==action.payload)\n\n           };\n           case DELETE_SELECTED_ITEM:\n               console.log(\"Action Payload:\",action.payload);\n            return{\n                    ...state,\n                    items:state.items.filter(item=> \n                        {\n                            // console.log(\"Action::\",action.payload);\n                            for(var id in action.payload)\n                            if(item.id!==id)\n                                return false;\n                            return true;\n                        }\n                 )\n\n           };\n           case ADD_ITEM:\n            return{\n                ...state,\n                items:[...state.items,payload]\n\n           };\n        case ITEMS_LOAD:\n            return{\n                ...state,\n                itemsLoading:true,\n                itemsLoaded:false\n            };\n            case UPDATE_ITEM:\n            return{\n                ...state,\n               items:state.items.map((item)=>{\n                   if(item.id===action.payload.id){\n                       const updatedItem={\n                           ...item,\n                           name:action.payload.name,\n                           description:action.payload.description,\n                           manufacturer:action.payload.manufacturer,\n                           price:action.payload.price,\n                           stock:action.payload.stock,\n                           rating:action.payload.rating,\n                           editUser:item.editUser.push(action.payload.user),\n                       }\n                       return updatedItem;\n                   }\n                   return item;\n               }),\n               itemsLoading:false,\n                itemsLoaded:true\n               \n\n            }; \n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}