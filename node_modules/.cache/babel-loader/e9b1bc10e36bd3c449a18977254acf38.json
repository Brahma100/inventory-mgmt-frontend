{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\spicy\\\\Downloads\\\\Inventory-management-17\\\\client\\\\src\\\\components\\\\auth\\\\RegisterModal1.js\";\nimport React, { Component } from 'react';\nimport { Button, InputGroup, Col, Alert, NavLink, Modal, Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { register, login, TokenExpireExtend, loginModalOpen, isBlockedF } from '../../action/authActions';\nimport { clearErrors } from '../../action/errorActions';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport back from '../../assets/images/back.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst schemaLogin = yup.object({\n  email: yup.string().email('Invalid email').required(),\n  password: yup.string().min(0, 'Password must be at least 6 characters').max(24, 'Password can be maximum 24 characters').required()\n});\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\nconst schemaRegister = yup.object({\n  fname: yup.string().min(1, 'At least 1 characters').max(10, 'First Name can be maximum 10 characters').required(),\n  lname: yup.string().min(1, 'At least 1 characters').max(10, 'Last Name can be maximum 10 characters').required(),\n  city: yup.string().min(3, 'City must be at least 3 characters').max(24, 'City can be maximum 20 characters'),\n  state: yup.string().min(3, 'State must be at least 3 characters').max(24, 'State can be maximum 20 characters'),\n  country: yup.string().min(3, 'Country must be at least 3 characters').max(24, 'Country can be maximum 20 characters'),\n  postal: yup.number().integer(),\n  email: yup.string().email('Invalid email').required(),\n  password: yup.string().min(6, 'Password must be at least 6 characters').max(24, 'Password can be maximum 24 characters').required() // mobile_number:yup.number().max(9999999999,'Invalid Number').required()//.matches(phoneRegExp,\"Number is Not Like Mobile number\"),   \n\n});\n\nclass RegisterModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      imageURL: \"\",\n      signIn: false,\n      remember: false,\n      modal: this.props.isModalOpen,\n      // modal for adding item is false initially\n      msg: null,\n      city: '',\n      State: '',\n      country: '',\n      postal: '',\n      ip: '',\n      isBlocking: this.props.isBlocked\n    };\n\n    this.toggle = () => {\n      // clear the error\n      this.props.clearErrors(); // to toggle the modal \n\n      this.setState({\n        modal: !this.state.modal\n      }); // this.props.loginModalOpen(this.state.modal)\n    };\n\n    this.handleCheckboxChange = e => {\n      e.preventDefault();\n      this.setState(prevState => {\n        return {\n          remember: !prevState.remember\n        };\n      });\n    };\n\n    this.handleSignIn = () => {\n      console.log(\"Sign in  Toggle Called\", this.state.signIn);\n      this.props.clearErrors();\n      this.setState(prevState => {\n        return {\n          signIn: !prevState.signIn\n        };\n      });\n    };\n\n    this.encodeImageFileAsURL = () => {\n      console.log(\"image uploading func. called\");\n      var filesSelected = document.getElementById(\"inputFileToLoad\").files;\n\n      if (filesSelected.length > 0) {\n        var fileToLoad = filesSelected[0];\n        var fileReader = new FileReader();\n\n        fileReader.onload = fileLoadedEvent => {\n          var srcData = fileLoadedEvent.target.result; // <--- data: base64\n\n          var newImage = document.createElement('img');\n          newImage.src = srcData;\n          this.setState({\n            imageURL: newImage.src\n          }); // document.getElementById(\"imgTest\").innerHTML = newImage.outerHTML;\n          // alert(\"Converted Base64 version is \" + document.getElementById(\"imgTest\").innerHTML);\n          // console.log(\"Converted Base64 version is \" + this.state.imageURL);\n        };\n\n        fileReader.readAsDataURL(fileToLoad);\n      } // return newImage.src;\n\n    };\n  }\n\n  async componentDidMount() {\n    let response = await fetch(`https://geolocation-db.com/json/`);\n    let ipData = await response.json();\n    this.setState({\n      ip: ipData.IPv4,\n      city: ipData.city,\n      country: ipData.country_name,\n      postal: ipData.postal,\n      State: ipData.state\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    console.log(this.state.city);\n    const {\n      error,\n      isAuthenticated\n    } = this.props;\n\n    if (error !== prevProps.error) {\n      if (error.id === \"REGISTER_FAIL\") {\n        this.setState({\n          msg: error.msg.msg\n        });\n      } else if (error.id === \"LOGIN_FAIL\") {\n        this.setState({\n          msg: error.msg.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    } // if authenticated close Modal\n\n\n    if (this.state.modal) {\n      if (isAuthenticated) {\n        this.toggle();\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavLink, {\n        onClick: this.toggle,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            paddingLeft: ' 1.5rem',\n            paddingRight: '1.5rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \" Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 78\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.modal,\n        onHide: this.toggle,\n        children: this.state.signIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            style: {\n              color: 'white',\n              backgroundImage: `url(\"${back}\")`,\n              backgroundSize: '32rem',\n              backgroundRepeat: 'no-repeat'\n            },\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 156\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: [this.state.msg ? /*#__PURE__*/_jsxDEV(Alert, {\n              color: \"danger\",\n              children: this.state.msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 21\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"isBlocking?\", this.state.isBlocking ? \"Yes\" : \"No\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(Formik // validator={() => ({})}\n            , {\n              validationSchema: schemaRegister,\n              initialValues: {\n                fname: '',\n                lname: '',\n                email: '',\n                password: '',\n                city: this.state.city,\n                state: this.state.State,\n                postal: this.state.postal,\n                country: this.state.country // mobile_number:''\n\n              },\n              onSubmit: values => {\n                this.encodeImageFileAsURL();\n                const imageURL = this.state.imageURL;\n                console.log(\"Image URL\", imageURL);\n                const {\n                  fname,\n                  lname,\n                  email,\n                  password,\n                  city,\n                  state,\n                  postal,\n                  country\n                } = values;\n                let img = this.state.imageURL;\n                let ip = this.state.ip;\n                const newUser = {\n                  fname,\n                  lname,\n                  email,\n                  password,\n                  img,\n                  city,\n                  state,\n                  postal,\n                  country,\n                  ip\n                };\n                this.props.register(newUser);\n              },\n              children: ({\n                handleSubmit,\n                handleChange,\n                values,\n                errors\n              }) => /*#__PURE__*/_jsxDEV(Form, {\n                noValidate: true,\n                onSubmit: handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                    as: Col,\n                    md: \"6\",\n                    controlId: \"validationFormik01\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"First Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      placeholder: \"First Name\",\n                      name: \"fname\",\n                      value: values.fname // onChangeCapture={(e)=>this.setState({isBlocking:e.target.value>0})}\n                      ,\n                      onChange: e => {\n                        this.setState({\n                          isBlocking: e.target.value.length > 0\n                        });\n                        this.props.isBlockedF(e.target.value.length > 0);\n                        handleChange(e);\n                      },\n                      isInvalid: !!errors.fname\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                      type: \"invalid\",\n                      children: errors.fname\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 227,\n                      columnNumber: 15\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    as: Col,\n                    md: \"6\",\n                    controlId: \"validationFormik01\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Last Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 232,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      placeholder: \"Last Name\",\n                      name: \"lname\",\n                      value: values.lname,\n                      onChange: e => {\n                        this.setState({\n                          isBlocking: e.target.value.length > 0\n                        });\n                        this.props.isBlockedF(e.target.value.length > 0);\n                        handleChange(e);\n                      },\n                      isInvalid: !!errors.lname\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 233,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                      type: \"invalid\",\n                      children: errors.lname\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 15\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 13\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                    as: Col,\n                    md: \"12\",\n                    controlId: \"validationFormik02\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Email ID\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 250,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                        children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                          id: \"inputGroupPrepend\",\n                          children: \"@\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 253,\n                          columnNumber: 19\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 252,\n                        columnNumber: 17\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        type: \"text\",\n                        placeholder: \"Email ID\",\n                        \"aria-describedby\": \"inputGroupPrepend\",\n                        name: \"email\",\n                        value: values.email,\n                        onChange: e => {\n                          this.setState({\n                            isBlocking: e.target.value.length > 0\n                          });\n                          this.props.isBlockedF(e.target.value.length > 0);\n                          handleChange(e);\n                        },\n                        isInvalid: !!errors.email\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 255,\n                        columnNumber: 17\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                        type: \"invalid\",\n                        children: errors.email\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 264,\n                        columnNumber: 17\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 15\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                    as: Col,\n                    md: \"12\",\n                    controlId: \"validationFormik03\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Password\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 273,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"password\",\n                      placeholder: \"Password\",\n                      name: \"password\",\n                      value: values.password,\n                      onChange: e => {\n                        this.setState({\n                          isBlocking: e.target.value.length > 0\n                        });\n                        this.props.isBlockedF(e.target.value.length > 0);\n                        handleChange(e);\n                      },\n                      isInvalid: !!errors.password\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 274,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                      type: \"invalid\",\n                      children: errors.password\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 282,\n                      columnNumber: 15\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 13\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                    as: Col,\n                    md: \"6\",\n                    controlId: \"validationFormik03\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"City\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 291,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      placeholder: \"City\",\n                      name: \"city\",\n                      value: values.city ? values.city : this.state.city,\n                      onChange: e => {\n                        this.setState({\n                          isBlocking: e.target.value.length > 0\n                        });\n                        handleChange(e);\n                      },\n                      isInvalid: !!errors.city\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 292,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                      type: \"invalid\",\n                      children: errors.city\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 300,\n                      columnNumber: 15\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    as: Col,\n                    md: \"6\",\n                    controlId: \"validationFormik03\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"State\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 305,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      disabled: true,\n                      type: \"text\",\n                      placeholder: \"State\",\n                      name: \"state\",\n                      value: values.state ? values.state : this.state.State,\n                      onChange: e => {\n                        this.setState({\n                          isBlocking: e.target.value.length > 0\n                        });\n                        handleChange(e);\n                      },\n                      isInvalid: !!errors.state\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                      type: \"invalid\",\n                      children: errors.state\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 315,\n                      columnNumber: 15\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 13\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                    as: Col,\n                    md: \"6\",\n                    controlId: \"validationFormik03\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Postal\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 322,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"number\",\n                      placeholder: \"Postal\",\n                      name: \"postal\",\n                      value: values.postal ? values.postal : this.state.postal,\n                      onChange: e => {\n                        this.setState({\n                          isBlocking: e.target.value.length > 0\n                        });\n                        handleChange(e);\n                      },\n                      isInvalid: !!errors.postal\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 323,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                      type: \"invalid\",\n                      children: errors.postal\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 332,\n                      columnNumber: 15\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    as: Col,\n                    md: \"6\",\n                    controlId: \"validationFormik03\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Country\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 337,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      disabled: true,\n                      type: \"text\",\n                      placeholder: \"Country\",\n                      name: \"country\",\n                      value: values.country ? values.country : this.state.country,\n                      onChange: e => {\n                        this.setState({\n                          isBlocking: e.target.value.length > 0\n                        });\n                        handleChange(e);\n                      },\n                      isInvalid: !!errors.country\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 338,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                      type: \"invalid\",\n                      children: errors.country\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 347,\n                      columnNumber: 15\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 13\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                    as: Col,\n                    md: \"12\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: /*#__PURE__*/_jsxDEV(Form.File, {\n                        id: \"formcheck-api-regular\",\n                        children: [/*#__PURE__*/_jsxDEV(Form.File.Label, {\n                          children: \"Profile Image \"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 371,\n                          columnNumber: 21\n                        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                          id: \"inputFileToLoad\",\n                          type: \"file\",\n                          onChange: this.encodeImageFileAsURL\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 372,\n                          columnNumber: 21\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 370,\n                        columnNumber: 21\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 369,\n                      columnNumber: 17\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 13\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  children: \"Register\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  defaultChecked: this.state.remember,\n                  style: {\n                    marginLeft: '1rem',\n                    marginTop: '.5rem'\n                  },\n                  type: \"checkbox\",\n                  onChange: this.handleCheckboxChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"  Remember me!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 155\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {},\n                  className: \"forgot-password text-right\",\n                  children: [\"Already registered \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    onClick: this.handleSignIn,\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      children: /*#__PURE__*/_jsxDEV(\"b\", {\n                        children: \"Sign in?\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 400,\n                        columnNumber: 91\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 400,\n                      columnNumber: 87\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 400,\n                    columnNumber: 52\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"imgTest\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this), \"            \"]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            style: {\n              color: 'white',\n              backgroundImage: `url(\"${back}\")`,\n              backgroundSize: '32rem',\n              backgroundRepeat: 'no-repeat'\n            },\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 156\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: [this.state.msg ? /*#__PURE__*/_jsxDEV(Alert, {\n              color: \"danger\",\n              children: this.state.msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 39\n            }, this) : null, /*#__PURE__*/_jsxDEV(Formik, {\n              validationSchema: schemaLogin,\n              initialValues: {\n                email: '',\n                password: ''\n              },\n              onSubmit: values => {\n                console.log(\"onSUbmit\");\n                const {\n                  email,\n                  password\n                } = values;\n                console.log(\"On Submit Called\", email);\n                const user = {\n                  email,\n                  password\n                };\n                this.props.login(user);\n              },\n              children: ({\n                handleSubmit,\n                handleChange,\n                values,\n                errors,\n                touched\n              }) => /*#__PURE__*/_jsxDEV(Form, {\n                noValidate: true,\n                onSubmit: handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                    as: Col,\n                    md: \"12\",\n                    controlId: \"validationFormik02\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Email ID\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 444,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                        children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                          id: \"inputGroupPrepend\",\n                          children: \"@\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 447,\n                          columnNumber: 37\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 446,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        type: \"text\",\n                        placeholder: \"Email ID\",\n                        \"aria-describedby\": \"inputGroupPrepend\",\n                        name: \"email\",\n                        value: values.email,\n                        onChange: e => {\n                          this.setState({\n                            isBlocking: e.target.value.length > 0\n                          });\n                          handleChange(e);\n                        },\n                        isInvalid: !!errors.email\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 449,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                        children: \"Looks good!\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 458,\n                        columnNumber: 38\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                        type: \"invalid\",\n                        children: touched.email && errors.email\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 459,\n                        columnNumber: 37\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 445,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 443,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 442,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                    as: Col,\n                    md: \"12\",\n                    controlId: \"validationFormik03\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Password\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 469,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"password\",\n                      placeholder: \"Password\",\n                      name: \"password\",\n                      value: values.password,\n                      onChange: e => {\n                        this.setState({\n                          isBlocking: e.target.value.length > 0\n                        });\n                        handleChange(e);\n                      },\n                      isInvalid: !!errors.password\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 470,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                      children: \"Looks good!\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 478,\n                      columnNumber: 34\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                      type: \"invalid\",\n                      children: touched.password && errors.password\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 479,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 468,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 496,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  defaultChecked: this.state.remember,\n                  style: {\n                    marginLeft: '1rem',\n                    marginTop: '.5rem'\n                  },\n                  type: \"checkbox\",\n                  onChange: this.handleCheckboxChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 497,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"  Remember me!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 497,\n                  columnNumber: 173\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginTop: '1rem'\n                  },\n                  className: \"forgot-password text-right\",\n                  children: [\"Don't have an account?  \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    onClick: this.handleSignIn,\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      children: /*#__PURE__*/_jsxDEV(\"b\", {\n                        children: \"Create an Account\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 499,\n                        columnNumber: 116\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 499,\n                      columnNumber: 112\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 499,\n                    columnNumber: 77\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nRegisterModal.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired,\n  register: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    isModalOpen: state.auth.isModalOpen,\n    isBlocked: state.auth.isBlocked,\n    isAuthenticated: state.auth.isAuthenticated,\n    rememberMe: state.auth.rememberMe,\n    error: state.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loginModalOpen,\n  isBlockedF,\n  login,\n  register,\n  clearErrors,\n  TokenExpireExtend\n})(RegisterModal);","map":{"version":3,"sources":["C:/Users/spicy/Downloads/Inventory-management-17/client/src/components/auth/RegisterModal1.js"],"names":["React","Component","Button","InputGroup","Col","Alert","NavLink","Modal","Form","connect","PropTypes","register","login","TokenExpireExtend","loginModalOpen","isBlockedF","clearErrors","Formik","yup","back","schemaLogin","object","email","string","required","password","min","max","phoneRegExp","schemaRegister","fname","lname","city","state","country","postal","number","integer","RegisterModal","imageURL","signIn","remember","modal","props","isModalOpen","msg","State","ip","isBlocking","isBlocked","toggle","setState","handleCheckboxChange","e","preventDefault","prevState","handleSignIn","console","log","encodeImageFileAsURL","filesSelected","document","getElementById","files","length","fileToLoad","fileReader","FileReader","onload","fileLoadedEvent","srcData","target","result","newImage","createElement","src","readAsDataURL","componentDidMount","response","fetch","ipData","json","IPv4","country_name","componentDidUpdate","prevProps","error","isAuthenticated","id","render","paddingLeft","paddingRight","color","backgroundImage","backgroundSize","backgroundRepeat","values","img","newUser","handleSubmit","handleChange","errors","value","marginLeft","marginTop","user","touched","propTypes","bool","isRequired","func","mapStateToProps","auth","rememberMe"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport { Button,InputGroup,Col,Alert,NavLink, Modal,Form } from 'react-bootstrap';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {register,login,TokenExpireExtend,loginModalOpen,isBlockedF} from '../../action/authActions';\nimport {clearErrors}  from '../../action/errorActions';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\nimport back from '../../assets/images/back.jpg';\n\n\nconst schemaLogin = yup.object({\n    email: yup.string().email('Invalid email').required(),\n    password: yup.string().min(0, 'Password must be at least 6 characters').max(24, 'Password can be maximum 24 characters').required()\n})\n\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\n\n\nconst schemaRegister = yup.object({\n    fname:yup.string().min(1, 'At least 1 characters').max(10, 'First Name can be maximum 10 characters').required(),   \n    lname:yup.string().min(1, 'At least 1 characters').max(10, 'Last Name can be maximum 10 characters').required(),   \n    city:yup.string().min(3, 'City must be at least 3 characters').max(24, 'City can be maximum 20 characters'),   \n    state:yup.string().min(3, 'State must be at least 3 characters').max(24, 'State can be maximum 20 characters'),   \n    country:yup.string().min(3, 'Country must be at least 3 characters').max(24, 'Country can be maximum 20 characters'),   \n    postal:yup.number().integer(),   \n    email: yup.string().email('Invalid email').required(),\n    password: yup.string().min(6, 'Password must be at least 6 characters').max(24, 'Password can be maximum 24 characters').required(),\n    // mobile_number:yup.number().max(9999999999,'Invalid Number').required()//.matches(phoneRegExp,\"Number is Not Like Mobile number\"),   \n})\n\n\n\nclass RegisterModal extends Component{\n    state={\n        imageURL:\"\",\n        signIn:false,\n        remember:false,\n        modal:this.props.isModalOpen,   // modal for adding item is false initially\n        msg:null,\n        city:'',\n        State:'',\n        country:'',\n        postal:'',\n        ip:'',\n        isBlocking:this.props.isBlocked\n    };\n\n\nasync componentDidMount(){\n\n    let response=await fetch(`https://geolocation-db.com/json/`)\n    let ipData=await response.json();\n    \n    this.setState({ip:ipData.IPv4,city:ipData.city,country:ipData.country_name,postal:ipData.postal,State:ipData.state})\n\n    \n}\n\n\n    componentDidUpdate(prevProps){\n\n        console.log(this.state.city);\n\n        const {error,isAuthenticated}=this.props;\n        if(error!==prevProps.error){\n            if(error.id===\"REGISTER_FAIL\"){\n                this.setState({msg:error.msg.msg});\n            }\n            else if(error.id===\"LOGIN_FAIL\"){\n                this.setState({msg:error.msg.msg});\n            }\n            else{\n                this.setState({msg:null});\n            }\n        }\n        // if authenticated close Modal\n        if(this.state.modal){\n            \n            if(isAuthenticated){\n                this.toggle();\n            }\n        }\n    }\n    static propTypes={\n        isAuthenticated:PropTypes.bool,\n        error:PropTypes.object.isRequired,\n        register:PropTypes.func.isRequired,\n        clearErrors:PropTypes.func.isRequired\n    }\n\n    toggle=()=>{  \n      \n        // clear the error\n        this.props.clearErrors();\n        // to toggle the modal \n\n        this.setState({\n            modal:!this.state.modal\n        })\n        // this.props.loginModalOpen(this.state.modal)\n    }\n\n    handleCheckboxChange=(e)=>{\n        e.preventDefault();\n        this.setState((prevState)=>{\n            return {remember:!prevState.remember}\n        })\n        \n    }\n\n    handleSignIn=()=>{\n        console.log(\"Sign in  Toggle Called\",this.state.signIn);\n        this.props.clearErrors();\n        this.setState((prevState)=>{\n            return {signIn:!prevState.signIn}\n        })\n    }\n     encodeImageFileAsURL=()=> {\n        console.log(\"image uploading func. called\");\n        var filesSelected = document.getElementById(\"inputFileToLoad\").files;\n        if (filesSelected.length > 0) {\n          var fileToLoad = filesSelected[0];\n    \n          var fileReader = new FileReader();\n    \n          fileReader.onload = (fileLoadedEvent)=> {\n            var srcData = fileLoadedEvent.target.result; // <--- data: base64\n    \n            var newImage = document.createElement('img');\n            newImage.src = srcData;\n            this.setState({imageURL:newImage.src});\n            // document.getElementById(\"imgTest\").innerHTML = newImage.outerHTML;\n            // alert(\"Converted Base64 version is \" + document.getElementById(\"imgTest\").innerHTML);\n            // console.log(\"Converted Base64 version is \" + this.state.imageURL);\n           \n          }\n          fileReader.readAsDataURL(fileToLoad);\n        }\n        // return newImage.src;\n      }\n\n\nrender(){\n    return(\n        <div>\n          {/* <Prompt\n              when={this.state.isBlocking}\n                message={(location, action) => {\n                  // if (action === 'POP') {\n                    console.log(\"Backing up...\",action,location)\n                  // }\n\n                  return location.pathname.startsWith(\"/\")\n                    ? true\n                    : `Are you sure you want to Leave ${location.pathname}?`\n            }}\n          /> */}\n             {/* <Prompt\n                when={this.props.isBlocked}\n                message={(location)=> `Are You Sure Want To Leave ${location}`}\n/>  */}\n            <NavLink onClick={this.toggle} >\n               <Button style={{paddingLeft:' 1.5rem',paddingRight:'1.5rem'}}><b> Register</b></Button>\n            </NavLink>\n\n            <Modal show={this.state.modal} onHide={this.toggle} >\n            {this.state.signIn?           <>\n            {/* <Modal.Header toggle={this.toggle}>Register</Modal.Header> */}\n                <Modal.Header  style={{color:'white', backgroundImage: `url(\"${back}\")`,backgroundSize:'32rem',backgroundRepeat:'no-repeat'}} closeButton ><b>Register</b></Modal.Header>\n                <Modal.Body>\n    {this.state.msg?<Alert color=\"danger\">{this.state.msg}</Alert>:null}\n    <p>isBlocking?{this.state.isBlocking?\"Yes\":\"No\"}</p>\n   \n    <Formik\n    // validator={() => ({})}\n      validationSchema={schemaRegister}\n      initialValues={{\n        fname:'',\n        lname:'',\n        email:'',\n        password:'',\n        city:this.state.city,\n        state:this.state.State,\n        postal:this.state.postal,\n        country:this.state.country,\n        // mobile_number:''\n\n      }}\n      onSubmit={(values)=>{ \n        this.encodeImageFileAsURL();\n        const imageURL=this.state.imageURL;\n        console.log(\"Image URL\",imageURL);\n        const {fname,lname,email,password,city,state,postal,country}=values;\n        let img=this.state.imageURL;\n        let ip=this.state.ip;\n        const newUser={\n            fname,lname,email,password,img,city,state,postal,country,ip\n        }\n        this.props.register(newUser);\n    }\n    }\n    >\n       \n      {({\n        handleSubmit,\n        handleChange,\n        values,\n        errors,\n         }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          \n          <Form.Row>\n            <Form.Group as={Col} md=\"6\" controlId=\"validationFormik01\">\n           \n              <Form.Label>First Name</Form.Label>\n              \n              <Form.Control\n                type=\"text\"\n                placeholder=\"First Name\"\n                name=\"fname\"\n                value={values.fname}\n                // onChangeCapture={(e)=>this.setState({isBlocking:e.target.value>0})}\n                onChange={e=>{this.setState({isBlocking:e.target.value.length>0}); this.props.isBlockedF(e.target.value.length>0); handleChange(e)}}\n                isInvalid={!!errors.fname}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.fname}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md=\"6\" controlId=\"validationFormik01\">\n              <Form.Label>Last Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Last Name\"\n                name=\"lname\"\n                value={values.lname}\n                onChange={e=>{this.setState({isBlocking:e.target.value.length>0}); this.props.isBlockedF(e.target.value.length>0);handleChange(e)}}\n                isInvalid={!!errors.lname}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.lname}\n              </Form.Control.Feedback>\n            </Form.Group>\n           \n\n          </Form.Row>\n          <Form.Row>\n          <Form.Group as={Col} md=\"12\" controlId=\"validationFormik02\">\n              <Form.Label>Email ID</Form.Label>\n              <InputGroup>\n                <InputGroup.Prepend>\n                  <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n                </InputGroup.Prepend>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Email ID\"\n                  aria-describedby=\"inputGroupPrepend\"\n                  name=\"email\"\n                  value={values.email}\n                  onChange={e=>{this.setState({isBlocking:e.target.value.length>0});this.props.isBlockedF(e.target.value.length>0); handleChange(e)}}\n                  isInvalid={!!errors.email}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.email}\n                </Form.Control.Feedback>\n              </InputGroup>\n            </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n            <Form.Group as={Col} md=\"12\" controlId=\"validationFormik03\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"password\"\n                value={values.password}\n                onChange={e=>{this.setState({isBlocking:e.target.value.length>0});this.props.isBlockedF(e.target.value.length>0); handleChange(e)}}\n                isInvalid={!!errors.password}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.password}\n              </Form.Control.Feedback>\n            </Form.Group>\n\n          </Form.Row>\n         \n          <Form.Row>\n            <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\">\n              <Form.Label>City</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"City\"\n                name=\"city\"\n                value={values.city?values.city:this.state.city}\n                onChange={e=>{this.setState({isBlocking:e.target.value.length>0}); handleChange(e)}}\n                isInvalid={!!errors.city}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.city}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\">\n              <Form.Label>State</Form.Label>\n              <Form.Control\n               disabled\n                type=\"text\"\n                placeholder=\"State\"\n                name=\"state\"\n                value={values.state?values.state:this.state.State}\n                onChange={e=>{this.setState({isBlocking:e.target.value.length>0}); handleChange(e)}}\n                isInvalid={!!errors.state}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.state}\n              </Form.Control.Feedback>\n            </Form.Group>\n            </Form.Row>\n            <Form.Row>\n            <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\">\n              <Form.Label>Postal</Form.Label>\n              <Form.Control\n             \n                type=\"number\"\n                placeholder=\"Postal\"\n                name=\"postal\"\n                value={values.postal?values.postal:this.state.postal}\n                onChange={e=>{this.setState({isBlocking:e.target.value.length>0}); handleChange(e)}}\n                isInvalid={!!errors.postal}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.postal}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\">\n              <Form.Label>Country</Form.Label>\n              <Form.Control\n               disabled\n                type=\"text\"\n                placeholder=\"Country\"\n                name=\"country\"\n                value={values.country?values.country:this.state.country}\n                onChange={e=>{this.setState({isBlocking:e.target.value.length>0}); handleChange(e)}}\n                isInvalid={!!errors.country}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.country}\n              </Form.Control.Feedback>\n            </Form.Group>\n            {/* <Form.Group as={Col} md=\"12\" controlId=\"validationFormik03\">\n              <Form.Label>Phone/Mobile Number</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Mobile Number\"\n                name=\"mobile\"\n                value={values.mobile_number}\n                onChange={handleChange}\n                isInvalid={!!errors.mobile_number}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.mobile_number}\n              </Form.Control.Feedback>\n            </Form.Group> */}\n\n          </Form.Row>\n            <Form.Row>\n            <Form.Group as={Col} md=\"12\">\n                <div className=\"mb-3\">\n                    <Form.File id=\"formcheck-api-regular\">\n                    <Form.File.Label>Profile Image </Form.File.Label>\n                    <input id=\"inputFileToLoad\"  type=\"file\" onChange={this.encodeImageFileAsURL} />\n                    </Form.File>\n                </div>\n            </Form.Group>\n\n          </Form.Row>\n\n          {/* <Form.Row>\n          <Map\n                google={this.props.google}\n                center={{lat: 18.5204, lng: 73.8567}}\n                height='300px'\n                zoom={15}\n    />\n          </Form.Row>\n          <Form.Row>\n         \n          </Form.Row>\n          <Form.Row>\n         \n          </Form.Row>\n          <Form.Row style={{marginBottom:'10rem'}}>\n         <p>Hello</p>\n          </Form.Row> */}\n          <Button type=\"submit\">Register</Button>\n          \n          <input defaultChecked={this.state.remember} style={{marginLeft:'1rem',marginTop:'.5rem'}} type=\"checkbox\" onChange={this.handleCheckboxChange}/><span>  Remember me!</span>\n                            <div style={{}} className=\"forgot-password text-right\">\n                                Already registered <span onClick={this.handleSignIn} ><a ><b>Sign in?</b></a></span>\n                            </div>\n                            <div id=\"imgTest\"></div>\n                        </Form>\n                        \n                    )}\n                    </Formik>\n                </Modal.Body>            </>:\n                <>\n                <Modal.Header  style={{color:'white', backgroundImage: `url(\"${back}\")`,backgroundSize:'32rem',backgroundRepeat:'no-repeat'}} closeButton ><b>Login</b></Modal.Header>\n                    <Modal.Body>\n                      {this.state.msg?<Alert color=\"danger\">{this.state.msg}</Alert>:null}\n                       \n                       \n                 <Formik\n                        validationSchema={schemaLogin}\n                        initialValues={{\n                            email:'',\n                            password:'',\n\n                        }}\n                        onSubmit={(values)=>{ \n                            console.log(\"onSUbmit\");\n                        const {email,password}=values;\n                        console.log(\"On Submit Called\",email);\n                        const user={\n                            email,password\n                        }\n                        this.props.login(user);\n                        }\n                        }\n                        >\n                        {({\n                            handleSubmit,\n                            handleChange,\n                            values,\n                            errors,\n                            touched\n                            }) => (\n                            <Form noValidate onSubmit={handleSubmit}>\n                            \n                            \n                            <Form.Row>\n                            <Form.Group as={Col} md=\"12\" controlId=\"validationFormik02\">\n                                <Form.Label>Email ID</Form.Label>\n                                <InputGroup>\n                                    <InputGroup.Prepend>\n                                    <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n                                    </InputGroup.Prepend>\n                                    <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Email ID\"\n                                    aria-describedby=\"inputGroupPrepend\"\n                                    name=\"email\"\n                                    value={values.email}\n                                    onChange={e=>{this.setState({isBlocking:e.target.value.length>0}); handleChange(e)}}\n                                    isInvalid={!!errors.email}\n                                    />\n                                     <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                    <Form.Control.Feedback type=\"invalid\">\n                                    {touched.email && errors.email}\n                                    </Form.Control.Feedback>\n                                   \n                                </InputGroup>\n                                </Form.Group>\n                                </Form.Row>\n                                <Form.Row>\n                                \n                                <Form.Group as={Col} md=\"12\" controlId=\"validationFormik03\">\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control\n                                    type=\"password\"\n                                    placeholder=\"Password\"\n                                    name=\"password\"\n                                    value={values.password}\n                                    onChange={e=>{this.setState({isBlocking:e.target.value.length>0}); handleChange(e)}}\n                                    isInvalid={!!errors.password}\n                                />\n                                 <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                <Form.Control.Feedback type=\"invalid\">\n                                    {touched.password && errors.password}\n                                </Form.Control.Feedback>\n                                </Form.Group>\n\n                            </Form.Row>\n                            {/* <Form.Group>\n                                <Form.Check\n                                required\n                                name=\"terms\"\n                                label=\"Agree to terms and conditions\"\n                                onChange={e=>{this.setState({isBlocking:e.target.value.length>0}); handleChange(e)}}\n                                isInvalid={!!errors.terms}\n                                feedback={errors.terms}\n                                id=\"validationFormik0\"\n                                />\n                            </Form.Group> */}\n                            <Button type=\"submit\">Login</Button>\n                            <input defaultChecked={this.state.remember} style={{marginLeft:'1rem',marginTop:'.5rem'}} type=\"checkbox\" onChange={this.handleCheckboxChange}/><span>  Remember me!</span>\n                                                    <div style={{marginTop:'1rem',}} className=\"forgot-password text-right\">\n                                                    Don't have an account?  <span onClick={this.handleSignIn} ><a ><b>Create an Account</b></a></span>\n                                    </div> \n                            </Form>\n                        )}\n                        </Formik>\n                </Modal.Body>\n            </>\n            \n }\n            \n            </Modal>\n        </div>\n    );\n}\n}\nconst mapStateToProps= state=>{\n    return({\n        isModalOpen:state.auth.isModalOpen,\n        isBlocked:state.auth.isBlocked,\n        isAuthenticated:state.auth.isAuthenticated,\n        rememberMe:state.auth.rememberMe,\n        error:state.error\n    })\n}\n\n\nexport default connect(mapStateToProps,{loginModalOpen,isBlockedF,login,register,clearErrors,TokenExpireExtend})(RegisterModal);"]},"metadata":{},"sourceType":"module"}