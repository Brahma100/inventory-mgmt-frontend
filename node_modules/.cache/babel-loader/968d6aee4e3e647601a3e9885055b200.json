{"ast":null,"code":"import { UPDATE_ORDER, GET_ORDER, ADD_ORDER, DELETE_ORDER, ORDERS_LOAD } from './types';\nimport axios from 'axios';\nimport { returnErrors } from './errorActions';\nexport const getOrders = () => dispatch => {\n  dispatch(setOrderLoading());\n  axios.get('/orders').then(res => dispatch({\n    type: GET_ORDER,\n    payload: res.data\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport const addOrder = order => dispatch => {\n  axios.post('/add_order', order).then(res => dispatch({\n    type: ADD_ORDER,\n    payload: res.data\n  })).catch(err => {\n    console.log(\"catch block error\");\n    dispatch(returnErrors(err.response.data, err.response.status, \"ORDER_ADD_FAIL\")); // dispatch({\n    //     type:ORDER_ADD_FAIL\n    // });\n  });\n};\nexport const deleteOrder = id => dispatch => {\n  console.log(\"Id of Order\", id);\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    id\n  });\n  console.log(\"Action Order Id\", id);\n  axios.post('/delete_order', body, config).then(res => dispatch({\n    type: DELETE_ORDER,\n    payload: id\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport const updateOrder = ({\n  id,\n  product_id,\n  customer_id,\n  by_user_id,\n  quantity,\n  total,\n  payment\n}) => dispatch => {\n  console.log(\"Id of ORDER\", id);\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    id,\n    product_id,\n    customer_id,\n    by_user_id,\n    quantity,\n    total,\n    payment\n  });\n  console.log(\"Action Order Id\", id);\n  axios.post('/update_order', body, config).then(res => dispatch({\n    type: UPDATE_ORDER,\n    payload: res.data\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport const setOrderLoading = () => {\n  return {\n    type: ORDERS_LOAD\n  };\n};","map":{"version":3,"sources":["C:/Users/spicy/Downloads/Inventory-management-17/client/src/action/orderAction.js"],"names":["UPDATE_ORDER","GET_ORDER","ADD_ORDER","DELETE_ORDER","ORDERS_LOAD","axios","returnErrors","getOrders","dispatch","setOrderLoading","get","then","res","type","payload","data","catch","err","response","status","addOrder","order","post","console","log","deleteOrder","id","config","headers","body","JSON","stringify","updateOrder","product_id","customer_id","by_user_id","quantity","total","payment"],"mappings":"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","sourcesContent":["import  {UPDATE_ORDER,GET_ORDER,ADD_ORDER,DELETE_ORDER, ORDERS_LOAD} from './types';\nimport axios from 'axios';\nimport {returnErrors} from './errorActions';\n\nexport const getOrders=()=> dispatch =>{\n    dispatch(setOrderLoading());\n\n    axios.get('/orders').then(res=>\n    dispatch({\n        type:GET_ORDER,\n        payload:res.data\n    }))\n    .catch(err=>dispatch(returnErrors(err.response.data,err.response.status)));   \n};\nexport const addOrder=order=> dispatch =>{\n    axios.post('/add_order',order)\n    .then(res=>dispatch({\n        type:ADD_ORDER,\n        payload:res.data\n    })).catch(err=>{\n        console.log(\"catch block error\")\n        dispatch(returnErrors(err.response.data, err.response.status,\"ORDER_ADD_FAIL\"));\n        // dispatch({\n        //     type:ORDER_ADD_FAIL\n        // });\n    })\n};\n\nexport const deleteOrder=id=>dispatch=>{\n    console.log(\"Id of Order\",id);\n    const config={\n        headers:{'Content-Type':'application/json'}\n    }\n    const body=JSON.stringify({id});\n    console.log(\"Action Order Id\",id);\n    axios.post('/delete_order',body,config).then(\n        res=>dispatch({\n            type:DELETE_ORDER,\n            payload:id\n        })\n    ).catch(err=>dispatch(returnErrors(err.response.data,err.response.status)));\n}\n\nexport const updateOrder=({id,product_id,customer_id,by_user_id,quantity,total,payment})=>dispatch=>{\n    console.log(\"Id of ORDER\",id);\n    const config={\n        headers:{'Content-Type':'application/json'}\n    }\n    const body=JSON.stringify({id,product_id,customer_id,by_user_id,quantity,total,payment});\n    console.log(\"Action Order Id\",id);\n    axios.post('/update_order',body,config).then(\n        res=>dispatch({\n            type:UPDATE_ORDER,\n            payload:res.data\n        })\n    ).catch(err=>dispatch(returnErrors(err.response.data,err.response.status)));\n}\n\n\nexport const setOrderLoading=()=>{\n    return{\n        type:ORDERS_LOAD\n    };\n}"]},"metadata":{},"sourceType":"module"}