{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\spicy\\\\Downloads\\\\Inventory-management-17\\\\client\\\\src\\\\components\\\\auth\\\\RegisterPage.js\";\nimport React, { Component } from 'react';\nimport NotificationSystem from 'react-notification-system';\nimport { connect } from 'react-redux';\nimport './RegisterPage.css';\nimport { Prompt, withRouter } from 'react-router-dom';\nimport { loadUser, register, login, TokenExpireExtend, loginModalOpen, isBlockedF } from '../../action/authActions';\nimport { getCategories } from '../../action/categoryAction';\nimport { getItems, deleteItem } from \"../../action/itemAction\";\nimport { clearErrors } from '../../action/errorActions';\nimport AppNavbar from '../AppNavbar/AppNavbar';\nimport back from '../../assets/images/back.jpg';\nimport Footer from '../Footer/Footer';\nimport banner from '../../assets/images/LoginSVG.png';\nimport { Button, InputGroup, Col, Alert, NavLink, Modal, Form, Container, Row, Card } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport store from '../../store';\nimport Loading from '../LazyLoadingPage/Loading';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExclamationTriangle, faInfo } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst schemaLogin = yup.object({\n  email: yup.string().email('Invalid email').required(),\n  password: yup.string().min(0, 'Password must be at least 6 characters').max(24, 'Password can be maximum 24 characters').required()\n});\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\nconst schemaRegister = yup.object({\n  fname: yup.string().min(1, 'At least 1 characters').max(10, 'First Name can be maximum 10 characters').required(),\n  lname: yup.string().min(1, 'At least 1 characters').max(10, 'Last Name can be maximum 10 characters').required(),\n  city: yup.string().min(3, 'City must be at least 3 characters').max(24, 'City can be maximum 20 characters'),\n  state: yup.string().min(3, 'State must be at least 3 characters').max(24, 'State can be maximum 20 characters'),\n  country: yup.string().min(3, 'Country must be at least 3 characters').max(24, 'Country can be maximum 20 characters'),\n  postal: yup.number().integer(),\n  email: yup.string().email('Invalid email').required(),\n  password: yup.string().min(6, 'Password must be at least 6 characters').max(24, 'Password can be maximum 24 characters').required() // mobile_number:yup.number().max(9999999999,'Invalid Number').required()//.matches(phoneRegExp,\"Number is Not Like Mobile number\"),   \n\n});\n\nclass RegisterPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.notificationSystem = /*#__PURE__*/React.createRef();\n    this.state = {\n      imageURL: \"\",\n      signIn: false,\n      remember: false,\n      modal: this.props.isModalOpen,\n      // modal for adding item is false initially\n      msg: null,\n      city: '',\n      State: '',\n      country: '',\n      postal: '',\n      ip: '',\n      isBlocking: false,\n      startRender: false\n    };\n\n    this.addNotification = msg => {\n      const notification = this.notificationSystem.current;\n      notification.addNotification({\n        title: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faExclamationTriangle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 20\n          }, this), \" Server Error\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this),\n        message: this.state.msg,\n        level: 'error',\n        position: 'tc',\n        autoDismiss: 5\n      });\n    };\n\n    this.handleSignIn = () => {\n      console.log(\"Sign In Toggle Called\", this.state.signIn);\n      this.setState(prevState => {\n        return {\n          signIn: !prevState.signIn\n        };\n      });\n    };\n\n    this.encodeImageFileAsURL = () => {\n      console.log(\"image uploading func. called\");\n      var filesSelected = document.getElementById(\"inputFileToLoad\").files;\n\n      if (filesSelected.length > 0) {\n        var fileToLoad = filesSelected[0];\n        var fileReader = new FileReader();\n\n        fileReader.onload = fileLoadedEvent => {\n          var srcData = fileLoadedEvent.target.result; // <--- data: base64\n\n          var newImage = document.createElement('img');\n          newImage.src = srcData;\n          this.setState({\n            imageURL: newImage.src\n          });\n        };\n\n        fileReader.readAsDataURL(fileToLoad);\n      } // return newImage.src;\n\n    };\n  }\n\n  async componentDidMount() {\n    if (this.props.history.location.state !== 'button') {\n      let authenticate = window.confirm(\"You Need To Login To Get Full Access of ShopperZ\");\n\n      if (!authenticate) {\n        this.props.history.push('/');\n      }\n    }\n\n    let response = await fetch(`https://geolocation-db.com/json/`);\n    let ipData = await response.json();\n    this.setState({\n      ip: ipData.IPv4,\n      city: ipData.city,\n      country: ipData.country_name,\n      postal: ipData.postal,\n      State: ipData.state\n    }); // console.log(\"City:\",this.state.city);  \n  }\n\n  componentWillMount() {\n    store.dispatch(loadUser());\n    console.log(\"Action Login Page:\", this.props.history);\n\n    if (this.props.history.action === 'POP') {\n      setTimeout(() => {\n        console.log(\"timeout\");\n\n        if (this.props.isAuthenticated) {\n          this.props.history.push('/'); // this.props.loginModalOpen(true);\n        }\n      }, 50);\n    } else if (this.props.isAuthenticated) {\n      console.log(\"Direct\");\n      this.props.history.push('/'); // this.props.loginModalOpen(true);\n    }\n\n    setTimeout(() => {\n      this.setState({\n        startRender: true\n      });\n    }, 60);\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      error,\n      isAuthenticated\n    } = this.props;\n\n    if (error !== prevProps.error) {\n      if (error.id === \"REGISTER_FAIL\") {\n        this.setState({\n          msg: error.msg.msg\n        });\n        this.setState({\n          isBlocking: true\n        });\n        this.addNotification(this.state.msg);\n      } else if (error.id === \"LOGIN_FAIL\") {\n        this.setState({\n          msg: error.msg.msg\n        });\n        this.setState({\n          isBlocking: true\n        });\n        setTimeout(() => {\n          this.addNotification(this.state.msg ? this.state.msg : \"Something Went Wrong\");\n        }, 60); // console.log(\"Error R:\",error.msg.msg,this.state.msg);\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    }\n\n    store.dispatch(loadUser());\n\n    if (this.props.isAuthenticated) {\n      console.log(\"update Component\");\n      this.props.history.push('/'); // this.props.loginModalOpen(true);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NotificationSystem, {\n        ref: this.notificationSystem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 12\n      }, this), !this.state.startRender ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 37\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          style: {\n            alignItems: 'center',\n            backgroundImage: `url(\"${back}\")`,\n            backgroundRepeat: 'no-repeat'\n          },\n          children: [/*#__PURE__*/_jsxDEV(AppNavbar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Container, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content\",\n              children: /*#__PURE__*/_jsxDEV(Container, {\n                fluid: true,\n                children: [/*#__PURE__*/_jsxDEV(Prompt, {\n                  when: this.state.isBlocking,\n                  message: location => `Are You Sure Want To Go To ${location.pathname}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: 6,\n                    children: /*#__PURE__*/_jsxDEV(Card, {\n                      style: {\n                        marginTop: '5rem'\n                      },\n                      children: this.state.signIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              display: 'flex',\n                              flexDirection: 'column',\n                              alignItems: 'center'\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(\"h7\", {\n                              style: {\n                                fontSize: '22px'\n                              },\n                              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                                children: \"Create a New Account\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 204,\n                                columnNumber: 63\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 204,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              style: {\n                                fontSize: '14px',\n                                color: 'rgba(59,62,102,.5)'\n                              },\n                              children: \"Start benefiting from our tools right away\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 205,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 203,\n                            columnNumber: 29\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 201,\n                          columnNumber: 25\n                        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                          children: /*#__PURE__*/_jsxDEV(Formik // validator={() => ({})}\n                          , {\n                            validationSchema: schemaRegister,\n                            initialValues: {\n                              fname: '',\n                              lname: '',\n                              email: '',\n                              password: '',\n                              city: this.state.city,\n                              state: this.state.State,\n                              postal: this.state.postal,\n                              country: this.state.country // mobile_number:''\n\n                            },\n                            onSubmit: values => {\n                              this.encodeImageFileAsURL();\n                              const imageURL = this.state.imageURL;\n                              console.log(\"Image URL\", imageURL);\n                              const {\n                                fname,\n                                lname,\n                                email,\n                                password,\n                                city,\n                                state,\n                                postal,\n                                country\n                              } = values;\n                              console.log(fname, lname, email, password, city, state, postal, country);\n                              let img = this.state.imageURL;\n                              let ip = this.state.ip;\n                              const newUser = {\n                                fname,\n                                lname,\n                                email,\n                                password,\n                                img,\n                                city,\n                                state,\n                                postal,\n                                country,\n                                ip\n                              };\n                              this.setState({\n                                isBlocking: false\n                              }); // console.log(\"Update:\",this.state.isBlocking);\n\n                              this.props.register(newUser);\n                            },\n                            children: ({\n                              handleSubmit,\n                              handleChange,\n                              values,\n                              errors\n                            }) => /*#__PURE__*/_jsxDEV(Form, {\n                              noValidate: true,\n                              onSubmit: handleSubmit,\n                              children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n                                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                                  as: Col,\n                                  md: \"6\",\n                                  controlId: \"validationFormik01\",\n                                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                                    children: \"First Name\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 256,\n                                    columnNumber: 15\n                                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                                    type: \"text\",\n                                    placeholder: \"First Name\",\n                                    name: \"fname\",\n                                    value: values.fname // onChangeCapture={(e)=>this.setState({isBlocking:e.target.value>0})}\n                                    ,\n                                    onChange: e => {\n                                      this.setState({\n                                        isBlocking: e.target.value.length > 0\n                                      });\n                                      handleChange(e);\n                                    },\n                                    isInvalid: !!errors.fname\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 258,\n                                    columnNumber: 15\n                                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                                    type: \"invalid\",\n                                    children: errors.fname\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 267,\n                                    columnNumber: 15\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 254,\n                                  columnNumber: 13\n                                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                                  as: Col,\n                                  md: \"6\",\n                                  controlId: \"validationFormik01\",\n                                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                                    children: \"Last Name\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 272,\n                                    columnNumber: 15\n                                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                                    type: \"text\",\n                                    placeholder: \"Last Name\",\n                                    name: \"lname\",\n                                    value: values.lname,\n                                    onChange: e => {\n                                      this.setState({\n                                        isBlocking: e.target.value.length > 0\n                                      });\n                                      handleChange(e);\n                                    },\n                                    isInvalid: !!errors.lname\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 273,\n                                    columnNumber: 15\n                                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                                    type: \"invalid\",\n                                    children: errors.lname\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 281,\n                                    columnNumber: 15\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 271,\n                                  columnNumber: 13\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 253,\n                                columnNumber: 11\n                              }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                                  as: Col,\n                                  md: \"12\",\n                                  controlId: \"validationFormik02\",\n                                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                                    children: \"Email ID\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 290,\n                                    columnNumber: 15\n                                  }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                                    children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                                      children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                                        id: \"inputGroupPrepend\",\n                                        children: \"@\"\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 293,\n                                        columnNumber: 19\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 292,\n                                      columnNumber: 17\n                                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                                      type: \"text\",\n                                      placeholder: \"Email ID\",\n                                      \"aria-describedby\": \"inputGroupPrepend\",\n                                      name: \"email\",\n                                      value: values.email,\n                                      onChange: e => {\n                                        this.setState({\n                                          isBlocking: e.target.value.length > 0\n                                        });\n                                        handleChange(e);\n                                      },\n                                      isInvalid: !!errors.email\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 295,\n                                      columnNumber: 17\n                                    }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                                      type: \"invalid\",\n                                      children: errors.email\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 304,\n                                      columnNumber: 17\n                                    }, this)]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 291,\n                                    columnNumber: 15\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 289,\n                                  columnNumber: 11\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 288,\n                                columnNumber: 11\n                              }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                                  as: Col,\n                                  md: \"12\",\n                                  controlId: \"validationFormik03\",\n                                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                                    children: \"Password\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 313,\n                                    columnNumber: 15\n                                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                                    type: \"password\",\n                                    placeholder: \"Password\",\n                                    name: \"password\",\n                                    value: values.password,\n                                    onChange: e => {\n                                      this.setState({\n                                        isBlocking: e.target.value.length > 0\n                                      });\n                                      handleChange(e);\n                                    },\n                                    isInvalid: !!errors.password\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 314,\n                                    columnNumber: 15\n                                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                                    type: \"invalid\",\n                                    children: errors.password\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 322,\n                                    columnNumber: 15\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 312,\n                                  columnNumber: 13\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 311,\n                                columnNumber: 13\n                              }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                                  as: Col,\n                                  md: \"6\",\n                                  controlId: \"validationFormik03\",\n                                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                                    children: \"City\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 331,\n                                    columnNumber: 15\n                                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                                    type: \"text\",\n                                    placeholder: \"City\",\n                                    name: \"city\",\n                                    value: values.city ? values.city : this.state.city,\n                                    onChange: e => {\n                                      this.setState({\n                                        isBlocking: e.target.value.length > 0\n                                      });\n                                      handleChange(e);\n                                    },\n                                    isInvalid: !!errors.city\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 332,\n                                    columnNumber: 15\n                                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                                    type: \"invalid\",\n                                    children: errors.city\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 340,\n                                    columnNumber: 15\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 330,\n                                  columnNumber: 13\n                                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                                  as: Col,\n                                  md: \"6\",\n                                  controlId: \"validationFormik03\",\n                                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                                    children: \"State\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 345,\n                                    columnNumber: 15\n                                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                                    disabled: true,\n                                    type: \"text\",\n                                    placeholder: \"State\",\n                                    name: \"state\",\n                                    value: values.state ? values.state : this.state.State,\n                                    onChange: e => {\n                                      this.setState({\n                                        isBlocking: e.target.value.length > 0\n                                      });\n                                      handleChange(e);\n                                    },\n                                    isInvalid: !!errors.state\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 346,\n                                    columnNumber: 15\n                                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                                    type: \"invalid\",\n                                    children: errors.state\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 355,\n                                    columnNumber: 15\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 344,\n                                  columnNumber: 13\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 329,\n                                columnNumber: 11\n                              }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                                  as: Col,\n                                  md: \"6\",\n                                  controlId: \"validationFormik03\",\n                                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                                    children: \"Postal\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 362,\n                                    columnNumber: 15\n                                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                                    type: \"number\",\n                                    placeholder: \"Postal\",\n                                    name: \"postal\",\n                                    value: values.postal ? values.postal : this.state.postal,\n                                    onChange: e => {\n                                      this.setState({\n                                        isBlocking: e.target.value.length > 0\n                                      });\n                                      handleChange(e);\n                                    },\n                                    isInvalid: !!errors.postal\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 363,\n                                    columnNumber: 15\n                                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                                    type: \"invalid\",\n                                    children: errors.postal\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 372,\n                                    columnNumber: 15\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 361,\n                                  columnNumber: 13\n                                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                                  as: Col,\n                                  md: \"6\",\n                                  controlId: \"validationFormik03\",\n                                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                                    children: \"Country\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 377,\n                                    columnNumber: 15\n                                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                                    disabled: true,\n                                    type: \"text\",\n                                    placeholder: \"Country\",\n                                    name: \"country\",\n                                    value: values.country ? values.country : this.state.country,\n                                    onChange: e => {\n                                      this.setState({\n                                        isBlocking: e.target.value.length > 0\n                                      });\n                                      handleChange(e);\n                                    },\n                                    isInvalid: !!errors.country\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 378,\n                                    columnNumber: 15\n                                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                                    type: \"invalid\",\n                                    children: errors.country\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 387,\n                                    columnNumber: 15\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 376,\n                                  columnNumber: 13\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 360,\n                                columnNumber: 13\n                              }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                                  as: Col,\n                                  md: \"12\",\n                                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                    className: \"mb-3\",\n                                    children: /*#__PURE__*/_jsxDEV(Form.File, {\n                                      id: \"formcheck-api-regular\",\n                                      children: [/*#__PURE__*/_jsxDEV(Form.File.Label, {\n                                        children: \"Profile Image \"\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 411,\n                                        columnNumber: 21\n                                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                                        id: \"inputFileToLoad\",\n                                        type: \"file\",\n                                        onChange: this.encodeImageFileAsURL\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 412,\n                                        columnNumber: 21\n                                      }, this)]\n                                    }, void 0, true, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 410,\n                                      columnNumber: 21\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 409,\n                                    columnNumber: 17\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 408,\n                                  columnNumber: 13\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 407,\n                                columnNumber: 13\n                              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                                type: \"submit\",\n                                children: \"Register\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 436,\n                                columnNumber: 11\n                              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                                defaultChecked: this.state.remember,\n                                style: {\n                                  marginLeft: '1rem',\n                                  marginTop: '.5rem'\n                                },\n                                type: \"checkbox\",\n                                onChange: this.handleCheckboxChange\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 438,\n                                columnNumber: 11\n                              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                children: \"  Remember me!\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 438,\n                                columnNumber: 155\n                              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                style: {},\n                                className: \"forgot-password text-right\",\n                                children: [\"Already registered \", /*#__PURE__*/_jsxDEV(\"span\", {\n                                  onClick: this.handleSignIn,\n                                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                                    children: /*#__PURE__*/_jsxDEV(\"b\", {\n                                      children: \"Sign in?\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 440,\n                                      columnNumber: 91\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 440,\n                                    columnNumber: 87\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 440,\n                                  columnNumber: 52\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 439,\n                                columnNumber: 29\n                              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                id: \"imgTest\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 442,\n                                columnNumber: 29\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 251,\n                              columnNumber: 9\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 210,\n                            columnNumber: 25\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 209,\n                          columnNumber: 1\n                        }, this)]\n                      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              display: 'flex',\n                              flexDirection: 'column',\n                              alignItems: 'center'\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(\"h7\", {\n                              style: {\n                                fontSize: '22px'\n                              },\n                              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                                children: \"Login Now\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 451,\n                                columnNumber: 63\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 451,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              style: {\n                                fontSize: '14px',\n                                color: 'rgba(59,62,102,.5)'\n                              },\n                              children: \"Login To Continue The Contribution with Our Advanced Tools!!\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 452,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 450,\n                            columnNumber: 21\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 449,\n                          columnNumber: 21\n                        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                          children: /*#__PURE__*/_jsxDEV(Formik, {\n                            validationSchema: schemaLogin,\n                            initialValues: {\n                              email: '',\n                              password: ''\n                            },\n                            onSubmit: values => {\n                              this.setState({\n                                isBlocking: false\n                              });\n                              console.log(\"Update:\", this.state.isBlocking);\n                              const {\n                                email,\n                                password\n                              } = values;\n                              const user = {\n                                email,\n                                password\n                              };\n                              this.props.login(user);\n                            },\n                            children: ({\n                              handleSubmit,\n                              handleChange,\n                              values,\n                              errors,\n                              touched\n                            }) => /*#__PURE__*/_jsxDEV(Form, {\n                              noValidate: true,\n                              onSubmit: handleSubmit,\n                              children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n                                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                                  as: Col,\n                                  md: \"12\",\n                                  controlId: \"validationFormik02\",\n                                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                                    children: \"Email ID\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 487,\n                                    columnNumber: 33\n                                  }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                                    children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                                      children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                                        id: \"inputGroupPrepend\",\n                                        children: \"@\"\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 490,\n                                        columnNumber: 37\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 489,\n                                      columnNumber: 37\n                                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                                      type: \"text\",\n                                      placeholder: \"Email ID\",\n                                      \"aria-describedby\": \"inputGroupPrepend\",\n                                      name: \"email\",\n                                      value: values.email,\n                                      onChange: e => {\n                                        this.setState({\n                                          isBlocking: e.target.value.length > 0\n                                        });\n                                        handleChange(e);\n                                      },\n                                      isInvalid: !!errors.email\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 492,\n                                      columnNumber: 37\n                                    }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                                      children: \"Looks good!\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 501,\n                                      columnNumber: 38\n                                    }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                                      type: \"invalid\",\n                                      children: touched.email && errors.email\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 502,\n                                      columnNumber: 37\n                                    }, this)]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 488,\n                                    columnNumber: 33\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 486,\n                                  columnNumber: 29\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 485,\n                                columnNumber: 29\n                              }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                                  as: Col,\n                                  md: \"12\",\n                                  controlId: \"validationFormik03\",\n                                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                                    children: \"Password\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 512,\n                                    columnNumber: 33\n                                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                                    type: \"password\",\n                                    placeholder: \"Password\",\n                                    name: \"password\",\n                                    value: values.password,\n                                    onChange: e => {\n                                      this.setState({\n                                        isBlocking: e.target.value.length > 0\n                                      });\n                                      handleChange(e);\n                                    },\n                                    isInvalid: !!errors.password\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 513,\n                                    columnNumber: 33\n                                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                                    children: \"Looks good!\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 521,\n                                    columnNumber: 34\n                                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                                    type: \"invalid\",\n                                    children: touched.password && errors.password\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 522,\n                                    columnNumber: 33\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 511,\n                                  columnNumber: 33\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 509,\n                                columnNumber: 33\n                              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                                type: \"submit\",\n                                children: \"Login\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 539,\n                                columnNumber: 29\n                              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                                defaultChecked: this.state.remember,\n                                style: {\n                                  marginLeft: '1rem',\n                                  marginTop: '.5rem'\n                                },\n                                type: \"checkbox\",\n                                onChange: this.handleCheckboxChange\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 540,\n                                columnNumber: 29\n                              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                children: \"  Remember me!\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 540,\n                                columnNumber: 173\n                              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                style: {\n                                  marginTop: '1rem'\n                                },\n                                className: \"forgot-password text-right\",\n                                children: [\"Don't have an account?  \", /*#__PURE__*/_jsxDEV(\"span\", {\n                                  onClick: this.handleSignIn,\n                                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                                    children: /*#__PURE__*/_jsxDEV(\"b\", {\n                                      children: \"Create an Account\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 542,\n                                      columnNumber: 115\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 542,\n                                    columnNumber: 112\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 542,\n                                  columnNumber: 77\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 541,\n                                columnNumber: 53\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 482,\n                              columnNumber: 29\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 456,\n                            columnNumber: 21\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 455,\n                          columnNumber: 21\n                        }, this)]\n                      }, void 0, true)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 198,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: 6,\n                    children: /*#__PURE__*/_jsxDEV(Card, {\n                      style: {\n                        marginTop: '5rem'\n                      },\n                      className: \"banner-card \",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"banner\",\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          alt: \"alt\",\n                          src: banner\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 559,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 558,\n                        columnNumber: 23\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 557,\n                      columnNumber: 19\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 556,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    categories: state.category.categories,\n    isAuthenticated: state.auth.isAuthenticated,\n    isBlocked: state.auth.isBlocked,\n    isLoading: state.auth.isLoading,\n    user: state.auth.user,\n    products: state.item.items,\n    itemsLoading: state.item.itemsLoading,\n    itemsLoaded: state.item.itemsLoaded,\n    error: state.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loadUser,\n  loginModalOpen,\n  getItems,\n  deleteItem,\n  getCategories,\n  login,\n  register,\n  clearErrors\n})(withRouter(RegisterPage));","map":{"version":3,"sources":["C:/Users/spicy/Downloads/Inventory-management-17/client/src/components/auth/RegisterPage.js"],"names":["React","Component","NotificationSystem","connect","Prompt","withRouter","loadUser","register","login","TokenExpireExtend","loginModalOpen","isBlockedF","getCategories","getItems","deleteItem","clearErrors","AppNavbar","back","Footer","banner","Button","InputGroup","Col","Alert","NavLink","Modal","Form","Container","Row","Card","PropTypes","Formik","yup","store","Loading","FontAwesomeIcon","faExclamationTriangle","faInfo","schemaLogin","object","email","string","required","password","min","max","phoneRegExp","schemaRegister","fname","lname","city","state","country","postal","number","integer","RegisterPage","notificationSystem","createRef","imageURL","signIn","remember","modal","props","isModalOpen","msg","State","ip","isBlocking","startRender","addNotification","notification","current","title","message","level","position","autoDismiss","handleSignIn","console","log","setState","prevState","encodeImageFileAsURL","filesSelected","document","getElementById","files","length","fileToLoad","fileReader","FileReader","onload","fileLoadedEvent","srcData","target","result","newImage","createElement","src","readAsDataURL","componentDidMount","history","location","authenticate","window","confirm","push","response","fetch","ipData","json","IPv4","country_name","componentWillMount","dispatch","action","setTimeout","isAuthenticated","componentDidUpdate","prevProps","error","id","render","alignItems","backgroundImage","backgroundRepeat","pathname","marginTop","display","flexDirection","fontSize","color","values","img","newUser","handleSubmit","handleChange","errors","e","value","marginLeft","handleCheckboxChange","user","touched","mapStateToProps","categories","category","auth","isBlocked","isLoading","products","item","items","itemsLoading","itemsLoaded"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport NotificationSystem from 'react-notification-system';\r\nimport {connect} from 'react-redux';\r\nimport './RegisterPage.css'\r\nimport { Prompt, withRouter} from 'react-router-dom';\r\n\r\nimport {loadUser,register,login,TokenExpireExtend,loginModalOpen,isBlockedF} from '../../action/authActions';\r\nimport {getCategories} from '../../action/categoryAction';\r\nimport { getItems,deleteItem } from \"../../action/itemAction\";\r\nimport {clearErrors}  from '../../action/errorActions';\r\nimport AppNavbar from '../AppNavbar/AppNavbar';\r\nimport back from '../../assets/images/back.jpg'\r\nimport Footer from '../Footer/Footer';\r\n\r\nimport banner from '../../assets/images/LoginSVG.png' \r\n\r\n\r\nimport { Button,InputGroup,Col,Alert,NavLink, Modal,Form,Container,Row,Card } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport {Formik} from 'formik';\r\nimport * as yup from 'yup';\r\nimport store from '../../store';\r\nimport Loading from '../LazyLoadingPage/Loading';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faExclamationTriangle, faInfo } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nconst schemaLogin = yup.object({\r\n    email: yup.string().email('Invalid email').required(),\r\n    password: yup.string().min(0, 'Password must be at least 6 characters').max(24, 'Password can be maximum 24 characters').required()\r\n})\r\n\r\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\r\n\r\n\r\nconst schemaRegister = yup.object({\r\n    fname:yup.string().min(1, 'At least 1 characters').max(10, 'First Name can be maximum 10 characters').required(),   \r\n    lname:yup.string().min(1, 'At least 1 characters').max(10, 'Last Name can be maximum 10 characters').required(),   \r\n    city:yup.string().min(3, 'City must be at least 3 characters').max(24, 'City can be maximum 20 characters'),   \r\n    state:yup.string().min(3, 'State must be at least 3 characters').max(24, 'State can be maximum 20 characters'),   \r\n    country:yup.string().min(3, 'Country must be at least 3 characters').max(24, 'Country can be maximum 20 characters'),   \r\n    postal:yup.number().integer(),   \r\n    email: yup.string().email('Invalid email').required(),\r\n    password: yup.string().min(6, 'Password must be at least 6 characters').max(24, 'Password can be maximum 24 characters').required(),\r\n    // mobile_number:yup.number().max(9999999999,'Invalid Number').required()//.matches(phoneRegExp,\"Number is Not Like Mobile number\"),   \r\n})\r\n\r\n\r\nclass RegisterPage extends Component {  \r\n  \r\n    notificationSystem = React.createRef();\r\n    \r\n    state={\r\n        imageURL:\"\",\r\n        signIn:false,\r\n        remember:false,\r\n        modal:this.props.isModalOpen,   // modal for adding item is false initially\r\n        msg:null,\r\n        city:'',\r\n        State:'',\r\n        country:'',\r\n        postal:'',\r\n        ip:'',\r\n        isBlocking:false,\r\n        startRender:false\r\n    };\r\n\r\n    addNotification = msg => {\r\n      const notification = this.notificationSystem.current;\r\n      notification.addNotification({\r\n        title:<div><FontAwesomeIcon icon={faExclamationTriangle}/> Server Error</div>,\r\n        message: this.state.msg,\r\n        level: 'error',\r\n        position:'tc',\r\n        autoDismiss:5\r\n      });\r\n    };\r\n\r\nasync componentDidMount(){\r\n  if(this.props.history.location.state!=='button'){\r\n  let authenticate = window.confirm(\"You Need To Login To Get Full Access of ShopperZ\")\r\n  if(!authenticate){\r\n          this.props.history.push('/')\r\n  }}\r\n  let response=await fetch(`https://geolocation-db.com/json/`)\r\n  let ipData=await response.json();\r\n  \r\n  this.setState({ip:ipData.IPv4,city:ipData.city,country:ipData.country_name,postal:ipData.postal,State:ipData.state})\r\n  // console.log(\"City:\",this.state.city);  \r\n}\r\n\r\n\r\n componentWillMount(){\r\n        store.dispatch(loadUser());\r\n        console.log(\"Action Login Page:\",this.props.history);\r\n        if(this.props.history.action==='POP')\r\n        {\r\n            setTimeout(()=>{\r\n            console.log(\"timeout\");\r\n            if(this.props.isAuthenticated){\r\n              this.props.history.push('/')\r\n              // this.props.loginModalOpen(true);\r\n            }\r\n          },50)\r\n        }\r\n        else\r\n         if(this.props.isAuthenticated){\r\n          console.log(\"Direct\");\r\n          this.props.history.push('/')\r\n          // this.props.loginModalOpen(true);\r\n         }\r\n         setTimeout(()=>{\r\n            this.setState({startRender:true})\r\n         },60)\r\n    }\r\n    componentDidUpdate(prevProps){\r\n  \r\n      const {error,isAuthenticated}=this.props;\r\n        if(error!==prevProps.error){\r\n            if(error.id===\"REGISTER_FAIL\"){\r\n                this.setState({msg:error.msg.msg});\r\n                this.setState({isBlocking:true});\r\n                this.addNotification(this.state.msg);\r\n              }\r\n              else if(error.id===\"LOGIN_FAIL\"){\r\n                this.setState({msg:error.msg.msg});\r\n                this.setState({isBlocking:true});\r\n                setTimeout(()=>{\r\n                  \r\n                  this.addNotification(this.state.msg?this.state.msg:\"Something Went Wrong\");\r\n                },60);\r\n                // console.log(\"Error R:\",error.msg.msg,this.state.msg);\r\n            }\r\n            else{\r\n                this.setState({msg:null});\r\n                \r\n            }\r\n        }\r\n        \r\n\r\n        store.dispatch(loadUser());\r\n       if(this.props.isAuthenticated){\r\n        \r\n         console.log(\"update Component\");\r\n        this.props.history.push('/')\r\n        // this.props.loginModalOpen(true);\r\n       }\r\n      }\r\n\r\n    handleSignIn=()=>{\r\n        console.log(\"Sign In Toggle Called\",this.state.signIn);\r\n        this.setState((prevState)=>{\r\n            return {signIn:!prevState.signIn}\r\n        })\r\n    }\r\n     encodeImageFileAsURL=()=> {\r\n        console.log(\"image uploading func. called\");\r\n        var filesSelected = document.getElementById(\"inputFileToLoad\").files;\r\n        if (filesSelected.length > 0) {\r\n          var fileToLoad = filesSelected[0];\r\n    \r\n          var fileReader = new FileReader();\r\n    \r\n          fileReader.onload = (fileLoadedEvent)=> {\r\n            var srcData = fileLoadedEvent.target.result; // <--- data: base64\r\n    \r\n            var newImage = document.createElement('img');\r\n            newImage.src = srcData;\r\n            this.setState({imageURL:newImage.src});\r\n            \r\n           \r\n          }\r\n          fileReader.readAsDataURL(fileToLoad);\r\n        }\r\n        // return newImage.src;\r\n      }\r\n\r\n    render(){\r\n        return (\r\n           \r\n           <>\r\n           <NotificationSystem ref={this.notificationSystem} />\r\n           {!this.state.startRender?<Loading/>:\r\n          <div>\r\n<div className=\"App\" style={{alignItems:'center', backgroundImage: `url(\"${back}\")`,backgroundRepeat:'no-repeat'}} >\r\n            <AppNavbar/>\r\n           \r\n            <Container>\r\n          <div className=\"content\" >\r\n            <Container fluid>\r\n            <Prompt\r\n                when={this.state.isBlocking}\r\n                message={(location)=> `Are You Sure Want To Go To ${location.pathname}`}\r\n/> \r\n              <Row>\r\n             \r\n                <Col md={6} >\r\n                    <Card style={{marginTop:'5rem'}} >\r\n                    {this.state.signIn?\r\n                    <> \r\n                        <Card.Header >\r\n\r\n                            <div style={{display:'flex',flexDirection:'column',alignItems:'center'}}>\r\n                                <h7 style={{fontSize:'22px'}}><b>Create a New Account</b></h7>    \r\n                                <span style={{fontSize:'14px',color:'rgba(59,62,102,.5)'}}>Start benefiting from our tools right away</span>\r\n                            </div> \r\n                            {/* {this.state.msg?<Alert color=\"danger\">{this.state.msg}</Alert>:null}    */}\r\n                        </Card.Header>  \r\n<Card.Body>\r\n                        <Formik\r\n    // validator={() => ({})}\r\n      validationSchema={schemaRegister}\r\n      initialValues={{\r\n        fname:'',\r\n        lname:'',\r\n        email:'',\r\n        password:'',\r\n        city:this.state.city,\r\n        state:this.state.State,\r\n        postal:this.state.postal,\r\n        country:this.state.country,\r\n        // mobile_number:''\r\n\r\n      }}\r\n      onSubmit={(values)=>{ \r\n        \r\n        this.encodeImageFileAsURL();\r\n        const imageURL=this.state.imageURL;\r\n        console.log(\"Image URL\",imageURL);\r\n        const {fname,lname,email,password,city,state,postal,country}=values;\r\n        console.log(fname,lname,email,password,city,state,postal,country);\r\n        let img=this.state.imageURL;\r\n        let ip=this.state.ip;\r\n        const newUser={\r\n            fname,lname,email,password,img,city,state,postal,country,ip\r\n        }\r\n        this.setState({isBlocking:false});\r\n                // console.log(\"Update:\",this.state.isBlocking);\r\n        this.props.register(newUser);\r\n        \r\n    }\r\n    }\r\n    >\r\n       \r\n      {({\r\n        handleSubmit,\r\n        handleChange,\r\n        values,\r\n        errors,\r\n         }) => (\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          \r\n          <Form.Row>\r\n            <Form.Group as={Col} md=\"6\" controlId=\"validationFormik01\">\r\n           \r\n              <Form.Label>First Name</Form.Label>\r\n              \r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"First Name\"\r\n                name=\"fname\"\r\n                value={values.fname}\r\n                // onChangeCapture={(e)=>this.setState({isBlocking:e.target.value>0})}\r\n                onChange={e=>{this.setState({isBlocking:e.target.value.length>0});  handleChange(e)}}\r\n                isInvalid={!!errors.fname}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.fname}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group as={Col} md=\"6\" controlId=\"validationFormik01\">\r\n              <Form.Label>Last Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Last Name\"\r\n                name=\"lname\"\r\n                value={values.lname}\r\n                onChange={e=>{this.setState({isBlocking:e.target.value.length>0}); handleChange(e)}}\r\n                isInvalid={!!errors.lname}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.lname}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n           \r\n\r\n          </Form.Row>\r\n          <Form.Row>\r\n          <Form.Group as={Col} md=\"12\" controlId=\"validationFormik02\">\r\n              <Form.Label>Email ID</Form.Label>\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Email ID\"\r\n                  aria-describedby=\"inputGroupPrepend\"\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={e=>{this.setState({isBlocking:e.target.value.length>0}); handleChange(e)}}\r\n                  isInvalid={!!errors.email}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.email}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n            <Form.Group as={Col} md=\"12\" controlId=\"validationFormik03\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                value={values.password}\r\n                onChange={e=>{this.setState({isBlocking:e.target.value.length>0}); handleChange(e)}}\r\n                isInvalid={!!errors.password}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.password}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n          </Form.Row>\r\n         \r\n          <Form.Row>\r\n            <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\">\r\n              <Form.Label>City</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"City\"\r\n                name=\"city\"\r\n                value={values.city?values.city:this.state.city}\r\n                onChange={e=>{this.setState({isBlocking:e.target.value.length>0}); handleChange(e)}}\r\n                isInvalid={!!errors.city}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.city}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\">\r\n              <Form.Label>State</Form.Label>\r\n              <Form.Control\r\n               disabled\r\n                type=\"text\"\r\n                placeholder=\"State\"\r\n                name=\"state\"\r\n                value={values.state?values.state:this.state.State}\r\n                onChange={e=>{this.setState({isBlocking:e.target.value.length>0}); handleChange(e)}}\r\n                isInvalid={!!errors.state}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.state}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n            <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\">\r\n              <Form.Label>Postal</Form.Label>\r\n              <Form.Control\r\n             \r\n                type=\"number\"\r\n                placeholder=\"Postal\"\r\n                name=\"postal\"\r\n                value={values.postal?values.postal:this.state.postal}\r\n                onChange={e=>{this.setState({isBlocking:e.target.value.length>0}); handleChange(e)}}\r\n                isInvalid={!!errors.postal}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.postal}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\">\r\n              <Form.Label>Country</Form.Label>\r\n              <Form.Control\r\n               disabled\r\n                type=\"text\"\r\n                placeholder=\"Country\"\r\n                name=\"country\"\r\n                value={values.country?values.country:this.state.country}\r\n                onChange={e=>{this.setState({isBlocking:e.target.value.length>0}); handleChange(e)}}\r\n                isInvalid={!!errors.country}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.country}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            {/* <Form.Group as={Col} md=\"12\" controlId=\"validationFormik03\">\r\n              <Form.Label>Phone/Mobile Number</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Mobile Number\"\r\n                name=\"mobile\"\r\n                value={values.mobile_number}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.mobile_number}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.mobile_number}\r\n              </Form.Control.Feedback>\r\n            </Form.Group> */}\r\n\r\n          </Form.Row>\r\n            <Form.Row>\r\n            <Form.Group as={Col} md=\"12\">\r\n                <div className=\"mb-3\">\r\n                    <Form.File id=\"formcheck-api-regular\">\r\n                    <Form.File.Label>Profile Image </Form.File.Label>\r\n                    <input id=\"inputFileToLoad\"  type=\"file\" onChange={this.encodeImageFileAsURL} />\r\n                    </Form.File>\r\n                </div>\r\n            </Form.Group>\r\n\r\n          </Form.Row>\r\n\r\n          {/* <Form.Row>\r\n          <Map\r\n                google={this.props.google}\r\n                center={{lat: 18.5204, lng: 73.8567}}\r\n                height='300px'\r\n                zoom={15}\r\n    />\r\n          </Form.Row>\r\n          <Form.Row>\r\n         \r\n          </Form.Row>\r\n          <Form.Row>\r\n         \r\n          </Form.Row>\r\n          <Form.Row style={{marginBottom:'10rem'}}>\r\n         <p>Hello</p>\r\n          </Form.Row> */}\r\n          <Button type=\"submit\">Register</Button>\r\n          \r\n          <input defaultChecked={this.state.remember} style={{marginLeft:'1rem',marginTop:'.5rem'}} type=\"checkbox\" onChange={this.handleCheckboxChange}/><span>  Remember me!</span>\r\n                            <div style={{}} className=\"forgot-password text-right\">\r\n                                Already registered <span onClick={this.handleSignIn} ><a ><b>Sign in?</b></a></span>\r\n                            </div>\r\n                            <div id=\"imgTest\"></div>\r\n                        </Form>\r\n                        \r\n                    )}\r\n                    </Formik>\r\n                    </Card.Body></>:\r\n                <>\r\n                    <Card.Header>\r\n                    <div style={{display:'flex',flexDirection:'column',alignItems:'center'}}>\r\n                                <h7 style={{fontSize:'22px'}}><b>Login Now</b></h7>    \r\n                                <span style={{fontSize:'14px',color:'rgba(59,62,102,.5)'}}>Login To Continue The Contribution with Our Advanced Tools!!</span>\r\n                            </div>   \r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                    <Formik\r\n                        validationSchema={schemaLogin}\r\n                        initialValues={{\r\n                            email:'',\r\n                            password:'',\r\n\r\n                        }}\r\n                        onSubmit={(values)=>{ \r\n                          this.setState({isBlocking:false});\r\n                          console.log(\"Update:\",this.state.isBlocking);\r\n                        const {email,password}=values;\r\n                    \r\n                        const user={\r\n                            email,password\r\n                        }\r\n                        this.props.login(user);\r\n                        }\r\n                        }\r\n                        >\r\n                        {({\r\n                            handleSubmit,\r\n                            handleChange,\r\n                            values,\r\n                            errors,\r\n                            touched\r\n                            }) => (\r\n                            <Form noValidate onSubmit={handleSubmit}>\r\n                            \r\n                            \r\n                            <Form.Row>\r\n                            <Form.Group as={Col} md=\"12\" controlId=\"validationFormik02\">\r\n                                <Form.Label>Email ID</Form.Label>\r\n                                <InputGroup>\r\n                                    <InputGroup.Prepend>\r\n                                    <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n                                    </InputGroup.Prepend>\r\n                                    <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Email ID\"\r\n                                    aria-describedby=\"inputGroupPrepend\"\r\n                                    name=\"email\"\r\n                                    value={values.email}\r\n                                    onChange={e=>{this.setState({isBlocking:e.target.value.length>0}); handleChange(e)}}\r\n                                    isInvalid={!!errors.email}\r\n                                    />\r\n                                     <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                    {touched.email && errors.email}\r\n                                    </Form.Control.Feedback>\r\n                                   \r\n                                </InputGroup>\r\n                                </Form.Group>\r\n                                </Form.Row>\r\n                                <Form.Row>\r\n                                \r\n                                <Form.Group as={Col} md=\"12\" controlId=\"validationFormik03\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    name=\"password\"\r\n                                    value={values.password}\r\n                                    onChange={e=>{this.setState({isBlocking:e.target.value.length>0}); handleChange(e)}}\r\n                                    isInvalid={!!errors.password}\r\n                                />\r\n                                 <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {touched.password && errors.password}\r\n                                </Form.Control.Feedback>\r\n                                </Form.Group>\r\n\r\n                            </Form.Row>\r\n                            {/* <Form.Group>\r\n                                <Form.Check\r\n                                required\r\n                                name=\"terms\"\r\n                                label=\"Agree to terms and conditions\"\r\n                                onChange={e=>{this.setState({isBlocking:e.target.value.length>0}); handleChange(e)}}\r\n                                isInvalid={!!errors.terms}\r\n                                feedback={errors.terms}\r\n                                id=\"validationFormik0\"\r\n                                />\r\n                            </Form.Group> */}\r\n                            <Button type=\"submit\">Login</Button>\r\n                            <input defaultChecked={this.state.remember} style={{marginLeft:'1rem',marginTop:'.5rem'}} type=\"checkbox\" onChange={this.handleCheckboxChange}/><span>  Remember me!</span>\r\n                                                    <div style={{marginTop:'1rem',}} className=\"forgot-password text-right\">\r\n                                                    Don't have an account?  <span onClick={this.handleSignIn} ><a><b>Create an Account</b></a></span>\r\n                                    </div> \r\n                            </Form>\r\n                        )}\r\n                        </Formik>\r\n                    </Card.Body>\r\n                    </>}\r\n\r\n\r\n\r\n\r\n                    </Card>\r\n                </Col>\r\n                \r\n                <Col md={6}>\r\n                  <Card style={{marginTop:'5rem'}} className='banner-card '>\r\n                      <div className='banner'>\r\n                          <img  alt=\"alt\" src={banner}/>\r\n                      </div>\r\n                  </Card>\r\n                </Col>\r\n              \r\n              </Row>\r\n              \r\n            \r\n            </Container>\r\n           \r\n            \r\n      </div>\r\n  \r\n      </Container>\r\n            \r\n      \r\n      \r\n      </div>\r\n\r\n    <div >\r\n        <Footer/>\r\n    </div>  \r\n     </div>}\r\n            </>\r\n          );\r\n    }\r\n  \r\n};\r\nconst mapStateToProps= state=>{\r\n    return({\r\n      categories:state.category.categories,\r\n        isAuthenticated:state.auth.isAuthenticated,\r\n        isBlocked:state.auth.isBlocked,\r\n        isLoading:state.auth.isLoading,\r\n        user:state.auth.user,\r\n        products:state.item.items,\r\n        itemsLoading:state.item.itemsLoading,\r\n        itemsLoaded:state.item.itemsLoaded,\r\n        error:state.error\r\n    })\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,{loadUser,loginModalOpen,getItems,deleteItem,getCategories,login,register,clearErrors})(withRouter(RegisterPage));\r\n"]},"metadata":{},"sourceType":"module"}