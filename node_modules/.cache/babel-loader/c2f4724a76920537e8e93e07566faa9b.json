{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\spicy\\\\Downloads\\\\Inventory-management-17\\\\client\\\\src\\\\App.js\";\nimport React, { Component, Suspense } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport store from './store';\nimport { Container } from 'reactstrap';\nimport { loadUser, loginModalOpen } from \"./action/authActions\";\nimport Sidebar from './components/Sidebar/Sidebar';\nimport Footer from './components/Footer/Footer';\nimport AdminNavbar from './components/Navbars/AdminNavbar';\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport routes from \"./routes.js\";\nimport { getCategories } from './action/categoryAction';\nimport { Card } from 'react-bootstrap';\nimport Loading from './components/LazyLoadingPage/Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.getRoutes = routes => {\n      return routes.map((prop, key) => {\n        if (prop.layout === \"/admin\") {\n          return /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: prop.layout + prop.path,\n            render: props => /*#__PURE__*/_jsxDEV(prop.component, { ...props,\n              handleClick: this.handleNotificationClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this)\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 11\n          }, this);\n        } else {\n          return null;\n        }\n      });\n    };\n\n    this.getBrandText = path => {\n      for (let i = 0; i < routes.length; i++) {\n        if (this.props.location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\n          return routes[i].name;\n        }\n      }\n\n      return \"Brand\";\n    };\n\n    this.state = {\n      color: \"black\",\n      fixedClasses: \"dropdown show-dropdown open\",\n      isModalOpen: false,\n      startRender: false\n    };\n  }\n\n  componentDidMount(e) {\n    store.dispatch(loadUser());\n    store.dispatch(getCategories());\n    console.log(\"Action:\", this.props.history);\n\n    if (this.props.history.action === 'POP') {\n      setTimeout(() => {\n        console.log(\"timeout\");\n\n        if (!this.props.isAuthenticated) {\n          this.props.history.push('/login'); // this.props.loginModalOpen(true);\n        }\n      }, 150);\n    } else if (!this.props.isAuthenticated) {\n      console.log(\"Direct\");\n      this.props.history.push('/login'); // this.props.loginModalOpen(true);\n    }\n\n    setTimeout(() => {\n      this.setState({\n        startRender: true\n      });\n    }, 160);\n  }\n\n  componentDidUpdate(e) {\n    store.dispatch(loadUser());\n\n    if (!this.props.isAuthenticated) {\n      console.log(\"update Component\");\n      this.props.history.push('/login'); // this.props.loginModalOpen(true);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: !this.state.startRender ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 36\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(Sidebar, { ...this.props,\n          routes: routes,\n          color: this.state.color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"main-panel\",\n          className: \"main-panel\",\n          ref: \"mainPanel\",\n          children: [/*#__PURE__*/_jsxDEV(AdminNavbar, { ...this.props,\n            routes: this.getRoutes(routes),\n            brandText: this.getBrandText(this.props.location.pathname)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), this.getRoutes(routes), /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              margin: '0rem',\n              padding: '0rem'\n            },\n            children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.isAuthenticated\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loginModalOpen\n})(withRouter(App));","map":{"version":3,"sources":["C:/Users/spicy/Downloads/Inventory-management-17/client/src/App.js"],"names":["React","Component","Suspense","connect","store","Container","loadUser","loginModalOpen","Sidebar","Footer","AdminNavbar","Route","Switch","withRouter","routes","getCategories","Card","Loading","App","constructor","props","getRoutes","map","prop","key","layout","path","handleNotificationClick","getBrandText","i","length","location","pathname","indexOf","name","state","color","fixedClasses","isModalOpen","startRender","componentDidMount","e","dispatch","console","log","history","action","setTimeout","isAuthenticated","push","setState","componentDidUpdate","render","margin","padding","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component, Suspense } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport store from './store';\nimport { Container } from 'reactstrap';\nimport { loadUser, loginModalOpen } from \"./action/authActions\";\nimport Sidebar from './components/Sidebar/Sidebar';\nimport Footer from './components/Footer/Footer';\nimport AdminNavbar from './components/Navbars/AdminNavbar';\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport routes from \"./routes.js\";\nimport { getCategories } from './action/categoryAction';\nimport { Card } from 'react-bootstrap';\nimport Loading from './components/LazyLoadingPage/Loading'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: \"black\",\n      fixedClasses: \"dropdown show-dropdown open\",\n      isModalOpen: false,\n      startRender: false,\n    };\n  }\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            exact\n            path={prop.layout + prop.path}\n            render={props => (\n              <prop.component\n                {...props}\n                handleClick={this.handleNotificationClick}\n              />\n            )}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n\n\n  componentDidMount(e) {\n\n    store.dispatch(loadUser());\n    store.dispatch(getCategories());\n    console.log(\"Action:\", this.props.history);\n    if (this.props.history.action === 'POP') {\n      setTimeout(() => {\n        console.log(\"timeout\");\n        if (!this.props.isAuthenticated) {\n          this.props.history.push('/login')\n          // this.props.loginModalOpen(true);\n        }\n      }, 150)\n    }\n    else\n      if (!this.props.isAuthenticated) {\n        console.log(\"Direct\");\n        this.props.history.push('/login')\n        // this.props.loginModalOpen(true);\n      }\n    setTimeout(() => {\n      this.setState({ startRender: true })\n    }, 160)\n\n  }\n  componentDidUpdate(e) {\n\n    store.dispatch(loadUser());\n    if (!this.props.isAuthenticated) {\n      console.log(\"update Component\");\n      this.props.history.push('/login')\n      // this.props.loginModalOpen(true);\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {!this.state.startRender ? <Loading /> :\n          <div className=\"wrapper\">\n            <Sidebar {...this.props} routes={routes}\n              color={this.state.color}\n            />\n            <div id=\"main-panel\" className=\"main-panel\" ref=\"mainPanel\">\n              <AdminNavbar\n                {...this.props} routes={this.getRoutes(routes)}\n                brandText={this.getBrandText(this.props.location.pathname)}\n              />\n\n\n              {this.getRoutes(routes)}\n\n              <Container>\n\n              </Container>\n              <Card style={{ margin: '0rem', padding: '0rem' }}>\n                <Footer />\n              </Card>\n            </div>\n\n          </div>}</>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return ({\n    isAuthenticated: state.auth.isAuthenticated,\n  })\n}\n\nexport default connect(mapStateToProps, { loginModalOpen })(withRouter(App));\n"]},"metadata":{},"sourceType":"module"}