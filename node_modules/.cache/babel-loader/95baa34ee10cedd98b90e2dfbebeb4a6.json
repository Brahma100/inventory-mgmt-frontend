{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\spicy\\\\Downloads\\\\Inventory-management-17\\\\client\\\\src\\\\components\\\\auth\\\\RegisterModal.js\";\nimport React, { Component } from 'react';\nimport { Button, InputGroup, Col, Alert, NavLink, Modal, Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { register, login, TokenExpireExtend, loginModalOpen } from '../../action/authActions';\nimport { clearErrors } from '../../action/errorActions';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport back from '../../assets/images/back.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst schemaLogin = yup.object({\n  email: yup.string().email('Invalid email').required(),\n  password: yup.string().min(0, 'Password must be at least 6 characters').max(24, 'Password can be maximum 24 characters').required()\n});\nconst schemaRegister = yup.object({\n  name: yup.string().min(3, 'Name must be at least 3 characters').max(24, 'Password can be maximum 20 characters').required(),\n  email: yup.string().email('Invalid email').required(),\n  password: yup.string().min(6, 'Password must be at least 6 characters').max(24, 'Password can be maximum 24 characters').required()\n});\n\nclass RegisterModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      imageURL: \"\",\n      signIn: false,\n      remember: false,\n      modal: this.props.isModalOpen,\n      // modal for adding item is false initially\n      msg: null\n    };\n\n    this.toggle = () => {\n      // clear the error\n      this.props.clearErrors(); // to toggle the modal \n\n      this.setState({\n        modal: !this.state.modal\n      }); // this.props.loginModalOpen(this.state.modal)\n    };\n\n    this.handleCheckboxChange = e => {\n      e.preventDefault();\n      this.setState(prevState => {\n        return {\n          remember: !prevState.remember\n        };\n      });\n    };\n\n    this.handleSignIn = () => {\n      console.log(\"Sign in  Toggle Called\", this.state.signIn);\n      this.props.clearErrors();\n      this.setState(prevState => {\n        return {\n          signIn: !prevState.signIn\n        };\n      });\n    };\n\n    this.encodeImageFileAsURL = () => {\n      console.log(\"image uploading func. called\");\n      var filesSelected = document.getElementById(\"inputFileToLoad\").files;\n\n      if (filesSelected.length > 0) {\n        var fileToLoad = filesSelected[0];\n        var fileReader = new FileReader();\n\n        fileReader.onload = fileLoadedEvent => {\n          var srcData = fileLoadedEvent.target.result; // <--- data: base64\n\n          var newImage = document.createElement('img');\n          newImage.src = srcData;\n          this.setState({\n            imageURL: newImage.src\n          }); // document.getElementById(\"imgTest\").innerHTML = newImage.outerHTML;\n          // alert(\"Converted Base64 version is \" + document.getElementById(\"imgTest\").innerHTML);\n          // console.log(\"Converted Base64 version is \" + this.state.imageURL);\n        };\n\n        fileReader.readAsDataURL(fileToLoad);\n      } // return newImage.src;\n\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      error,\n      isAuthenticated\n    } = this.props;\n\n    if (error !== prevProps.error) {\n      if (error.id === \"REGISTER_FAIL\") {\n        this.setState({\n          msg: error.msg.msg\n        });\n      } else if (error.id === \"LOGIN_FAIL\") {\n        this.setState({\n          msg: error.msg.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    } // if authenticated close Modal\n\n\n    if (this.state.modal) {\n      if (isAuthenticated) {\n        this.toggle();\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavLink, {\n        onClick: this.toggle,\n        href: \"#\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            paddingLeft: ' 1.5rem',\n            paddingRight: '1.5rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \" Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 78\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.modal,\n        onHide: this.toggle,\n        children: this.state.signIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            style: {\n              color: 'white',\n              backgroundImage: `url(\"${back}\")`,\n              backgroundSize: '32rem',\n              backgroundRepeat: 'no-repeat'\n            },\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 156\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: [this.state.msg ? /*#__PURE__*/_jsxDEV(Alert, {\n              color: \"danger\",\n              children: this.state.msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 21\n            }, this) : null, /*#__PURE__*/_jsxDEV(Formik // validator={() => ({})}\n            , {\n              validationSchema: schemaRegister,\n              initialValues: {\n                name: '',\n                email: '',\n                password: ''\n              },\n              onSubmit: values => {\n                this.encodeImageFileAsURL();\n                const imageURL = this.state.imageURL;\n                console.log(\"Image URL\", imageURL);\n                const {\n                  name,\n                  email,\n                  password\n                } = values;\n                let img = this.state.imageURL;\n                const newUser = {\n                  name,\n                  email,\n                  password,\n                  img\n                };\n                this.props.register(newUser);\n              },\n              children: ({\n                handleSubmit,\n                handleChange,\n                values,\n                errors\n              }) => /*#__PURE__*/_jsxDEV(Form, {\n                noValidate: true,\n                onSubmit: handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                    as: Col,\n                    md: \"12\",\n                    controlId: \"validationFormik01\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 162,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      placeholder: \"Name\",\n                      name: \"name\",\n                      value: values.name,\n                      onChange: handleChange,\n                      isInvalid: !!errors.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 163,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                      type: \"invalid\",\n                      children: errors.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 171,\n                      columnNumber: 15\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 13\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                    as: Col,\n                    md: \"12\",\n                    controlId: \"validationFormik02\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Email ID\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                        children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                          id: \"inputGroupPrepend\",\n                          children: \"@\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 182,\n                          columnNumber: 19\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 181,\n                        columnNumber: 17\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        type: \"text\",\n                        placeholder: \"Email ID\",\n                        \"aria-describedby\": \"inputGroupPrepend\",\n                        name: \"email\",\n                        value: values.email,\n                        onChange: handleChange,\n                        isInvalid: !!errors.email\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 184,\n                        columnNumber: 17\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                        type: \"invalid\",\n                        children: errors.email\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 193,\n                        columnNumber: 17\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 15\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                    as: Col,\n                    md: \"12\",\n                    controlId: \"validationFormik03\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Password\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 202,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"password\",\n                      placeholder: \"Password\",\n                      name: \"password\",\n                      value: values.password,\n                      onChange: handleChange,\n                      isInvalid: !!errors.password\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 203,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                      type: \"invalid\",\n                      children: errors.password\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 211,\n                      columnNumber: 15\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 13\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                    as: Col,\n                    md: \"12\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: /*#__PURE__*/_jsxDEV(Form.File, {\n                        id: \"formcheck-api-regular\",\n                        children: [/*#__PURE__*/_jsxDEV(Form.File.Label, {\n                          children: \"Profile Image\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 221,\n                          columnNumber: 21\n                        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                          id: \"inputFileToLoad\",\n                          type: \"file\",\n                          onChange: this.encodeImageFileAsURL\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 222,\n                          columnNumber: 21\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 220,\n                        columnNumber: 21\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 17\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 13\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  children: \"Register\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  defaultChecked: this.state.remember,\n                  style: {\n                    marginLeft: '1rem',\n                    marginTop: '.5rem'\n                  },\n                  type: \"checkbox\",\n                  onChange: this.handleCheckboxChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"  Remember me!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 155\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {},\n                  className: \"forgot-password text-right\",\n                  children: [\"Already registered \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    onClick: this.handleSignIn,\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: \"#\",\n                      children: /*#__PURE__*/_jsxDEV(\"b\", {\n                        children: \"Sign in?\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 231,\n                        columnNumber: 99\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 231,\n                      columnNumber: 87\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 52\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"imgTest\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this), \"            \"]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            style: {\n              color: 'white',\n              backgroundImage: `url(\"${back}\")`,\n              backgroundSize: '32rem',\n              backgroundRepeat: 'no-repeat'\n            },\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 156\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: [this.state.msg ? /*#__PURE__*/_jsxDEV(Alert, {\n              color: \"danger\",\n              children: this.state.msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 39\n            }, this) : null, /*#__PURE__*/_jsxDEV(Formik, {\n              validationSchema: schemaLogin,\n              initialValues: {\n                email: '',\n                password: ''\n              },\n              onSubmit: values => {\n                console.log(\"onSUbmit\");\n                const {\n                  email,\n                  password\n                } = values;\n                console.log(\"On Submit Called\", email);\n                const user = {\n                  email,\n                  password\n                };\n                this.props.login(user);\n              },\n              children: ({\n                handleSubmit,\n                handleChange,\n                values,\n                errors,\n                touched\n              }) => /*#__PURE__*/_jsxDEV(Form, {\n                noValidate: true,\n                onSubmit: handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                    as: Col,\n                    md: \"12\",\n                    controlId: \"validationFormik02\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Email ID\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 275,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                        children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                          id: \"inputGroupPrepend\",\n                          children: \"@\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 278,\n                          columnNumber: 37\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 277,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        type: \"text\",\n                        placeholder: \"Email ID\",\n                        \"aria-describedby\": \"inputGroupPrepend\",\n                        name: \"email\",\n                        value: values.email,\n                        onChange: handleChange,\n                        isInvalid: !!errors.email\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 280,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                        children: \"Looks good!\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 289,\n                        columnNumber: 38\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                        type: \"invalid\",\n                        children: touched.email && errors.email\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 290,\n                        columnNumber: 37\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 276,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                    as: Col,\n                    md: \"12\",\n                    controlId: \"validationFormik03\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Password\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 300,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"password\",\n                      placeholder: \"Password\",\n                      name: \"password\",\n                      value: values.password,\n                      onChange: handleChange,\n                      isInvalid: !!errors.password\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 301,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                      children: \"Looks good!\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 309,\n                      columnNumber: 34\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                      type: \"invalid\",\n                      children: touched.password && errors.password\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 310,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  defaultChecked: this.state.remember,\n                  style: {\n                    marginLeft: '1rem',\n                    marginTop: '.5rem'\n                  },\n                  type: \"checkbox\",\n                  onChange: this.handleCheckboxChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"  Remember me!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 173\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginTop: '1rem'\n                  },\n                  className: \"forgot-password text-right\",\n                  children: [\"Don't have an account?  \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    onClick: this.handleSignIn,\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: \"#\",\n                      children: /*#__PURE__*/_jsxDEV(\"b\", {\n                        children: \"Create an Account\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 330,\n                        columnNumber: 124\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 330,\n                      columnNumber: 112\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 77\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nRegisterModal.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired,\n  register: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    isModalOpen: state.auth.isModalOpen,\n    isAuthenticated: state.auth.isAuthenticated,\n    rememberMe: state.auth.rememberMe,\n    error: state.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loginModalOpen,\n  login,\n  register,\n  clearErrors,\n  TokenExpireExtend\n})(RegisterModal);","map":{"version":3,"sources":["C:/Users/spicy/Downloads/Inventory-management-17/client/src/components/auth/RegisterModal.js"],"names":["React","Component","Button","InputGroup","Col","Alert","NavLink","Modal","Form","connect","PropTypes","register","login","TokenExpireExtend","loginModalOpen","clearErrors","Formik","yup","back","schemaLogin","object","email","string","required","password","min","max","schemaRegister","name","RegisterModal","state","imageURL","signIn","remember","modal","props","isModalOpen","msg","toggle","setState","handleCheckboxChange","e","preventDefault","prevState","handleSignIn","console","log","encodeImageFileAsURL","filesSelected","document","getElementById","files","length","fileToLoad","fileReader","FileReader","onload","fileLoadedEvent","srcData","target","result","newImage","createElement","src","readAsDataURL","componentDidUpdate","prevProps","error","isAuthenticated","id","render","paddingLeft","paddingRight","color","backgroundImage","backgroundSize","backgroundRepeat","values","img","newUser","handleSubmit","handleChange","errors","marginLeft","marginTop","user","touched","propTypes","bool","isRequired","func","mapStateToProps","auth","rememberMe"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport { Button,InputGroup,Col,Alert,NavLink, Modal,Form } from 'react-bootstrap';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {register,login,TokenExpireExtend,loginModalOpen} from '../../action/authActions';\nimport {clearErrors}  from '../../action/errorActions';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\nimport back from '../../assets/images/back.jpg';\n\n\nconst schemaLogin = yup.object({\n    email: yup.string().email('Invalid email').required(),\n    password: yup.string().min(0, 'Password must be at least 6 characters').max(24, 'Password can be maximum 24 characters').required()\n})\nconst schemaRegister = yup.object({\n    name:yup.string().min(3, 'Name must be at least 3 characters').max(24, 'Password can be maximum 20 characters').required(),   \n    email: yup.string().email('Invalid email').required(),\n    password: yup.string().min(6, 'Password must be at least 6 characters').max(24, 'Password can be maximum 24 characters').required()\n})\n\n\n\nclass RegisterModal extends Component{\n    state={\n        imageURL:\"\",\n        signIn:false,\n        remember:false,\n        modal:this.props.isModalOpen,   // modal for adding item is false initially\n        msg:null\n    };\n\n\n\n\n\n    componentDidUpdate(prevProps){\n        const {error,isAuthenticated}=this.props;\n        if(error!==prevProps.error){\n            if(error.id===\"REGISTER_FAIL\"){\n                this.setState({msg:error.msg.msg});\n            }\n            else if(error.id===\"LOGIN_FAIL\"){\n                this.setState({msg:error.msg.msg});\n            }\n            else{\n                this.setState({msg:null});\n            }\n        }\n        // if authenticated close Modal\n        if(this.state.modal){\n            \n            if(isAuthenticated){\n                this.toggle();\n            }\n        }\n    }\n    static propTypes={\n        isAuthenticated:PropTypes.bool,\n        error:PropTypes.object.isRequired,\n        register:PropTypes.func.isRequired,\n        clearErrors:PropTypes.func.isRequired\n    }\n\n    toggle=()=>{  \n        // clear the error\n        this.props.clearErrors();\n        // to toggle the modal \n\n        this.setState({\n            modal:!this.state.modal\n        })\n        // this.props.loginModalOpen(this.state.modal)\n    }\n\n    handleCheckboxChange=(e)=>{\n        e.preventDefault();\n        this.setState((prevState)=>{\n            return {remember:!prevState.remember}\n        })\n        \n    }\n\n    handleSignIn=()=>{\n        console.log(\"Sign in  Toggle Called\",this.state.signIn);\n        this.props.clearErrors();\n        this.setState((prevState)=>{\n            return {signIn:!prevState.signIn}\n        })\n    }\n     encodeImageFileAsURL=()=> {\n        console.log(\"image uploading func. called\");\n        var filesSelected = document.getElementById(\"inputFileToLoad\").files;\n        if (filesSelected.length > 0) {\n          var fileToLoad = filesSelected[0];\n    \n          var fileReader = new FileReader();\n    \n          fileReader.onload = (fileLoadedEvent)=> {\n            var srcData = fileLoadedEvent.target.result; // <--- data: base64\n    \n            var newImage = document.createElement('img');\n            newImage.src = srcData;\n            this.setState({imageURL:newImage.src});\n            // document.getElementById(\"imgTest\").innerHTML = newImage.outerHTML;\n            // alert(\"Converted Base64 version is \" + document.getElementById(\"imgTest\").innerHTML);\n            // console.log(\"Converted Base64 version is \" + this.state.imageURL);\n           \n          }\n          fileReader.readAsDataURL(fileToLoad);\n        }\n        // return newImage.src;\n      }\n\n\nrender(){\n    return(\n        <div>\n            <NavLink onClick={this.toggle} href=\"#\">\n               <Button style={{paddingLeft:' 1.5rem',paddingRight:'1.5rem'}}><b> Register</b></Button>\n            </NavLink>\n\n            <Modal show={this.state.modal} onHide={this.toggle} >\n            {this.state.signIn?           <>\n            {/* <Modal.Header toggle={this.toggle}>Register</Modal.Header> */}\n                <Modal.Header  style={{color:'white', backgroundImage: `url(\"${back}\")`,backgroundSize:'32rem',backgroundRepeat:'no-repeat'}} closeButton ><b>Register</b></Modal.Header>\n                <Modal.Body>\n    {this.state.msg?<Alert color=\"danger\">{this.state.msg}</Alert>:null}\n\n    <Formik\n    // validator={() => ({})}\n      validationSchema={schemaRegister}\n      initialValues={{\n        name:'',\n        email:'',\n        password:'',\n\n      }}\n      onSubmit={(values)=>{ \n        this.encodeImageFileAsURL();\n        const imageURL=this.state.imageURL;\n        console.log(\"Image URL\",imageURL);\n        const {name,email,password}=values;\n        let img=this.state.imageURL;\n        const newUser={\n            name,email,password,img\n        }\n        this.props.register(newUser);\n    }\n    }\n    >\n      {({\n        handleSubmit,\n        handleChange,\n        values,\n        errors,\n         }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          \n          <Form.Row>\n            <Form.Group as={Col} md=\"12\" controlId=\"validationFormik01\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Name\"\n                name=\"name\"\n                value={values.name}\n                onChange={handleChange}\n                isInvalid={!!errors.name}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.name}\n              </Form.Control.Feedback>\n            </Form.Group>\n\n          </Form.Row>\n          <Form.Row>\n          <Form.Group as={Col} md=\"12\" controlId=\"validationFormik02\">\n              <Form.Label>Email ID</Form.Label>\n              <InputGroup>\n                <InputGroup.Prepend>\n                  <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n                </InputGroup.Prepend>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Email ID\"\n                  aria-describedby=\"inputGroupPrepend\"\n                  name=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  isInvalid={!!errors.email}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.email}\n                </Form.Control.Feedback>\n              </InputGroup>\n            </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n            <Form.Group as={Col} md=\"12\" controlId=\"validationFormik03\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"password\"\n                value={values.password}\n                onChange={handleChange}\n                isInvalid={!!errors.password}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.password}\n              </Form.Control.Feedback>\n            </Form.Group>\n\n          </Form.Row>\n            <Form.Row>\n            <Form.Group as={Col} md=\"12\">\n                <div className=\"mb-3\">\n                    <Form.File id=\"formcheck-api-regular\">\n                    <Form.File.Label>Profile Image</Form.File.Label>\n                    <input id=\"inputFileToLoad\"  type=\"file\" onChange={this.encodeImageFileAsURL} />\n                    </Form.File>\n                </div>\n            </Form.Group>\n\n          </Form.Row>\n          <Button type=\"submit\">Register</Button>\n          <input defaultChecked={this.state.remember} style={{marginLeft:'1rem',marginTop:'.5rem'}} type=\"checkbox\" onChange={this.handleCheckboxChange}/><span>  Remember me!</span>\n                            <div style={{}} className=\"forgot-password text-right\">\n                                Already registered <span onClick={this.handleSignIn} ><a href=\"#\"><b>Sign in?</b></a></span>\n                            </div>\n                            <div id=\"imgTest\"></div>\n                        </Form>\n                        \n                    )}\n                    </Formik>\n                </Modal.Body>            </>:\n                <>\n                <Modal.Header  style={{color:'white', backgroundImage: `url(\"${back}\")`,backgroundSize:'32rem',backgroundRepeat:'no-repeat'}} closeButton ><b>Login</b></Modal.Header>\n                    <Modal.Body>\n                      {this.state.msg?<Alert color=\"danger\">{this.state.msg}</Alert>:null}\n                       \n                       \n                 <Formik\n                        validationSchema={schemaLogin}\n                        initialValues={{\n                            email:'',\n                            password:'',\n\n                        }}\n                        onSubmit={(values)=>{ \n                            console.log(\"onSUbmit\");\n                        const {email,password}=values;\n                        console.log(\"On Submit Called\",email);\n                        const user={\n                            email,password\n                        }\n                        this.props.login(user);\n                        }\n                        }\n                        >\n                        {({\n                            handleSubmit,\n                            handleChange,\n                            values,\n                            errors,\n                            touched\n                            }) => (\n                            <Form noValidate onSubmit={handleSubmit}>\n                            \n                            \n                            <Form.Row>\n                            <Form.Group as={Col} md=\"12\" controlId=\"validationFormik02\">\n                                <Form.Label>Email ID</Form.Label>\n                                <InputGroup>\n                                    <InputGroup.Prepend>\n                                    <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n                                    </InputGroup.Prepend>\n                                    <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Email ID\"\n                                    aria-describedby=\"inputGroupPrepend\"\n                                    name=\"email\"\n                                    value={values.email}\n                                    onChange={handleChange}\n                                    isInvalid={!!errors.email}\n                                    />\n                                     <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                    <Form.Control.Feedback type=\"invalid\">\n                                    {touched.email && errors.email}\n                                    </Form.Control.Feedback>\n                                   \n                                </InputGroup>\n                                </Form.Group>\n                                </Form.Row>\n                                <Form.Row>\n                                \n                                <Form.Group as={Col} md=\"12\" controlId=\"validationFormik03\">\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control\n                                    type=\"password\"\n                                    placeholder=\"Password\"\n                                    name=\"password\"\n                                    value={values.password}\n                                    onChange={handleChange}\n                                    isInvalid={!!errors.password}\n                                />\n                                 <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                <Form.Control.Feedback type=\"invalid\">\n                                    {touched.password && errors.password}\n                                </Form.Control.Feedback>\n                                </Form.Group>\n\n                            </Form.Row>\n                            {/* <Form.Group>\n                                <Form.Check\n                                required\n                                name=\"terms\"\n                                label=\"Agree to terms and conditions\"\n                                onChange={handleChange}\n                                isInvalid={!!errors.terms}\n                                feedback={errors.terms}\n                                id=\"validationFormik0\"\n                                />\n                            </Form.Group> */}\n                            <Button type=\"submit\">Login</Button>\n                            <input defaultChecked={this.state.remember} style={{marginLeft:'1rem',marginTop:'.5rem'}} type=\"checkbox\" onChange={this.handleCheckboxChange}/><span>  Remember me!</span>\n                                                    <div style={{marginTop:'1rem',}} className=\"forgot-password text-right\">\n                                                    Don't have an account?  <span onClick={this.handleSignIn} ><a href=\"#\"><b>Create an Account</b></a></span>\n                                    </div> \n                            </Form>\n                        )}\n                        </Formik>\n                </Modal.Body>\n            </>\n            \n }\n            \n            </Modal>\n        </div>\n    );\n}\n}\nconst mapStateToProps= state=>{\n    return({\n        isModalOpen:state.auth.isModalOpen,\n        isAuthenticated:state.auth.isAuthenticated,\n        rememberMe:state.auth.rememberMe,\n        error:state.error\n    })\n}\n\n\nexport default connect(mapStateToProps,{loginModalOpen,login,register,clearErrors,TokenExpireExtend})(RegisterModal);"]},"metadata":{},"sourceType":"module"}