{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\spicy\\\\Downloads\\\\Inventory-management-17\\\\client\\\\src\\\\components\\\\Customers\\\\AddCustomerModal.js\";\nimport React, { Component } from 'react';\nimport { Col, Alert, NavLink, Button, Modal, Form, InputGroup } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addItem } from '../../action/itemAction';\nimport { getCategories } from '../../action/categoryAction';\nimport { clearErrors } from '../../action/errorActions';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport back from '../../assets/images/back.jpg';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { addCustomer, getCustomers } from '../../action/customerAction'; // import e from 'express';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schemaCustomer = yup.object({\n  fname: yup.string().min(3, 'First Name must be at least 3 characters').max(24, 'Last Name can be maximum 20 characters').required(),\n  lname: yup.string().min(3, 'Last Name must be at least 3 characters').max(24, 'Last Name can be maximum 20 characters').required(),\n  address: yup.string().max(100, \"Address length must be less than 100 Chars\").required(),\n  email: yup.string().email('Invalid email').required()\n});\n\nclass AddCustomerModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      // modal for adding item is false initially\n      msg: null,\n      imageURL: '',\n      categories: this.props.categories\n    };\n\n    this.toggle = () => {\n      // clear the error\n      this.props.clearErrors(); // to toggle the modal \n\n      console.log(this.state.modal);\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.encodeImageFileAsURL = () => {\n      console.log(\"image uploading func. called\");\n      var filesSelected = document.getElementById(\"inputFileToLoad\").files;\n\n      if (filesSelected.length > 0) {\n        var fileToLoad = filesSelected[0];\n        var fileReader = new FileReader();\n\n        fileReader.onload = fileLoadedEvent => {\n          var srcData = fileLoadedEvent.target.result; // <--- data: base64\n\n          var newImage = document.createElement('img');\n          newImage.src = srcData;\n          this.setState({\n            imageURL: newImage.src\n          }); // console.log(\"ImageURL:\",this.state.imageURL);\n        };\n\n        fileReader.readAsDataURL(fileToLoad);\n      }\n    };\n  }\n\n  componentDidMount() {\n    // this.props.getCategories();\n    this.setState({\n      categories: this.props.categories\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      error,\n      isAuthenticated\n    } = this.props;\n\n    if (error !== prevProps.error) {\n      if (error.id === \"LOGIN_FAIL\") {\n        this.setState({\n          msg: error.msg.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    }\n  }\n\n  render() {\n    console.log(\"Categories:\", this.state.categories);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavLink, {\n        onClick: this.toggle,\n        href: \"#\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h7\", {\n            style: {\n              marginLeft: '.3rem'\n            },\n            className: \"newproductbuttontext\",\n            children: \"Add New\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 54\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.modal,\n        onHide: this.toggle,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          style: {\n            color: 'white',\n            backgroundImage: `url(\"${back}\")`,\n            backgroundSize: '32rem',\n            backgroundRepeat: 'no-repeat'\n          },\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Add Customer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 156\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [this.state.msg ? /*#__PURE__*/_jsxDEV(Alert, {\n            color: \"danger\",\n            children: this.state.msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this) : null, /*#__PURE__*/_jsxDEV(Formik, {\n            validationSchema: schemaCustomer,\n            initialValues: {\n              fname: \"\",\n              lname: \"\",\n              email: \"\",\n              address: \"\",\n              img: \"\"\n            },\n            onSubmit: values => {\n              const {\n                fname,\n                lname,\n                address,\n                email\n              } = values; // this.encodeImageFileAsURL();   \n\n              let img = this.state.imageURL;\n              console.log(\"Image:\", img);\n              const by_user_id = this.props.user ? this.props.user._id : '';\n              const customer = {\n                fname,\n                lname,\n                email,\n                address,\n                img,\n                by_user_id\n              };\n              console.log(\"New Customer:\", customer); //  console.log(\"Name:\",name,\" Des:\",description,\" Manu:\",manufacturer,\" price:\",price,\" Stock:\",stock,\" Img:\",img,\"  Cat\",CategoryName,\" User:\",user);\n\n              this.props.addCustomer(customer);\n              this.toggle();\n              setTimeout(() => {\n                this.props.getCustomers();\n              }, 1000);\n            },\n            children: ({\n              handleSubmit,\n              handleChange,\n              values,\n              errors\n            }) => /*#__PURE__*/_jsxDEV(Form, {\n              noValidate: true,\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  md: \"6\",\n                  controlId: \"validationFormik01\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"First Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: \"First Name\",\n                    \"aria-describedby\": \"inputGroupPrepend\",\n                    name: \"fname\",\n                    value: values.fname,\n                    onChange: handleChange,\n                    isInvalid: !!errors.fname\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.fname\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  md: \"6\",\n                  controlId: \"validationFormik01\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Last Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: \"Last  Name\",\n                    \"aria-describedby\": \"inputGroupPrepend\",\n                    name: \"lname\",\n                    value: values.lname,\n                    onChange: handleChange,\n                    isInvalid: !!errors.lname\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.lname\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  md: \"12\",\n                  controlId: \"validationFormik02\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                    children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                      children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                        id: \"inputGroupPrepend\",\n                        children: \"@\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 187,\n                        columnNumber: 19\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 186,\n                      columnNumber: 17\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      placeholder: \"Email\",\n                      name: \"email\",\n                      value: values.email,\n                      onChange: handleChange,\n                      isInvalid: !!errors.email\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 189,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                      type: \"invalid\",\n                      children: errors.email\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 198,\n                      columnNumber: 15\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 15\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  md: \"12\",\n                  controlId: \"validationFormik03\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Address\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: \"Address\",\n                    name: \"address\",\n                    value: values.address,\n                    onChange: handleChange,\n                    isInvalid: !!errors.address\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.address\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 15\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  md: \"7\",\n                  controlId: \"validationFormik07\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: /*#__PURE__*/_jsxDEV(Form.File, {\n                      id: \"formcheck-api-regular\",\n                      children: [/*#__PURE__*/_jsxDEV(Form.File.Label, {\n                        children: \"Customer Image\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 228,\n                        columnNumber: 21\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        id: \"inputFileToLoad\",\n                        type: \"file\",\n                        onChange: this.encodeImageFileAsURL\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 229,\n                        columnNumber: 21\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 227,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nAddCustomerModal.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    categories: state.category.categories,\n    user: state.auth.user,\n    error: state.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getCustomers,\n  clearErrors,\n  addItem,\n  getCategories,\n  addCustomer\n})(AddCustomerModal);","map":{"version":3,"sources":["C:/Users/spicy/Downloads/Inventory-management-17/client/src/components/Customers/AddCustomerModal.js"],"names":["React","Component","Col","Alert","NavLink","Button","Modal","Form","InputGroup","connect","PropTypes","addItem","getCategories","clearErrors","Formik","yup","back","FontAwesomeIcon","faPlus","addCustomer","getCustomers","schemaCustomer","object","fname","string","min","max","required","lname","address","email","AddCustomerModal","state","modal","msg","imageURL","categories","props","toggle","console","log","setState","encodeImageFileAsURL","filesSelected","document","getElementById","files","length","fileToLoad","fileReader","FileReader","onload","fileLoadedEvent","srcData","target","result","newImage","createElement","src","readAsDataURL","componentDidMount","componentDidUpdate","prevProps","error","isAuthenticated","id","render","marginLeft","color","backgroundImage","backgroundSize","backgroundRepeat","img","values","by_user_id","user","_id","customer","setTimeout","handleSubmit","handleChange","errors","propTypes","bool","isRequired","login","func","mapStateToProps","category","auth"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,GAAR,EAAaC,KAAb,EAAmBC,OAAnB,EAA4BC,MAA5B,EAAoCC,KAApC,EAA0CC,IAA1C,EAAgDC,UAAhD,QAAiE,iBAAjE;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,yBAAtB;AACA,SAAQC,aAAR,QAA4B,6BAA5B;AAEA,SAAQC,WAAR,QAA2B,2BAA3B;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,QAAuB,mCAAvB;AACA,SAAQC,WAAR,EAAoBC,YAApB,QAAuC,6BAAvC,C,CAGA;;;AACA,MAAMC,cAAc,GAAGN,GAAG,CAACO,MAAJ,CAAW;AAC9BC,EAAAA,KAAK,EAAER,GAAG,CAACS,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoB,0CAApB,EAAgEC,GAAhE,CAAoE,EAApE,EAAwE,wCAAxE,EAAkHC,QAAlH,EADuB;AAE9BC,EAAAA,KAAK,EAAEb,GAAG,CAACS,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoB,yCAApB,EAA+DC,GAA/D,CAAmE,EAAnE,EAAuE,wCAAvE,EAAiHC,QAAjH,EAFuB;AAG9BE,EAAAA,OAAO,EAAEd,GAAG,CAACS,MAAJ,GAAaE,GAAb,CAAiB,GAAjB,EAAqB,4CAArB,EAAmEC,QAAnE,EAHqB;AAI9BG,EAAAA,KAAK,EAAEf,GAAG,CAACS,MAAJ,GAAaM,KAAb,CAAmB,eAAnB,EAAoCH,QAApC;AAJuB,CAAX,CAAvB;;AAOA,MAAMI,gBAAN,SAA+B9B,SAA/B,CAAwC;AAAA;AAAA;AAAA,SACpC+B,KADoC,GAC9B;AACFC,MAAAA,KAAK,EAAC,KADJ;AACa;AACfC,MAAAA,GAAG,EAAC,IAFF;AAGFC,MAAAA,QAAQ,EAAC,EAHP;AAIFC,MAAAA,UAAU,EAAC,KAAKC,KAAL,CAAWD;AAJpB,KAD8B;;AAAA,SA8BpCE,MA9BoC,GA8B7B,MAAI;AACP;AACA,WAAKD,KAAL,CAAWxB,WAAX,GAFO,CAGP;;AACA0B,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWC,KAAvB;AACA,WAAKQ,QAAL,CAAc;AACVR,QAAAA,KAAK,EAAC,CAAC,KAAKD,KAAL,CAAWC;AADR,OAAd;AAGH,KAtCmC;;AAAA,SAyCpCS,oBAzCoC,GAyCf,MAAK;AACxBH,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,UAAIG,aAAa,GAAGC,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,EAA2CC,KAA/D;;AACA,UAAIH,aAAa,CAACI,MAAd,GAAuB,CAA3B,EAA8B;AAC5B,YAAIC,UAAU,GAAGL,aAAa,CAAC,CAAD,CAA9B;AAEA,YAAIM,UAAU,GAAG,IAAIC,UAAJ,EAAjB;;AAEAD,QAAAA,UAAU,CAACE,MAAX,GAAqBC,eAAD,IAAoB;AACtC,cAAIC,OAAO,GAAGD,eAAe,CAACE,MAAhB,CAAuBC,MAArC,CADsC,CACO;;AAE7C,cAAIC,QAAQ,GAAGZ,QAAQ,CAACa,aAAT,CAAuB,KAAvB,CAAf;AACAD,UAAAA,QAAQ,CAACE,GAAT,GAAeL,OAAf;AACA,eAAKZ,QAAL,CAAc;AAACN,YAAAA,QAAQ,EAACqB,QAAQ,CAACE;AAAnB,WAAd,EALsC,CAMtC;AAED,SARD;;AASAT,QAAAA,UAAU,CAACU,aAAX,CAAyBX,UAAzB;AACD;AAEF,KA7DmC;AAAA;;AAOpCY,EAAAA,iBAAiB,GAAE;AACjB;AACA,SAAKnB,QAAL,CAAc;AAACL,MAAAA,UAAU,EAAC,KAAKC,KAAL,CAAWD;AAAvB,KAAd;AACD;;AACDyB,EAAAA,kBAAkB,CAACC,SAAD,EAAW;AACzB,UAAM;AAACC,MAAAA,KAAD;AAAOC,MAAAA;AAAP,QAAwB,KAAK3B,KAAnC;;AACA,QAAG0B,KAAK,KAAGD,SAAS,CAACC,KAArB,EAA2B;AACvB,UAAGA,KAAK,CAACE,EAAN,KAAW,YAAd,EAA2B;AACvB,aAAKxB,QAAL,CAAc;AAACP,UAAAA,GAAG,EAAC6B,KAAK,CAAC7B,GAAN,CAAUA;AAAf,SAAd;AACH,OAFD,MAGI;AACA,aAAKO,QAAL,CAAc;AAACP,UAAAA,GAAG,EAAC;AAAL,SAAd;AACH;AACJ;AAEJ;;AAwCLgC,EAAAA,MAAM,GAAE;AACN3B,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0B,KAAKR,KAAL,CAAWI,UAArC;AACE,wBACI;AAAA,8BACK,QAAC,OAAD;AAAS,QAAA,OAAO,EAAE,KAAKE,MAAvB;AAA+B,QAAA,IAAI,EAAC,GAApC;AAAA,+BACD,QAAC,MAAD;AAAA,kCAAQ,QAAC,eAAD;AAAkB,YAAA,IAAI,EAAEpB;AAAxB;AAAA;AAAA;AAAA;AAAA,kBAAR,eAAyC;AAAI,YAAA,KAAK,EAAE;AAACiD,cAAAA,UAAU,EAAC;AAAZ,aAAX;AAAiC,YAAA,SAAS,EAAC,sBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AADC;AAAA;AAAA;AAAA;AAAA,cADL,eAKI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAE,KAAKnC,KAAL,CAAWC,KAAxB;AAA+B,QAAA,MAAM,EAAE,KAAKK,MAA5C;AAAA,gCACI,QAAC,KAAD,CAAO,MAAP;AAAe,UAAA,KAAK,EAAE;AAAC8B,YAAAA,KAAK,EAAC,OAAP;AAAgBC,YAAAA,eAAe,EAAG,QAAOrD,IAAK,IAA9C;AAAkDsD,YAAAA,cAAc,EAAC,OAAjE;AAAyEC,YAAAA,gBAAgB,EAAC;AAA1F,WAAtB;AAA8H,UAAA,WAAW,MAAzI;AAAA,iCAA2I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA3I;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,KAAD,CAAO,IAAP;AAAA,qBACX,KAAKvC,KAAL,CAAWE,GAAX,gBAAe,QAAC,KAAD;AAAO,YAAA,KAAK,EAAC,QAAb;AAAA,sBAAuB,KAAKF,KAAL,CAAWE;AAAlC;AAAA;AAAA;AAAA;AAAA,kBAAf,GAA8D,IADnD,eAOZ,QAAC,MAAD;AACE,YAAA,gBAAgB,EAAEb,cADpB;AAIE,YAAA,aAAa,EAAE;AACbE,cAAAA,KAAK,EAAC,EADO;AAEbK,cAAAA,KAAK,EAAC,EAFO;AAGbE,cAAAA,KAAK,EAAC,EAHO;AAIbD,cAAAA,OAAO,EAAC,EAJK;AAKb2C,cAAAA,GAAG,EAAC;AALS,aAJjB;AAWE,YAAA,QAAQ,EAAGC,MAAD,IAAU;AAElB,oBAAM;AAAClD,gBAAAA,KAAD;AAAOK,gBAAAA,KAAP;AAAaC,gBAAAA,OAAb;AAAqBC,gBAAAA;AAArB,kBAA4B2C,MAAlC,CAFkB,CAGlB;;AACA,kBAAID,GAAG,GAAC,KAAKxC,KAAL,CAAWG,QAAnB;AACAI,cAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBgC,GAArB;AACA,oBAAME,UAAU,GAAC,KAAKrC,KAAL,CAAWsC,IAAX,GAAgB,KAAKtC,KAAL,CAAWsC,IAAX,CAAgBC,GAAhC,GAAoC,EAArD;AACA,oBAAMC,QAAQ,GAAC;AACbtD,gBAAAA,KADa;AACPK,gBAAAA,KADO;AACDE,gBAAAA,KADC;AACKD,gBAAAA,OADL;AACa2C,gBAAAA,GADb;AACiBE,gBAAAA;AADjB,eAAf;AAGAnC,cAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BqC,QAA5B,EAVkB,CAWpB;;AACE,mBAAKxC,KAAL,CAAWlB,WAAX,CAAuB0D,QAAvB;AAEA,mBAAKvC,MAAL;AACAwC,cAAAA,UAAU,CAAC,MAAI;AACX,qBAAKzC,KAAL,CAAWjB,YAAX;AACH,eAFS,EAER,IAFQ,CAAV;AAGA,aA7BJ;AAAA,sBAgCG,CAAC;AACA2D,cAAAA,YADA;AAEAC,cAAAA,YAFA;AAGAP,cAAAA,MAHA;AAIAQ,cAAAA;AAJA,aAAD,kBAMC,QAAC,IAAD;AAAM,cAAA,UAAU,MAAhB;AAAiB,cAAA,QAAQ,EAAEF,YAA3B;AAAA,sCAGE,QAAC,IAAD,CAAM,GAAN;AAAA,wCACA,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,EAAE,EAAE7E,GAAhB;AAAqB,kBAAA,EAAE,EAAC,GAAxB;AAA4B,kBAAA,SAAS,EAAC,oBAAtC;AAAA,0CACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAGM,QAAC,IAAD,CAAM,OAAN;AACE,oBAAA,IAAI,EAAC,MADP;AAEE,oBAAA,WAAW,EAAC,YAFd;AAGE,wCAAiB,mBAHnB;AAIE,oBAAA,IAAI,EAAC,OAJP;AAKE,oBAAA,KAAK,EAAEuE,MAAM,CAAClD,KALhB;AAME,oBAAA,QAAQ,EAAEyD,YANZ;AAOE,oBAAA,SAAS,EAAE,CAAC,CAACC,MAAM,CAAC1D;AAPtB;AAAA;AAAA;AAAA;AAAA,0BAHN,eAYM,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,oBAAA,IAAI,EAAC,SAA5B;AAAA,8BACG0D,MAAM,CAAC1D;AADV;AAAA;AAAA;AAAA;AAAA,0BAZN;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,eAkBA,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,EAAE,EAAErB,GAAhB;AAAqB,kBAAA,EAAE,EAAC,GAAxB;AAA4B,kBAAA,SAAS,EAAC,oBAAtC;AAAA,0CACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAGM,QAAC,IAAD,CAAM,OAAN;AACE,oBAAA,IAAI,EAAC,MADP;AAEE,oBAAA,WAAW,EAAC,YAFd;AAGE,wCAAiB,mBAHnB;AAIE,oBAAA,IAAI,EAAC,OAJP;AAKE,oBAAA,KAAK,EAAEuE,MAAM,CAAC7C,KALhB;AAME,oBAAA,QAAQ,EAAEoD,YANZ;AAOE,oBAAA,SAAS,EAAE,CAAC,CAACC,MAAM,CAACrD;AAPtB;AAAA;AAAA;AAAA;AAAA,0BAHN,eAYM,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,oBAAA,IAAI,EAAC,SAA5B;AAAA,8BACGqD,MAAM,CAACrD;AADV;AAAA;AAAA;AAAA;AAAA,0BAZN;AAAA;AAAA;AAAA;AAAA;AAAA,wBAlBA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,eAuCI,QAAC,IAAD,CAAM,GAAN;AAAA,uCACA,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,EAAE,EAAE1B,GAAhB;AAAqB,kBAAA,EAAE,EAAC,IAAxB;AAA6B,kBAAA,SAAS,EAAC,oBAAvC;AAAA,0CACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,QAAC,UAAD;AAAA,4CACE,QAAC,UAAD,CAAY,OAAZ;AAAA,6CACE,QAAC,UAAD,CAAY,IAAZ;AAAiB,wBAAA,EAAE,EAAC,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,4BADF,eAIA,QAAC,IAAD,CAAM,OAAN;AACE,sBAAA,IAAI,EAAC,MADP;AAEE,sBAAA,WAAW,EAAC,OAFd;AAGE,sBAAA,IAAI,EAAC,OAHP;AAIE,sBAAA,KAAK,EAAEuE,MAAM,CAAC3C,KAJhB;AAKE,sBAAA,QAAQ,EAAEkD,YALZ;AAME,sBAAA,SAAS,EAAE,CAAC,CAACC,MAAM,CAACnD;AANtB;AAAA;AAAA;AAAA;AAAA,4BAJA,eAaA,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,sBAAA,IAAI,EAAC,SAA5B;AAAA,gCACGmD,MAAM,CAACnD;AADV;AAAA;AAAA;AAAA;AAAA,4BAbA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,sBAvCJ,eA8DI,QAAC,IAAD,CAAM,GAAN;AAAA,uCACA,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,EAAE,EAAE5B,GAAhB;AAAqB,kBAAA,EAAE,EAAC,IAAxB;AAA6B,kBAAA,SAAS,EAAC,oBAAvC;AAAA,0CACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,oBAAA,IAAI,EAAC,MADP;AAEE,oBAAA,WAAW,EAAC,SAFd;AAGE,oBAAA,IAAI,EAAC,SAHP;AAIE,oBAAA,KAAK,EAAEuE,MAAM,CAAC5C,OAJhB;AAKE,oBAAA,QAAQ,EAAEmD,YALZ;AAME,oBAAA,SAAS,EAAE,CAAC,CAACC,MAAM,CAACpD;AANtB;AAAA;AAAA;AAAA;AAAA,0BAFF,eAUE,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,oBAAA,IAAI,EAAC,SAA5B;AAAA,8BACGoD,MAAM,CAACpD;AADV;AAAA;AAAA;AAAA;AAAA,0BAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,sBA9DJ,eAgFI,QAAC,IAAD,CAAM,GAAN;AAAA,uCAEA,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,EAAE,EAAE3B,GAAhB;AAAqB,kBAAA,EAAE,EAAC,GAAxB;AAA4B,kBAAA,SAAS,EAAC,oBAAtC;AAAA,yCACI;AAAK,oBAAA,SAAS,EAAC,MAAf;AAAA,2CACI,QAAC,IAAD,CAAM,IAAN;AAAW,sBAAA,EAAE,EAAC,uBAAd;AAAA,8CACA,QAAC,IAAD,CAAM,IAAN,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADA,eAEA;AAAO,wBAAA,EAAE,EAAC,iBAAV;AAA6B,wBAAA,IAAI,EAAC,MAAlC;AAAyC,wBAAA,QAAQ,EAAE,KAAKwC;AAAxD;AAAA;AAAA;AAAA;AAAA,8BAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,sBAhFJ,eA6FE,QAAC,MAAD;AAAQ,gBAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA7FF;AAAA;AAAA;AAAA;AAAA;AAAA;AAtCJ;AAAA;AAAA;AAAA;AAAA,kBAPY;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA2JH;;AA3NuC;;AAAlCX,gB,CAuBKmD,S,GAAU;AACblB,EAAAA,eAAe,EAACtD,SAAS,CAACyE,IADb;AAEbpB,EAAAA,KAAK,EAACrD,SAAS,CAACY,MAAV,CAAiB8D,UAFV;AAGbC,EAAAA,KAAK,EAAC3E,SAAS,CAAC4E,IAAV,CAAeF,UAHR;AAIbvE,EAAAA,WAAW,EAACH,SAAS,CAAC4E,IAAV,CAAeF;AAJd,C;;AAsMrB,MAAMG,eAAe,GAAEvD,KAAK,IAAE;AAC1B,SAAO;AACHI,IAAAA,UAAU,EAACJ,KAAK,CAACwD,QAAN,CAAepD,UADvB;AAEHuC,IAAAA,IAAI,EAAC3C,KAAK,CAACyD,IAAN,CAAWd,IAFb;AAGHZ,IAAAA,KAAK,EAAC/B,KAAK,CAAC+B;AAHT,GAAP;AAKH,CAND;;AASA,eAAetD,OAAO,CAAC8E,eAAD,EAAiB;AAACnE,EAAAA,YAAD;AAAcP,EAAAA,WAAd;AAA0BF,EAAAA,OAA1B;AAAkCC,EAAAA,aAAlC;AAAgDO,EAAAA;AAAhD,CAAjB,CAAP,CAAsFY,gBAAtF,CAAf","sourcesContent":["import React,{Component} from 'react';\nimport {Col, Alert,NavLink, Button, Modal,Form, InputGroup} from 'react-bootstrap';\n\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {addItem} from '../../action/itemAction';\nimport {getCategories} from '../../action/categoryAction';\n\nimport {clearErrors}  from '../../action/errorActions';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\nimport back from '../../assets/images/back.jpg';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport {addCustomer,getCustomers} from '../../action/customerAction';\n\n\n// import e from 'express';\nconst schemaCustomer = yup.object({\n    fname: yup.string().min(3, 'First Name must be at least 3 characters').max(24, 'Last Name can be maximum 20 characters').required(),\n    lname: yup.string().min(3, 'Last Name must be at least 3 characters').max(24, 'Last Name can be maximum 20 characters').required(),\n    address: yup.string().max(100,\"Address length must be less than 100 Chars\").required(),\n    email: yup.string().email('Invalid email').required(),\n})\n\nclass AddCustomerModal extends Component{\n    state={\n        modal:false,   // modal for adding item is false initially\n        msg:null,\n        imageURL:'',\n        categories:this.props.categories\n    };\n    componentDidMount(){\n      // this.props.getCategories();\n      this.setState({categories:this.props.categories})\n    }\n    componentDidUpdate(prevProps){\n        const {error,isAuthenticated}=this.props;\n        if(error!==prevProps.error){\n            if(error.id===\"LOGIN_FAIL\"){\n                this.setState({msg:error.msg.msg});\n            }\n            else{\n                this.setState({msg:null});\n            }\n        }\n        \n    }\n    static propTypes={\n        isAuthenticated:PropTypes.bool,\n        error:PropTypes.object.isRequired,\n        login:PropTypes.func.isRequired,\n        clearErrors:PropTypes.func.isRequired\n    }\n\n    toggle=()=>{  \n        // clear the error\n        this.props.clearErrors();\n        // to toggle the modal \n        console.log(this.state.modal)\n        this.setState({\n            modal:!this.state.modal\n        })\n    }\n\n\n    encodeImageFileAsURL=()=> {\n      console.log(\"image uploading func. called\");\n      var filesSelected = document.getElementById(\"inputFileToLoad\").files;\n      if (filesSelected.length > 0) {\n        var fileToLoad = filesSelected[0];\n  \n        var fileReader = new FileReader();\n  \n        fileReader.onload = (fileLoadedEvent)=> {\n          var srcData = fileLoadedEvent.target.result; // <--- data: base64\n  \n          var newImage = document.createElement('img');\n          newImage.src = srcData;\n          this.setState({imageURL:newImage.src});\n          // console.log(\"ImageURL:\",this.state.imageURL);\n         \n        }\n        fileReader.readAsDataURL(fileToLoad);\n      }\n\n    }\nrender(){\n  console.log(\"Categories:\",this.state.categories);\n    return(\n        <div>\n             <NavLink onClick={this.toggle} href=\"#\">\n            <Button><FontAwesomeIcon  icon={faPlus}/><h7 style={{marginLeft:'.3rem'}} className=\"newproductbuttontext\">Add New</h7></Button>\n            </NavLink>\n\n            <Modal show={this.state.modal} onHide={this.toggle} >\n                <Modal.Header  style={{color:'white', backgroundImage: `url(\"${back}\")`,backgroundSize:'32rem',backgroundRepeat:'no-repeat'}} closeButton ><b>Add Customer</b></Modal.Header>\n                <Modal.Body>\n    {this.state.msg?<Alert color=\"danger\">{this.state.msg}</Alert>:null}\n\n\n\n\n\n    <Formik\n      validationSchema={schemaCustomer}\n     \n\n      initialValues={{\n        fname:\"\",\n        lname:\"\",\n        email:\"\",\n        address:\"\",\n        img:\"\"\n      }}\n      onSubmit={(values)=>{ \n       \n        const {fname,lname,address,email}=values;\n        // this.encodeImageFileAsURL();   \n        let img=this.state.imageURL;\n        console.log(\"Image:\",img);\n        const by_user_id=this.props.user?this.props.user._id:'';\n        const customer={\n          fname,lname,email,address,img,by_user_id\n        }\n        console.log(\"New Customer:\",customer);\n      //  console.log(\"Name:\",name,\" Des:\",description,\" Manu:\",manufacturer,\" price:\",price,\" Stock:\",stock,\" Img:\",img,\"  Cat\",CategoryName,\" User:\",user);\n        this.props.addCustomer(customer);\n        \n        this.toggle();\n        setTimeout(()=>{\n            this.props.getCustomers();\n        },1000);\n       }\n     }\n    >\n      {({\n        handleSubmit,\n        handleChange,\n        values,\n        errors,\n         }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          \n          \n          <Form.Row>\n          <Form.Group as={Col} md=\"6\" controlId=\"validationFormik01\">\n              <Form.Label>First Name</Form.Label>\n              \n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"First Name\"\n                  aria-describedby=\"inputGroupPrepend\"\n                  name=\"fname\"\n                  value={values.fname}\n                  onChange={handleChange}\n                  isInvalid={!!errors.fname}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.fname}\n                </Form.Control.Feedback>\n              \n            </Form.Group>\n          <Form.Group as={Col} md=\"6\" controlId=\"validationFormik01\">\n              <Form.Label>Last Name</Form.Label>\n              \n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Last  Name\"\n                  aria-describedby=\"inputGroupPrepend\"\n                  name=\"lname\"\n                  value={values.lname}\n                  onChange={handleChange}\n                  isInvalid={!!errors.lname}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.lname}\n                </Form.Control.Feedback>\n              \n            </Form.Group>\n            </Form.Row>\n            <Form.Row>\n            <Form.Group as={Col} md=\"12\" controlId=\"validationFormik02\">\n              <Form.Label>Email</Form.Label>\n              <InputGroup>\n                <InputGroup.Prepend>\n                  <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n                </InputGroup.Prepend>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Email\"\n                name=\"email\"\n                value={values.email}\n                onChange={handleChange}\n                isInvalid={!!errors.email}\n              />\n\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.email}\n              </Form.Control.Feedback>\n              </InputGroup>\n            </Form.Group>\n\n          </Form.Row>\n            <Form.Row>\n            <Form.Group as={Col} md=\"12\" controlId=\"validationFormik03\">\n              <Form.Label>Address</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Address\"\n                name=\"address\"\n                value={values.address}\n                onChange={handleChange}\n                isInvalid={!!errors.address}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.address}\n              </Form.Control.Feedback>\n            </Form.Group>\n\n          </Form.Row>\n\n            <Form.Row>\n\n            <Form.Group as={Col} md=\"7\" controlId=\"validationFormik07\">\n                <div className=\"mb-3\">\n                    <Form.File id=\"formcheck-api-regular\">\n                    <Form.File.Label>Customer Image</Form.File.Label>\n                    <input id=\"inputFileToLoad\"  type=\"file\" onChange={this.encodeImageFileAsURL} />\n                    </Form.File>\n                </div>\n            </Form.Group>\n\n          </Form.Row>\n          \n          <Button type=\"submit\">Submit</Button>\n        </Form>\n      )}\n    </Formik>\n                </Modal.Body>\n\n            </Modal>\n        </div>\n    );\n}\n}\nconst mapStateToProps= state=>{\n    return({\n        categories:state.category.categories,\n        user:state.auth.user,\n        error:state.error\n    })\n}\n\n\nexport default connect(mapStateToProps,{getCustomers,clearErrors,addItem,getCategories,addCustomer})(AddCustomerModal);"]},"metadata":{},"sourceType":"module"}