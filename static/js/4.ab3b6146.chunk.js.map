{"version":3,"sources":["action/orderAction.js","action/customerAction.js","components/Order/EditOrderModal.js","components/Order/AddOrderModal.js","components/Order/OrderList.js"],"names":["getOrders","dispatch","setOrderLoading","axios","get","then","res","type","GET_ORDER","payload","data","catch","err","returnErrors","response","status","addOrder","order","post","ADD_ORDER","console","log","deleteOrder","id","body","JSON","stringify","headers","DELETE_ORDER","updateOrder","product_id","customer_id","by_user_id","quantity","total","payment","UPDATE_ORDER","ORDERS_LOAD","getCustomers","setCustomerLoading","GET_CUSTOMER","addCustomer","customer","ADD_CUSTOMER","deleteCustomer","DELETE_CUSTOMER","CUSTOMERS_LOAD","schemaOrder","yup","positive","integer","min","max","payment1","EditOrderModal","state","modal","msg","isUpdate","toggle","props","clearErrors","setState","onChange","e","target","name","value","this","prevProps","error","loadUser","product","OverlayTrigger","placement","overlay","Tooltip","Button","style","height","fontSize","padding","margin","onClick","variant","size","icon","faEdit","Modal","show","onHide","Header","color","backgroundImage","back","backgroundSize","backgroundRepeat","closeButton","Body","Card","display","Row","alignItems","width","Col","marginLeft","alt","src","product_img","marginTop","flexDirection","product_name","borderRadius","border","customer_img","customer_name","Alert","validationSchema","initialValues","product_price","price","onSubmit","values","editOrder","setTimeout","handleSubmit","handleChange","errors","Form","noValidate","Group","as","md","controlId","Label","Control","placeholder","isInvalid","Feedback","fontWeight","marginBottom","Component","connect","loginModalOpen","withRouter","category_id","AddOrderModal","getCategories","getItems","products","customers","length","categories","getProducts","cat_name","filter","cat","parseInt","getCategory","p","category","getPrice","user","NavLink","href","paddingLeft","paddingRight","_id","newOrder","map","key","fname","lname","stock","disabled","item","items","auth","isAuthenticated","orders","useState","setOrders","q","setQ","isClient","setIsClient","isProduct","setIsProduct","isPayment","setIsPayment","isTotal","setIsTotal","open2","setOpen2","useEffect","getProductName","getCustomerName","getCustomerImage","img","avatar","getProductImage","getProductPrice","Search","toLowerCase","indexOf","justifyContent","sm","Container","className","faSearch","DropdownButton","title","faFilter","background","boxShadow","Accordion","defaultActiveKey","Toggle","eventKey","faChevronCircleRight","faChevronCircleDown","Collapse","paddingBottom","marginRight","checked","Spinner","animation","to","faTrashAlt","Footer","date"],"mappings":"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","file":"static/js/4.ab3b6146.chunk.js","sourcesContent":["import  {UPDATE_ORDER,GET_ORDER,ADD_ORDER,DELETE_ORDER, ORDERS_LOAD} from './types';\nimport axios from 'axios';\nimport {returnErrors} from './errorActions';\n\nexport const getOrders=()=> dispatch =>{\n    dispatch(setOrderLoading());\n\n    axios.get('/orders').then(res=>\n    dispatch({\n        type:GET_ORDER,\n        payload:res.data\n    }))\n    .catch(err=>dispatch(returnErrors(err.response.data,err.response.status)));   \n};\nexport const addOrder=order=> dispatch =>{\n    axios.post('/add_order',order)\n    .then(res=>dispatch({\n        type:ADD_ORDER,\n        payload:res.data\n    })).catch(err=>{\n        console.log(\"catch block error\")\n        dispatch(returnErrors(err.response.data, err.response.status,\"ORDER_ADD_FAIL\"));\n        // dispatch({\n        //     type:ORDER_ADD_FAIL\n        // });\n    })\n};\n\nexport const deleteOrder=id=>dispatch=>{\n    console.log(\"Id of Order\",id);\n    const config={\n        headers:{'Content-Type':'application/json'}\n    }\n    const body=JSON.stringify({id});\n    console.log(\"Action Order Id\",id);\n    axios.post('/delete_order',body,config).then(\n        res=>dispatch({\n            type:DELETE_ORDER,\n            payload:id\n        })\n    ).catch(err=>dispatch(returnErrors(err.response.data,err.response.status)));\n}\n\nexport const updateOrder=({id,product_id,customer_id,by_user_id,quantity,total,payment})=>dispatch=>{\n    console.log(\"Id of ORDER\",id);\n    const config={\n        headers:{'Content-Type':'application/json'}\n    }\n    const body=JSON.stringify({id,product_id,customer_id,by_user_id,quantity,total,payment});\n    console.log(\"Action Order Id\",id);\n    axios.post('/update_order',body,config).then(\n        res=>dispatch({\n            type:UPDATE_ORDER,\n            payload:res.data\n        })\n    ).catch(err=>dispatch(returnErrors(err.response.data,err.response.status)));\n}\n\n\nexport const setOrderLoading=()=>{\n    return{\n        type:ORDERS_LOAD\n    };\n}","import  {GET_CUSTOMER,ADD_CUSTOMER,DELETE_CUSTOMER, CUSTOMERS_LOAD} from './types';\nimport axios from 'axios';\n\nimport {returnErrors} from './errorActions';\n\nexport const getCustomers=()=> dispatch =>{\n    dispatch(setCustomerLoading());\n\n    axios.get('/customers').then(res=>\n    dispatch({\n        type:GET_CUSTOMER,\n        payload:res.data\n    }))\n    .catch(err=>dispatch(returnErrors(err.response.data,err.response.status)));   \n};\nexport const addCustomer=customer=> dispatch =>{\n    axios.post('/add_customer',customer)\n    .then(res=> dispatch({\n        type:ADD_CUSTOMER,\n        payload:res.data?res.data:{}\n    })).catch(err=>dispatch(returnErrors(err.response.data,err.response.status)));\n};\n\nexport const deleteCustomer=id=>dispatch=>{\n    console.log(\"Id of Customer\",id);\n    const config={\n        headers:{'Content-Type':'application/json'}\n    }\n    const body=JSON.stringify({id});\n    console.log(\"Action Order Id\",id);\n    axios.post('/delete_customer',body,config).then(\n        res=>dispatch({\n            type:DELETE_CUSTOMER,\n            payload:id\n        })\n    ).catch(err=>dispatch(returnErrors(err.response.data,err.response.status)));\n}\n\n\n// export const deleteSelectedORDER=ids=>dispatch=>{\n//     console.log(\"Id of ORDER\",ids);\n//     const config={\n//         headers:{'Content-Type':'application/json'}\n//     }\n//     var body=JSON.stringify({ids});\n//     var {ids}=body\n//     console.log(\"Action Product Id\",typeof ids);\n//     console.log(\"Body\",body,body[0],ids);\n//     axios.post('/delete_selected_product',body,config).then(\n//         res=>dispatch({\n//             type:DELETE_SELECTED_ORDER,\n//             payload:ids\n//         })\n//     ).catch(err=>dispatch(returnErrors(err.response.data,err.response.status)));\n// }\n\n\n\n// export const updateOrder=({id,name,manufacturer,description,stock,price,rating})=>dispatch=>{\n//     console.log(\"Id of ORDER\",id);\n//     const config={\n//         headers:{'Content-Type':'application/json'}\n//     }\n//     const body=JSON.stringify({id,name,description,manufacturer,price,stock,rating});\n//     console.log(\"Action Product Id\",id);\n//     axios.post('/update_product',body,config).then(\n//         res=>dispatch({\n//             type:UPDATE_ORDER,\n//             payload:res.data\n//         })\n//     ).catch(err=>dispatch(returnErrors(err.response.data,err.response.status)));\n// }\n\n\nexport const setCustomerLoading=()=>{\n    return{\n        type:CUSTOMERS_LOAD\n    };\n}","import React,{Component} from 'react';\nimport { Col,Alert, Button, Modal,Form, Row, Card } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit} from '@fortawesome/free-solid-svg-icons';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router-dom'\nimport PropTypes from 'prop-types';\nimport {updateOrder,getOrders} from '../../action/orderAction';\nimport back from '../../assets/images/back.jpg';\nimport {loginModalOpen} from '../../action/authActions'\nimport {clearErrors}  from '../../action/errorActions';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\n\nconst schemaOrder = yup.object({\n    quantity: yup.number().positive().integer().min(1, \"Price Should be More Than 1\").max(1000, \"Price Should be Less Than 500K\"),   \n    payment1: yup.number().positive().integer().min(1,\"Choose Any Payment Status\"),\n\n})\n\n\nclass EditOrderModal extends Component{\n    \n    state={\n        modal:false,   // modal for adding item is false initially\n        product_id:'',\n        customer_id:'',\n        by_user_id:'',\n        quantity:0,\n        total:0,\n        payment:0,\n        msg:null,\n        isUpdate:false\n    };\n    componentDidMount(){\n        // this.props.loadUser();\n        const {id,product_id,customer_id,by_user_id,quantity,total,payment}=this.props.order;\n        this.setState({product_id:product_id,customer_id:customer_id,quantity:quantity,by_user_id:by_user_id,total:total,payment:payment});\n    }\n    componentDidUpdate(prevProps){\n        const {error,isUpdate}=this.props;\n        if(error!==prevProps.error){\n            if(error.id===\"UPDATE_FAIL\"){\n                this.setState({msg:error.msg.msg});\n            }\n            else{\n                this.setState({msg:null});\n            }\n        }\n        // if Update close Modal\n        if(this.state.modal){\n            \n            if(isUpdate){\n                this.toggle();\n                this.props.loadUser();\n            }\n        }\n        \n    }\n    static propTypes={\n        isUpdate:PropTypes.bool,\n        isAuthenticated:PropTypes.bool,\n        error:PropTypes.object.isRequired,\n        register:PropTypes.func.isRequired,\n        clearErrors:PropTypes.func.isRequired\n    }\n\n    toggle=()=>{  \n        // clear the error\n        this.props.clearErrors();\n        // to toggle the modal \n        console.log(\"Props\",this.props);\n        // if(!this.props.isAuthenticated){\n        //     console.log(\"Authen\");\n        //     this.props.history.push('/')\n        //     this.props.loginModalOpen(true);\n           \n        // }\n        // console.log(\"from Toggle-> Modal Open:: \"+this.state.modal)\n        // else\n            this.setState({\n                modal:!this.state.modal\n            })\n    }\n\n\n    onChange=(e)=>{\n        this.setState({[e.target.name]:e.target.value});\n    }\n\nrender(){\n    console.log(\"product Edit Modal:\",this.props.product);\n    return(\n        <>\n            <OverlayTrigger        \n                        placement=\"bottom\"\n                    overlay={<Tooltip id=\"button-tooltip-2\">Edit Order</Tooltip>}>\n           \n            <Button style={{height:'31px',fontSize:'10px',padding:'.5rem .5rem',margin:'0rem'}} onClick={this.toggle} variant=\"primary\" size=\"sm\">\n                    <FontAwesomeIcon icon={faEdit}/>\n            </Button>\n\n            </OverlayTrigger>\n\n\n            <Modal show={this.state.modal} onHide={this.toggle}   >\n                <Modal.Header toggle={this.toggle} style={{color:'white', backgroundImage: `url(\"${back}\")`,backgroundSize:'32rem',backgroundRepeat:'no-repeat'}} closeButton>Update</Modal.Header>\n                <Modal.Body>\n                    <Card style={{display:'flex'}}>\n                        <Row style={{display:'flex',alignItems:'center'}}>\n                               <div style={{display:'flex',width:'15rem'}}> \n                                <Col style={{marginLeft:'.5 rem'}} ><img alt=\"alt\" style={{height:'80px',width:'80px'}} src={this.props.product_img}/></Col>\n                                <Col  style={{marginTop:'1rem',display:'flex',flexDirection:'column',alignItems:'center'}}><h7><b>{this.props.product_name}</b></h7><span style={{fontSize:'12px',color:'gray'}}>Qnty:{this.props.order.quantity}</span></Col>\n                                </div>\n                                <div style={{display:'flex',width:'15rem'}}>\n                                {/* <Col sm={2}></Col> */}\n                                <Col style={{marginLeft:'1rem'}}><img  alt=\"alt\" style={{borderRadius:'50%',border:'2px solid #3b44c1',height:'50px',width:'50px'}} src={this.props.customer_img}/></Col>\n                                <Col style={{marginTop:'.8rem',display:'flex',flexDirection:'column',alignItems:'center'}} ><h7><b>{this.props.customer_name}</b></h7></Col>\n                            </div>\n                        </Row>\n                    </Card>\n    {this.state.msg?<Alert color=\"danger\">{this.state.msg}</Alert>:null}\n    <Formik\n    // validator={() => ({})}\n      validationSchema={schemaOrder}\n      initialValues={{\n        quantity:this.state.quantity,\n        total:this.state.quantity*this.props.product_price,\n        payment1:this.state.payment===\"Completed\"?\"1\":\"2\",\n        price:this.props.product_price\n        // mobile_number:''\n\n      }}\n        onSubmit={(values)=>{ \n        \n            const {quantity,payment1}=values;\n            const payment=payment1===\"1\"?\"Completed\":\"Pending\"\n            const id=this.props.order.id;\n            const product_id=this.state.product_id;\n            const customer_id=this.state.customer_id;\n            const by_user_id=this.state.by_user_id;\n            const total=quantity*this.props.product_price;\n\n                const editOrder={\n                    id,product_id,customer_id,by_user_id,quantity,total,payment\n                }\n                console.log(\"Submit:\",editOrder);\n                this.props.updateOrder(editOrder);\n                this.toggle();\n                setTimeout(()=>{\n                    this.props.getOrders();\n                },1500);\n            \n            }\n        }\n    >\n       \n      {({\n        handleSubmit,\n        handleChange,\n        values,\n        errors,\n         }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          \n          <Form.Row>\n            <Form.Group as={Col} md=\"6\" controlId=\"validationFormik01\">\n           \n              <Form.Label>Quantity</Form.Label>\n              \n              <Form.Control\n                type=\"text\"\n                placeholder=\"\"\n                name=\"quantity\"\n                value={values.quantity}\n                // onChangeCapture={(e)=>this.setState({isBlocking:e.target.value>0})}\n                onChange={handleChange}//this.setState({isBlocking:e.target.value.length>0}); handleChange(e)}}\n                isInvalid={!!errors.quantity}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.quantity}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md=\"6\" controlId=\"validationFormik01\">\n              <Form.Label>Payment</Form.Label>\n              <Form.Control\n                as=\"select\"\n                // type=\"password\"\n                placeholder=\"\"\n                name=\"payment1\"\n                value={values.payment1}\n                onChange={handleChange}\n                isInvalid={!!errors.payment1}\n                \n              >\n                  <option value=\"0\">Choose Payment</option>\n                  \n                <option value=\"1\">Completed</option>\n                <option value=\"2\">Pending</option>\n\n                  \n                 \n              </Form.Control>\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.payment1}\n              </Form.Control.Feedback>\n            </Form.Group>\n           \n\n          </Form.Row>\n         \n         <Form.Row style={{fontWeight:'bold',color:'gray',border:'1px solid rgba(0,0,0,.125)',padding:'.5rem',borderRadius:'5px',marginBottom:'.5rem'}}><h7>Total:</h7><span><b>{this.props.product_price}</b></span>X<span><b>{values.quantity}</b>=<b>{values.quantity*values.price}</b></span></Form.Row>\n          <Button type=\"submit\">Update</Button>\n          \n         \n                        </Form>\n                        \n                    )}\n                    </Formik>\n                </Modal.Body>\n\n            </Modal>\n        </>\n    );\n}\n}\nconst mapStateToProps= state=>{\n    return({\n        error:state.error\n    })\n}\n\n\nexport default connect(mapStateToProps,{updateOrder,clearErrors,loginModalOpen,getOrders})(withRouter(EditOrderModal));","import React,{Component} from 'react';\nimport { Button,Col,Alert,NavLink, Modal,Form } from 'react-bootstrap';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {clearErrors}  from '../../action/errorActions';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nimport back from '../../assets/images/back.jpg';\nimport {loadUser} from '../../action/authActions'\nimport {getItems} from '../../action/itemAction';\nimport {addOrder,getOrders} from '../../action/orderAction';\nimport {getCustomers} from '../../action/customerAction';\nimport {getCategories} from '../../action/categoryAction';\n\n\n\nconst schemaOrder = yup.object({\n    customer_id: yup.number().positive().integer().min(1,\"Choose Any Customer\"),\n    category_id: yup.number().positive().integer().min(1,\"Choose Any Category\"),\n    product_id: yup.string().min(9,\"Choose Any Product\"),\n    payment1: yup.number().positive().integer().min(1,\"Choose Any Payment Status\"),\n    quantity:yup.number().integer().min(1,\"Choose Atleast One Quantity\").max(100,'Max 100 Allowed/Order'),   \n    // total:yup.number().integer().min(1,\"Choose Any Product\")\n          \n})\n\n\n\nclass AddOrderModal extends Component{\n    state={\n       \n        modal:false,   // modal for adding item is false initially\n        msg:null,   \n    };\n\n    componentDidMount(){\n      this.props.getCustomers();\n      this.props.getCategories();\n      this.props.getItems();\n\n    }\n\n    componentDidUpdate(prevProps){\n\n        console.log(\"Add Order Called\");\n        const {error}=this.props;\n        if(error!==prevProps.error){\n            if(error.id===\"UPDATE_FAIL\"){\n                this.setState({msg:error.msg.msg});\n            }\n            else{\n                this.setState({msg:null});\n            }\n        }\n        // if authenticated close Modal\n        // if(this.state.modal){\n            \n        //     if(isAuthenticated){\n        //         this.toggle();\n        //     }\n        // }\n    }\n    static propTypes={\n        error:PropTypes.object.isRequired,\n        clearErrors:PropTypes.func.isRequired\n    }\n\n   toggle=()=>{   \n        this.props.clearErrors();\n        this.setState({\n            modal:!this.state.modal\n        })\n        console.log(\"Toggle:\",this.state.modal);\n        \n    }\n    \n\nrender(){\n\n  \n  \n  var customers=this.props.customers.length===0?[]:this.props.customers;\n  var products=this.props.products.length===0?[]:this.props.products;\n  var categories=this.props.categories.length===0?[]:this.props.categories;\n  \nconst  getCategory=(id)=>{\n      return categories.filter(cat=>cat.id===parseInt(id))[0].name;\n  }\n  // console.log(\"Category:\",getCategory(\"1254\"));\nconst getProducts=(id,products)=>{\n  if(id===\"0\")\n  return [];\n  let cat_name=getCategory(id);\n  return products.filter(p=>p.category===cat_name)\n}\n\nconst getPrice=(id)=>{\n  if(id!=='0'){\n    return products.filter(p=>p.id===id)[0].price;\n  }\n  return 0;\n}\n\nconsole.log(\"User:\",this.props.user);\n    return(\n        <div>\n          {/* <Prompt\n              when={this.state.isBlocking}\n                message={(location, action) => {\n                  // if (action === 'POP') {\n                    console.log(\"Backing up...\",action,location)\n                  // }\n\n                  return location.pathname.startsWith(\"/\")\n                    ? true\n                    : `Are you sure you want to Leave ${location.pathname}?`\n            }}\n          /> */}\n             {/* <Prompt\n                when={this.props.isBlocked}\n                message={(location)=> `Are You Sure Want To Leave ${location}`}\n/>  */}\n            <NavLink href=\"#\" onClick={this.toggle} >\n               <Button  style={{paddingLeft:' 1.5rem',paddingRight:'1.5rem'}}><b>Add Order</b></Button>\n            </NavLink>\n\n            <Modal show={this.state.modal} onHide={this.toggle} >\n                <Modal.Header  style={{color:'white', backgroundImage: `url(\"${back}\")`,backgroundSize:'32rem',backgroundRepeat:'no-repeat'}} closeButton ><b>Add Order</b></Modal.Header>\n                <Modal.Body>\n    {this.state.msg?<Alert color=\"danger\">{this.state.msg}</Alert>:null}\n   \n    <Formik\n      validationSchema={schemaOrder}\n      initialValues={{\n        customer_id:'0',\n        product_id:'0',\n        quantity:0,\n        total:0,\n        category_id:'0',\n        payment1:'0'\n\n      }}\n      onSubmit={(values)=>{ \n        \n        const {product_id,customer_id,quantity,payment1}=values;\n        let by_user_id=this.props.user?this.props.user._id:9;\n        let payment=parseInt(payment1)===1?\"Completed\":\"Pending\";\n        let total=quantity*getPrice(product_id)\n        console.log(product_id,customer_id,by_user_id,quantity,total,payment);\n        const newOrder={\n          product_id,customer_id,by_user_id,quantity,total,payment\n        }\n        this.props.addOrder(newOrder);\n        this.toggle();\n        setTimeout(()=>{\n          this.props.getOrders();\n        },1500)\n    }\n    }\n    >\n       \n      {({\n        handleSubmit,\n        handleChange,\n        values,\n        errors,\n         }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          \n          <Form.Row>\n            <Form.Group as={Col} md=\"6\">\n           \n              <Form.Label>Customer</Form.Label>\n              \n              <Form.Control\n                as=\"select\"\n                // type=\"password\"\n                placeholder=\"\"\n                name=\"customer_id\"\n                value={values.customer_id}\n                onChange={handleChange}\n                isInvalid={!!errors.customer_id}\n                \n              >\n                  <option value='0'>Choose Customer</option>\n\n                  {this.props.customers.map((customer,key)=>(\n                      <option value={customer.id}>{customer.fname+\" \"+customer.lname}</option>\n                  ))\n                        \n                  }\n                \n        \n              </Form.Control>\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.customer_id}\n              </Form.Control.Feedback>\n\n\n            </Form.Group>\n            <Form.Group as={Col} md=\"6\">\n             <Form.Label>Category</Form.Label>\n              \n              <Form.Control\n                as=\"select\"\n                // type=\"password\"\n                placeholder=\"\"\n                name=\"category_id\"\n                value={values.category_id}\n                onChange={handleChange}\n                isInvalid={!!errors.category_id}\n                \n              >\n                  <option value=\"0\">Choose Category</option>\n\n                  {categories.map((category,key)=>(\n                      <option value={category.id}>{category.name}</option>\n                  ))\n                        \n                  }\n                \n        \n              </Form.Control>\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.category_id}\n              </Form.Control.Feedback>\n            </Form.Group>\n           \n\n          </Form.Row>\n\n          <Form.Row>\n         <Form.Group as={Col} md=\"12\">\n             <Form.Label>Product Under Choosen Category</Form.Label>\n              \n              <Form.Control\n                as=\"select\"\n                placeholder=\"\"\n                name=\"product_id\"\n                value={values.product_id}\n                onChange={handleChange}\n                isInvalid={!!errors.product_id}\n              >\n                  <option value=\"0\">Choose Product</option>\n                  {getProducts(values.category_id,products).map((product,key)=>(\n                      <option style={{fontWeight:'bold'}} value={product.id}> #{key+1} | {product.name} | Price: ₹{product.price} | Stock: {product.stock}</option>\n                  ))\n                        \n                  }\n                \n        \n              </Form.Control>\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.product_id}\n              </Form.Control.Feedback>\n            </Form.Group>\n            </Form.Row>\n            <Form.Row>\n         <Form.Group as={Col} md=\"6\">\n             <Form.Label>Quantity</Form.Label>\n              \n              <Form.Control\n                type=\"number\"\n                placeholder=\"Quantity\"\n                name=\"quantity\"\n                value={values.quantity}\n                onChange={handleChange}\n                isInvalid={!!errors.quantity}\n              >\n                  \n                \n        \n              </Form.Control>\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.quantity}\n              </Form.Control.Feedback>\n            </Form.Group>\n         <Form.Group as={Col} md=\"6\">\n             <Form.Label>Total</Form.Label>\n              \n              <Form.Control\n              disabled\n                type=\"number\"\n                placeholder=\"total\"\n                name=\"total\"\n                value={values.quantity===0?values.total:values.quantity*parseInt(getPrice(values.product_id))}\n                onChange={handleChange}\n               \n              >\n            \n        \n              </Form.Control>\n      \n              \n            </Form.Group>\n            </Form.Row>\n            <Form.Row>\n            <Form.Group as={Col} md=\"12\">\n             <Form.Label>Payment</Form.Label>\n              \n              <Form.Control\n                as=\"select\"\n                placeholder=\"\"\n                name=\"payment1\"\n                value={values.payment1}\n                onChange={handleChange}\n                isInvalid={!!errors.payment1}\n              >\n                  <option value=\"0\">Choose Product</option>\n                  <option value=\"1\">Completed</option>\n                  <option value=\"2\">Pending</option>\n\n              </Form.Control>\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.payment1}\n              </Form.Control.Feedback>\n            </Form.Group>\n            </Form.Row>\n          <Button type=\"submit\">Add Order</Button>\n          \n                        </Form>\n                        \n                    )}\n                    </Formik>\n                </Modal.Body>          \n\n            </Modal>\n        </div>\n    );\n}\n}\nconst mapStateToProps= state=>{\n    return({\n        customers:state.customer.customers,\n        products:state.item.items,\n        categories:state.category.categories,\n        user:state.auth.user,\n        error:state.error\n    })\n}\n\n\nexport default connect(mapStateToProps,{loadUser,clearErrors,addOrder,getOrders,getCategories,getCustomers,getItems})(AddOrderModal);","import React,{useState,useEffect} from 'react';\nimport {connect} from 'react-redux'\nimport {getOrders,deleteOrder} from '../../action/orderAction';\nimport {getItems} from '../../action/itemAction';\nimport {getCustomers} from '../../action/customerAction';\nimport {NavLink} from 'react-router-dom'\nimport {Accordion, Button, Card, Col, Container,  DropdownButton, Row, Spinner, } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronCircleDown, faChevronCircleRight, faTrashAlt,faFilter, faSearch } from '@fortawesome/free-solid-svg-icons';\nimport avatar from '../../assets/images/avatar.png'\nimport EditOrderModal from './EditOrderModal';\nimport AddOrderModal from './AddOrderModal';\nimport './OrderList.css'\nconst OrderList=(props)=>{\n    \nconst [orders,setOrders]=useState([]);\nconst [q,setQ]=useState('');\nconst [isClient,setIsClient]=useState(true);\nconst [isProduct,setIsProduct]=useState(true);\nconst [isPayment,setIsPayment]=useState(true);\nconst [isTotal,setIsTotal]=useState(true);\nconst [open1,setOpen1]=useState(true);\nconst [open2,setOpen2]=useState(true);\n\n\nuseEffect(()=>{\n    props.getCustomers();\n    props.getItems();\n    props.getOrders();\n},[])\nuseEffect(()=>{ \n    if(props.orders.length!==0){\n    setOrders(props.orders)\n        // console.log(\"Order:\",props.orders);\n        // console.log(\"Order:\",props.products);\n}\n},[props.orders,props.products])\n\n\n\nconst getProductName=id=>{\n    if(props.products.length>0)\n    {\n    let product=props.products.filter(product=>product.id===id)\n    // console.log(\"Product from Order:\",product,id);\n    return product[0].name;\n    }\n    else\n    return \"Loading....\"\n}\nconst getCustomerName=id=>{\n    if(props.customers.length>0)\n    {\n    let customer=props.customers.filter(customer=>customer.id===id)\n    // console.log(\"Product from Order:\",customer,id);\n    return customer[0].fname+\" \"+customer[0].lname ;\n    }\n    else\n    return \"Loading....\"\n}\n\n\nconst getCustomerImage=id=>{\n    if(props.customers.length>0)\n    {\n    let customer=props.customers.filter(customer=>customer.id===id)\n    console.log(\"Customer:\",customer,id);\n    if(customer[0].img.length===0)\n    return avatar\n    else return customer[0].img\n    }\n    else\n    return \"Loading....\"\n}\n\n\n// const getCustomerAddress=id=>{\n//     if(props.customers.length>0)\n//     {\n//     let customer=props.customers.filter(customer=>customer.id===id)\n//     console.log(\"Product from Order:\",customer,id);\n//      return customer[0].address\n//     }\n//     else\n//     return \"Loading....\"\n// }\nconst getProductImage=id=>{\n    if(props.products.length>0)\n    {\n    let product=props.products.filter(product=>product.id===id)\n    // console.log(\"Product from Order:\",product,id);\n    return product[0].img;\n    }\n    else\n    return \"Loading....\"\n}\nconst getProductPrice=id=>{\n    if(props.products.length>0)\n    {\n    let product=props.products.filter(product=>product.id===id)\n    // console.log(\"Product from Order:\",product,id);\n    return product[0].price;\n    }\n    else\n    return \"Loading....\"\n}\nconst Search=(products)=>{    \n    \n    return (products.length!==0?products.filter(product=>\n\n           product.payment?product.payment.toLowerCase().indexOf(q.toLowerCase())!==-1 //str.includes(PATTERN)\n            // product.price.toLowerCase().indexOf(q.toLowerCase())!==-1 ||\n           \n            :''):'');\n\n    }\n\nreturn(\n    <>\n    \n    <Card style={{margin:'1rem',padding:'1rem'}}>\n        <Row style={{display:'flex',justifyContent:'space-between',alignItems:'center'}}>\n            <Col sm={8}>\n                <Row>\n                    <Col style={{display:'flex',flexDirection:'column'}}><h7><b>Orders</b></h7><span style={{color:'gray'}}>Pending/Completed Orders</span></Col>\n                    \n                </Row>\n            </Col>\n            <Col sm={2}>\n                <AddOrderModal/>\n            </Col>\n        </Row>\n    </Card>\n    <Card style={{margin:'1rem',padding:'0rem'}}>\n        <Container className=\"order-list\" >\n\n\n            <Card.Header>\n\n\n\n            <div className='header-filter'>\n                       \n                        <div className='search-bar' >\n                          <FontAwesomeIcon icon={faSearch} />\n\n                          <input type=\"text\" value={q} placeholder=\"Search Orders By Payments Only...\" onChange={(e)=>{setQ(e.target.value)}}/>\n                          \n                          \n                          </div>\n                          <div className='filter-icon'>\n                          <DropdownButton title={<FontAwesomeIcon icon={faFilter} />} className='filter-button' style={{borderRadius:'50%',background:'transparent',color:'#3c44b1',border:'none',boxShadow:'none'}}> \n                                \n                                <Row >\n         <div >\n                 <Card className=\"filter-card\" >\n\n                \n                    <Card.Body className=\"filter-body\" style={{width:'15rem',padding:'0rem'}}>\n                        {/* <Accordion defaultActiveKey=\"0\">\n                            <Card>\n                                <Accordion.Toggle style={{background:!open1?\"#fff\":'#f3f3f3'}} eventKey=\"0\" onClick={() => setOpen1(!open1)}>\n                                    <div className=\"accordion-header\" ><h6>Price</h6><FontAwesomeIcon style={{color:open1?\"red\":\"#3b44c1\"}} icon={open1?faChevronCircleRight:faChevronCircleDown} /></div>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse eventKey=\"0\">\n                                <Card.Body >\n                                  <div className=\"range-input\" ><span style={{color:'gray'}}><b>Min:</b></span><input  type='number' value={minRange} onChange={(e)=>setMinRange(e.target.value)}/>\n                                  </div>\n                                  <div className=\"range-input\"><span style={{color:'gray'}} ><b>Max:</b></span><input  type='number' value={maxRange} onChange={(e)=>setMaxRange(e.target.value)}/>\n                                </div></Card.Body>\n                                </Accordion.Collapse>\n                            </Card>\n                           \n                            </Accordion> */}\n                            <Accordion defaultActiveKey=\"1\">\n\n                            <Card>\n                            <Accordion.Toggle  style={{background:!open2?\"#fff\":'#f3f3f3'}} eventKey=\"1\" onClick={()=>setOpen2(!open2)}>\n                                    <div className=\"accordion-header\"><h6>Customize Columns</h6><FontAwesomeIcon style={{color:open2?\"red\":\"#3b44c1\"}} icon={open2?faChevronCircleRight:faChevronCircleDown}/></div>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse eventKey=\"1\">\n                                <Card.Body>\n                                    <Row><Col style={{display:'flex',paddingBottom:'.3rem'}} sm={6}><input style={{marginRight:'.3rem'}} type=\"checkbox\" checked={isClient} onChange={()=>setIsClient(!isClient)}/><h6>Client</h6></Col><Col style={{display:'flex',paddingBottom:'.3rem'}} sm={6} sm={6}><input style={{marginRight:'.3rem'}} type=\"checkbox\" checked={isProduct} onChange={()=>setIsProduct(!isProduct)}/><h6>Product</h6></Col></Row>\n                                    <Row><Col style={{display:'flex',paddingBottom:'.3rem'}} sm={6} sm={6}><input style={{marginRight:'.3rem'}} type=\"checkbox\" checked={isTotal} onChange={()=>setIsTotal(!isTotal)}/><h6>Total</h6></Col><Col style={{display:'flex',paddingBottom:'.3rem'}} sm={6} sm={6}><input style={{marginRight:'.3rem'}} type=\"checkbox\" checked={isPayment} onChange={()=>setIsPayment(!isPayment)}/><h6>Payment</h6></Col></Row>\n                                   \n                                </Card.Body>\n                                </Accordion.Collapse>\n                            </Card>\n                            </Accordion>\n                           \n                           \n   \n                </Card.Body>   \n                           \n                         \n                           </Card>\n                           </div>\n         </Row>    \n                                </DropdownButton>\n                          </div>\n                         \n                   </div>\n                   \n                <Row style={{width:'105%',fontWeight:'bold',color:'#3b44c1'}}>\n                    <Col  sm={1}>Order</Col>\n                    <Col style={{display:isClient?'':'none'}} sm={3}>Client</Col>\n                    <Col style={{display:isProduct?'':'none'}} sm={2}>Product</Col>\n                    <Col style={{display:isPayment?'':'none'}} sm={2}>Payment</Col>\n                    <Col style={{display:isTotal?'':'none'}} sm={2}>Total</Col>\n                </Row>\n            </Card.Header>\n        </Container>\n         <Container className=\"order-list\">\n        {orders.length===0?<Container><div style={{display:'flex',justifyContent:'center',alignItems:'center'}} ><Spinner style={{width:'5rem',height:'5rem'}} animation=\"border\" variant=\"primary\" /></div></Container>:\n            <>\n                {Search(orders).map((order,key)=>(\n                  \n                    <Card style={{padding:'0'}}>\n                       <Card.Body>\n                            <Row style={{display:'flex',alignItems:'center'}}>\n                                <Col sm={1} ><h7><b>#{key+1}</b></h7></Col>\n                                <Col style={{display:isClient?'':'none'}} sm={3} ><Row style={{display:'flex',alignItems:'center',width:'15rem'}}><img style={{borderRadius:'50%',border:'2px solid #3b44c1',height:'50px',width:'50px'}} src={getCustomerImage(order.customer_id)}/><Col style={{display:'flex',flexDirection:'column'}}><NavLink to='/admin/customers'><h7><b>{getCustomerName(order.customer_id)}</b></h7></NavLink></Col></Row></Col>\n                                <Col style={{display:isProduct?'':'none'}} sm={2} ><Row style={{display:'flex',alignItems:'center',width:'15rem'}}><img style={{height:'80px',width:'80px'}} src={getProductImage(order.product_id)}/><Col style={{display:'flex',flexDirection:'column'}}><NavLink to='/admin/products'><h7><b>{getProductName(order.product_id)}</b></h7></NavLink><span style={{color:'gray',fontSize:'12px'}}>Qty:<b>{order.quantity}</b></span></Col></Row></Col>\n                                <Col style={{display:isPayment?'':'none'}} sm={2} ><h7 style={{border:order.payment===\"Completed\"?'2px solid #1bc943':'2px solid #f83245',padding:'5px 15px',background:order.payment===\"Completed\"?'#e5f9ed':'#fff5f6',fontSize:'12px',fontWeight:'bold',color:order.payment===\"Pending\"?'#f83245':'#1bc943'}}>{order.payment}</h7></Col>\n                                <Col style={{display:isTotal?'':'none'}} sm={2} ><h7 style={{width:'10px'}}><b>₹{order.total}</b></h7></Col>\n                                <Col  sm={2} style={{display:'flex',justifyContent:'space-around'}}><EditOrderModal customer_img={getCustomerImage(order.customer_id)} product_price={getProductPrice(order.product_id)} customer_name={getCustomerName(order.customer_id)} product_img={getProductImage(order.product_id)} product_name={getProductName(order.product_id)} order={order}/><Button onClick={()=>props.deleteOrder(order.id)} style={{height:'31px',fontSize:'10px',padding:'.5rem .5rem',margin:'0rem'}} variant=\"danger\"><FontAwesomeIcon icon={faTrashAlt}/></Button></Col>\n                                \n                            </Row>\n                        </Card.Body>\n                            <Card.Footer style={{padding:'.2rem 2rem'}}>\n                                <Row style={{color:'gray',fontSize:'10px',padding:'0rem'}}><h7>Created On:</h7><span><b>{order.date}</b></span></Row>\n                            </Card.Footer>\n                    </Card>\n                ))}\n            </>\n        }\n    </Container>\n\n        <Container className=\"order-grid\">\n            <Row>\n            {orders.length===0?<Container><div style={{display:'flex',justifyContent:'center',alignItems:'center'}} ><Spinner style={{width:'5rem',height:'5rem'}} animation=\"border\" variant=\"primary\" /></div></Container>:\n            <>\n                {Search(orders).map((order,key)=>(\n                  \n                    <Card key={key} style={{width:'100%',padding:'0',margin:'1rem'}}>\n                       <Card.Header>\n                       <Row style={{display:'flex',alignItems:'center',width:'15rem'}}><img style={{borderRadius:'10px',border:'2px Solid #ebebeb',height:'90px',width:'90px'}} src={getProductImage(order.product_id)}/><Col style={{display:'flex',flexDirection:'column'}}><NavLink to='/admin/products'><h7><b>{getProductName(order.product_id)}</b></h7></NavLink><span style={{color:'gray',fontSize:'12px'}}>Qty:<b>{order.quantity}</b></span></Col></Row>\n                       </Card.Header>\n                       <Card.Body style={{color:'gray',fontSize:'12px'}}>\n\n                                {/* <Col sm={1} ><h7>#{key+1}</h7></Col>\n                                <Col sm={3} ><Row style={{display:'flex',alignItems:'center',width:'15rem'}}><img style={{borderRadius:'50%',border:'2px solid #3b44c1',height:'50px',width:'50px'}} src={getCustomerImage(order.customer_id)}/><Col style={{display:'flex',flexDirection:'column'}}><NavLink to='/admin/customers'><h7><b>{getCustomerName(order.customer_id)}</b></h7></NavLink></Col></Row></Col> */}\n                                \n                                <Row ><Col><h7 >Order:</h7><span><b>#{key+1}</b></span></Col></Row>\n                                <Row ><Col><div><h7>Client:</h7><NavLink to='/admin/customers'><span><b>{getCustomerName(order.customer_id)}</b></span></NavLink></div></Col></Row>\n                                <Row ><Col><div><h7>Created On:</h7><span><b>{order.date}</b></span></div></Col></Row>\n                                <Row ><Col><h7>Status:</h7><span style={{border:order.payment===\"Completed\"?'1px solid #1bc943':'1px solid #f83245',padding:'1px 5px',background:order.payment===\"Completed\"?'#e5f9ed':'#fff5f6',fontSize:'10px',fontWeight:'bold',color:order.payment===\"Pending\"?'#f83245':'#1bc943'}}>{order.payment}</span></Col><Col><h7 >Total:</h7><span><b>₹{order.total}</b></span></Col></Row>\n                               \n                                \n                           \n                        </Card.Body>\n                        <Card.Footer className=\"text-muted\">\n                                <Row style={{marginTop:'.5rem',display:'flex',justifyContent:'space-around',width:'50%'}}><EditOrderModal  customer_img={getCustomerImage(order.customer_id)} product_price={getProductPrice(order.product_id)} customer_name={getCustomerName(order.customer_id)} product_img={getProductImage(order.product_id)} product_name={getProductName(order.product_id)} order={order}/><Button  onClick={()=>props.deleteOrder(order.id)} style={{height:'31px',fontSize:'10px',padding:'.5rem .5rem',margin:'0rem'}} variant=\"danger\"><FontAwesomeIcon icon={faTrashAlt}/></Button></Row>\n                                   \n                        </Card.Footer>\n\n                    </Card>\n                ))}\n            </>\n        }\n            </Row>\n        </Container>\n    </Card>\n    </>\n)\n}\nconst mapStateToProps=state=>{\n    return{\n        isAuthenticated:state.auth.isAuthenticated,\n        orders:state.order.orders,\n        products:state.item.items,\n        customers:state.customer.customers\n    }\n}\nexport default connect(mapStateToProps,{getOrders,getItems,getCustomers,deleteOrder})(OrderList);"],"sourceRoot":""}