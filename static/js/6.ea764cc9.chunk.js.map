{"version":3,"sources":["action/customerAction.js","components/Customers/AddCustomerModal.js","components/Customers/CustomerList.js"],"names":["getCustomers","dispatch","setCustomerLoading","axios","get","then","res","type","GET_CUSTOMER","payload","data","catch","err","returnErrors","response","status","addCustomer","customer","post","ADD_CUSTOMER","deleteCustomer","id","console","log","body","JSON","stringify","headers","DELETE_CUSTOMER","CUSTOMERS_LOAD","schemaCustomer","yup","fname","min","max","required","lname","address","email","AddCustomerModal","state","modal","msg","imageURL","categories","props","toggle","clearErrors","setState","encodeImageFileAsURL","filesSelected","document","getElementById","files","length","fileToLoad","fileReader","FileReader","onload","fileLoadedEvent","srcData","target","result","newImage","createElement","src","readAsDataURL","this","prevProps","error","isAuthenticated","NavLink","onClick","href","Button","icon","faPlus","style","marginLeft","className","Modal","show","onHide","Header","color","backgroundImage","back","backgroundSize","backgroundRepeat","closeButton","Body","Alert","validationSchema","initialValues","img","onSubmit","values","by_user_id","user","_id","setTimeout","handleSubmit","handleChange","errors","Form","noValidate","Row","Group","as","Col","md","controlId","Label","Control","placeholder","aria-describedby","name","value","onChange","isInvalid","Feedback","InputGroup","Prepend","Text","File","Component","connect","category","auth","addItem","getCategories","customers","useState","setCustomers","useEffect","Card","margin","padding","display","justifyContent","alignItems","sm","flexDirection","Container","Spinner","width","height","animation","variant","map","key","alt","avatar","marginRight","textAlign","borderRadius","background","flex","float","size","faTrash","faEnvelope","faHome","substring","faCalendar","date"],"mappings":"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","file":"static/js/6.ea764cc9.chunk.js","sourcesContent":["import  {GET_CUSTOMER,ADD_CUSTOMER,DELETE_CUSTOMER, CUSTOMERS_LOAD} from './types';\nimport axios from 'axios';\n\nimport {returnErrors} from './errorActions';\n\nexport const getCustomers=()=> dispatch =>{\n    dispatch(setCustomerLoading());\n\n    axios.get('/customers').then(res=>\n    dispatch({\n        type:GET_CUSTOMER,\n        payload:res.data\n    }))\n    .catch(err=>dispatch(returnErrors(err.response.data,err.response.status)));   \n};\nexport const addCustomer=customer=> dispatch =>{\n    axios.post('/add_customer',customer)\n    .then(res=> dispatch({\n        type:ADD_CUSTOMER,\n        payload:res.data?res.data:{}\n    })).catch(err=>dispatch(returnErrors(err.response.data,err.response.status)));\n};\n\nexport const deleteCustomer=id=>dispatch=>{\n    console.log(\"Id of Customer\",id);\n    const config={\n        headers:{'Content-Type':'application/json'}\n    }\n    const body=JSON.stringify({id});\n    console.log(\"Action Order Id\",id);\n    axios.post('/delete_customer',body,config).then(\n        res=>dispatch({\n            type:DELETE_CUSTOMER,\n            payload:id\n        })\n    ).catch(err=>dispatch(returnErrors(err.response.data,err.response.status)));\n}\n\n\n// export const deleteSelectedORDER=ids=>dispatch=>{\n//     console.log(\"Id of ORDER\",ids);\n//     const config={\n//         headers:{'Content-Type':'application/json'}\n//     }\n//     var body=JSON.stringify({ids});\n//     var {ids}=body\n//     console.log(\"Action Product Id\",typeof ids);\n//     console.log(\"Body\",body,body[0],ids);\n//     axios.post('/delete_selected_product',body,config).then(\n//         res=>dispatch({\n//             type:DELETE_SELECTED_ORDER,\n//             payload:ids\n//         })\n//     ).catch(err=>dispatch(returnErrors(err.response.data,err.response.status)));\n// }\n\n\n\n// export const updateOrder=({id,name,manufacturer,description,stock,price,rating})=>dispatch=>{\n//     console.log(\"Id of ORDER\",id);\n//     const config={\n//         headers:{'Content-Type':'application/json'}\n//     }\n//     const body=JSON.stringify({id,name,description,manufacturer,price,stock,rating});\n//     console.log(\"Action Product Id\",id);\n//     axios.post('/update_product',body,config).then(\n//         res=>dispatch({\n//             type:UPDATE_ORDER,\n//             payload:res.data\n//         })\n//     ).catch(err=>dispatch(returnErrors(err.response.data,err.response.status)));\n// }\n\n\nexport const setCustomerLoading=()=>{\n    return{\n        type:CUSTOMERS_LOAD\n    };\n}","import React,{Component} from 'react';\nimport {Col, Alert,NavLink, Button, Modal,Form, InputGroup} from 'react-bootstrap';\n\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {addItem} from '../../action/itemAction';\nimport {getCategories} from '../../action/categoryAction';\n\nimport {clearErrors}  from '../../action/errorActions';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\nimport back from '../../assets/images/back.jpg';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport {addCustomer,getCustomers} from '../../action/customerAction';\n\n\n// import e from 'express';\nconst schemaCustomer = yup.object({\n    fname: yup.string().min(3, 'First Name must be at least 3 characters').max(24, 'Last Name can be maximum 20 characters').required(),\n    lname: yup.string().min(3, 'Last Name must be at least 3 characters').max(24, 'Last Name can be maximum 20 characters').required(),\n    address: yup.string().max(100,\"Address length must be less than 100 Chars\").required(),\n    email: yup.string().email('Invalid email').required(),\n})\n\nclass AddCustomerModal extends Component{\n    state={\n        modal:false,   // modal for adding item is false initially\n        msg:null,\n        imageURL:'',\n        categories:this.props.categories\n    };\n    componentDidMount(){\n      // this.props.getCategories();\n      this.setState({categories:this.props.categories})\n    }\n    componentDidUpdate(prevProps){\n        const {error,isAuthenticated}=this.props;\n        if(error!==prevProps.error){\n            if(error.id===\"LOGIN_FAIL\"){\n                this.setState({msg:error.msg.msg});\n            }\n            else{\n                this.setState({msg:null});\n            }\n        }\n        \n    }\n    static propTypes={\n        isAuthenticated:PropTypes.bool,\n        error:PropTypes.object.isRequired,\n        login:PropTypes.func.isRequired,\n        clearErrors:PropTypes.func.isRequired\n    }\n\n    toggle=()=>{  \n        // clear the error\n        this.props.clearErrors();\n        // to toggle the modal \n        console.log(this.state.modal)\n        this.setState({\n            modal:!this.state.modal\n        })\n    }\n\n\n    encodeImageFileAsURL=()=> {\n      console.log(\"image uploading func. called\");\n      var filesSelected = document.getElementById(\"inputFileToLoad\").files;\n      if (filesSelected.length > 0) {\n        var fileToLoad = filesSelected[0];\n  \n        var fileReader = new FileReader();\n  \n        fileReader.onload = (fileLoadedEvent)=> {\n          var srcData = fileLoadedEvent.target.result; // <--- data: base64\n  \n          var newImage = document.createElement('img');\n          newImage.src = srcData;\n          this.setState({imageURL:newImage.src});\n          // console.log(\"ImageURL:\",this.state.imageURL);\n         \n        }\n        fileReader.readAsDataURL(fileToLoad);\n      }\n\n    }\nrender(){\n  console.log(\"Categories:\",this.state.categories);\n    return(\n        <div>\n             <NavLink onClick={this.toggle} href=\"#\">\n            <Button><FontAwesomeIcon  icon={faPlus}/><h7 style={{marginLeft:'.3rem'}} className=\"newproductbuttontext\">Add New</h7></Button>\n            </NavLink>\n\n            <Modal show={this.state.modal} onHide={this.toggle} >\n                <Modal.Header  style={{color:'white', backgroundImage: `url(\"${back}\")`,backgroundSize:'32rem',backgroundRepeat:'no-repeat'}} closeButton ><b>Add Customer</b></Modal.Header>\n                <Modal.Body>\n    {this.state.msg?<Alert color=\"danger\">{this.state.msg}</Alert>:null}\n\n\n\n\n\n    <Formik\n      validationSchema={schemaCustomer}\n     \n\n      initialValues={{\n        fname:\"\",\n        lname:\"\",\n        email:\"\",\n        address:\"\",\n        img:\"\"\n      }}\n      onSubmit={(values)=>{ \n       \n        const {fname,lname,address,email}=values;\n        // this.encodeImageFileAsURL();   \n        let img=this.state.imageURL;\n        console.log(\"Image:\",img);\n        const by_user_id=this.props.user?this.props.user._id:'';\n        const customer={\n          fname,lname,email,address,img,by_user_id\n        }\n        console.log(\"New Customer:\",customer);\n      //  console.log(\"Name:\",name,\" Des:\",description,\" Manu:\",manufacturer,\" price:\",price,\" Stock:\",stock,\" Img:\",img,\"  Cat\",CategoryName,\" User:\",user);\n        this.props.addCustomer(customer);\n        \n        this.toggle();\n        setTimeout(()=>{\n            this.props.getCustomers();\n        },1000);\n       }\n     }\n    >\n      {({\n        handleSubmit,\n        handleChange,\n        values,\n        errors,\n         }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          \n          \n          <Form.Row>\n          <Form.Group as={Col} md=\"6\" controlId=\"validationFormik01\">\n              <Form.Label>First Name</Form.Label>\n              \n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"First Name\"\n                  aria-describedby=\"inputGroupPrepend\"\n                  name=\"fname\"\n                  value={values.fname}\n                  onChange={handleChange}\n                  isInvalid={!!errors.fname}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.fname}\n                </Form.Control.Feedback>\n              \n            </Form.Group>\n          <Form.Group as={Col} md=\"6\" controlId=\"validationFormik01\">\n              <Form.Label>Last Name</Form.Label>\n              \n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Last  Name\"\n                  aria-describedby=\"inputGroupPrepend\"\n                  name=\"lname\"\n                  value={values.lname}\n                  onChange={handleChange}\n                  isInvalid={!!errors.lname}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.lname}\n                </Form.Control.Feedback>\n              \n            </Form.Group>\n            </Form.Row>\n            <Form.Row>\n            <Form.Group as={Col} md=\"12\" controlId=\"validationFormik02\">\n              <Form.Label>Email</Form.Label>\n              <InputGroup>\n                <InputGroup.Prepend>\n                  <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n                </InputGroup.Prepend>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Email\"\n                name=\"email\"\n                value={values.email}\n                onChange={handleChange}\n                isInvalid={!!errors.email}\n              />\n\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.email}\n              </Form.Control.Feedback>\n              </InputGroup>\n            </Form.Group>\n\n          </Form.Row>\n            <Form.Row>\n            <Form.Group as={Col} md=\"12\" controlId=\"validationFormik03\">\n              <Form.Label>Address</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Address\"\n                name=\"address\"\n                value={values.address}\n                onChange={handleChange}\n                isInvalid={!!errors.address}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.address}\n              </Form.Control.Feedback>\n            </Form.Group>\n\n          </Form.Row>\n\n            <Form.Row>\n\n            <Form.Group as={Col} md=\"7\" controlId=\"validationFormik07\">\n                <div className=\"mb-3\">\n                    <Form.File id=\"formcheck-api-regular\">\n                    <Form.File.Label>Customer Image</Form.File.Label>\n                    <input id=\"inputFileToLoad\"  type=\"file\" onChange={this.encodeImageFileAsURL} />\n                    </Form.File>\n                </div>\n            </Form.Group>\n\n          </Form.Row>\n          \n          <Button type=\"submit\">Submit</Button>\n        </Form>\n      )}\n    </Formik>\n                </Modal.Body>\n\n            </Modal>\n        </div>\n    );\n}\n}\nconst mapStateToProps= state=>{\n    return({\n        categories:state.category.categories,\n        user:state.auth.user,\n        error:state.error\n    })\n}\n\n\nexport default connect(mapStateToProps,{getCustomers,clearErrors,addItem,getCategories,addCustomer})(AddCustomerModal);","import React,{useState,useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {getCustomers,deleteCustomer} from '../../action/customerAction';\nimport {Row,Container,Col, Spinner, Card, Button} from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {  faCalendar, faEnvelope, faHome, faTrash} from '@fortawesome/free-solid-svg-icons';\nimport './CustomerList.css'\nimport AddCustomerModal from './AddCustomerModal';\nimport avatar from '../../assets/images/avatar.png'\n\nconst CustomerList=(props)=>{\n    const [customers,setCustomers]=useState([]);\n    useEffect(()=>{\n        props.getCustomers();\n    },[])\n    useEffect(()=>{\n        if(props.customers.length>0){\n            setCustomers(props.customers);\n            console.log(\"Customers:\",customers);\n        }\n    },[props.customers]);\n    return(\n            <div>\n            <Card style={{margin:'1rem',padding:'1rem'}}>\n        <Row style={{display:'flex',justifyContent:'space-between',alignItems:'center'}}>\n            <Col sm={9}>\n                <Row>\n                    <Col style={{display:'flex',flexDirection:'column'}}><h7><b>Customers</b></h7><span style={{color:'gray'}}>Our Loving Customers</span></Col>\n                    \n                </Row>\n            </Col>\n            <Col sm={2}>\n               <AddCustomerModal/>\n            </Col>\n        </Row>\n    </Card>\n            <Container>\n               <Container>\n                   \n                    {props.customers.length===0?<Spinner style={{width:'5rem',height:'5rem'}} animation=\"border\" variant=\"primary\" />:\n                   <Row>{props.customers.map((customer,key)=>(\n                       <>\n                       <div>\n                        <Card style={{width:'18rem',height:'11.5rem',margin:'1rem'}} key={key}>\n                            <Card.Header>\n\n                                <Row style={{width:'100%',display:'flex',alignItems:'center',justifyContent:'space-around'}}>{customer.img?<img alt=\"alt\" src={customer.img?customer.img:{avatar}} style={{marginRight:'1rem',textAlign:'center',color:'white',borderRadius:'50%',width:'3rem',height:'3rem',background:'#ed3f2f'}}/>:<div style={{marginRight:'1rem',textAlign:'center',padding:'.8rem',color:'white',borderRadius:'50%',width:'3rem',height:'3rem',background:'#ed3f2f'}}>{customer.fname[0]+customer.lname[0]}</div>}<h7>{customer.fname+\" \"+customer.lname}</h7><div style={{flex:1}}><Button onClick={()=>props.deleteCustomer(customer.id)} style={{float:'right'}} variant=\"danger\" size=\"sm\"><FontAwesomeIcon icon={faTrash}/></Button></div></Row>\n\n                            </Card.Header>\n                            <Card.Body style={{marginLeft:'1rem'}}>\n                                <Row style={{display:'flex',alignItems:'center',color:'gray'}}><FontAwesomeIcon style={{marginRight:'.5rem'}} icon={faEnvelope}/>{customer.email}</Row>\n                                <Row style={{display:'flex',alignItems:'center',color:'gray'}}><FontAwesomeIcon style={{marginRight:'.5rem'}} icon={faHome}/>{customer.address?customer.address.substring(0,25):''}...</Row>\n                                <Row style={{display:'flex',alignItems:'center',color:'gray'}}><FontAwesomeIcon style={{marginRight:'.5rem'}} icon={faCalendar}/>{customer.date}</Row>\n                            </Card.Body>\n                            \n                        </Card>\n                        </div>\n                         \n                         </>\n                   ))\n\n                    }</Row>\n                    \n                    }\n                    \n                </Container>\n                </Container>\n            </div>\n\n    )\n}\n\n\nconst mapStateToProps=state=>{\n    return{\n        customers:state.customer.customers\n    }\n}\nexport default connect(mapStateToProps,{getCustomers,deleteCustomer})(CustomerList);"],"sourceRoot":""}